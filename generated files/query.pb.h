// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: query.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_query_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_query_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_query_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_query_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_query_2eproto;
namespace dp {
namespace service {
namespace query {
class PvNameList;
struct PvNameListDefaultTypeInternal;
extern PvNameListDefaultTypeInternal _PvNameList_default_instance_;
class PvNamePattern;
struct PvNamePatternDefaultTypeInternal;
extern PvNamePatternDefaultTypeInternal _PvNamePattern_default_instance_;
class QueryDataRequest;
struct QueryDataRequestDefaultTypeInternal;
extern QueryDataRequestDefaultTypeInternal _QueryDataRequest_default_instance_;
class QueryDataRequest_CursorOperation;
struct QueryDataRequest_CursorOperationDefaultTypeInternal;
extern QueryDataRequest_CursorOperationDefaultTypeInternal _QueryDataRequest_CursorOperation_default_instance_;
class QueryDataRequest_QuerySpec;
struct QueryDataRequest_QuerySpecDefaultTypeInternal;
extern QueryDataRequest_QuerySpecDefaultTypeInternal _QueryDataRequest_QuerySpec_default_instance_;
class QueryDataResponse;
struct QueryDataResponseDefaultTypeInternal;
extern QueryDataResponseDefaultTypeInternal _QueryDataResponse_default_instance_;
class QueryDataResponse_QueryData;
struct QueryDataResponse_QueryDataDefaultTypeInternal;
extern QueryDataResponse_QueryDataDefaultTypeInternal _QueryDataResponse_QueryData_default_instance_;
class QueryDataResponse_QueryData_DataBucket;
struct QueryDataResponse_QueryData_DataBucketDefaultTypeInternal;
extern QueryDataResponse_QueryData_DataBucketDefaultTypeInternal _QueryDataResponse_QueryData_DataBucket_default_instance_;
class QueryMetadataRequest;
struct QueryMetadataRequestDefaultTypeInternal;
extern QueryMetadataRequestDefaultTypeInternal _QueryMetadataRequest_default_instance_;
class QueryMetadataResponse;
struct QueryMetadataResponseDefaultTypeInternal;
extern QueryMetadataResponseDefaultTypeInternal _QueryMetadataResponse_default_instance_;
class QueryMetadataResponse_MetadataResult;
struct QueryMetadataResponse_MetadataResultDefaultTypeInternal;
extern QueryMetadataResponse_MetadataResultDefaultTypeInternal _QueryMetadataResponse_MetadataResult_default_instance_;
class QueryMetadataResponse_MetadataResult_PvInfo;
struct QueryMetadataResponse_MetadataResult_PvInfoDefaultTypeInternal;
extern QueryMetadataResponse_MetadataResult_PvInfoDefaultTypeInternal _QueryMetadataResponse_MetadataResult_PvInfo_default_instance_;
class QueryTableRequest;
struct QueryTableRequestDefaultTypeInternal;
extern QueryTableRequestDefaultTypeInternal _QueryTableRequest_default_instance_;
class QueryTableResponse;
struct QueryTableResponseDefaultTypeInternal;
extern QueryTableResponseDefaultTypeInternal _QueryTableResponse_default_instance_;
class QueryTableResponse_ColumnTable;
struct QueryTableResponse_ColumnTableDefaultTypeInternal;
extern QueryTableResponse_ColumnTableDefaultTypeInternal _QueryTableResponse_ColumnTable_default_instance_;
class QueryTableResponse_RowMapTable;
struct QueryTableResponse_RowMapTableDefaultTypeInternal;
extern QueryTableResponse_RowMapTableDefaultTypeInternal _QueryTableResponse_RowMapTable_default_instance_;
class QueryTableResponse_RowMapTable_DataRow;
struct QueryTableResponse_RowMapTable_DataRowDefaultTypeInternal;
extern QueryTableResponse_RowMapTable_DataRowDefaultTypeInternal _QueryTableResponse_RowMapTable_DataRow_default_instance_;
class QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse;
struct QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUseDefaultTypeInternal;
extern QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUseDefaultTypeInternal _QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse_default_instance_;
class QueryTableResponse_TableResult;
struct QueryTableResponse_TableResultDefaultTypeInternal;
extern QueryTableResponse_TableResultDefaultTypeInternal _QueryTableResponse_TableResult_default_instance_;
}  // namespace query
}  // namespace service
}  // namespace dp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dp {
namespace service {
namespace query {
enum QueryDataRequest_CursorOperation_CursorOperationType : int {
  QueryDataRequest_CursorOperation_CursorOperationType_CURSOR_OP_NEXT = 0,
  QueryDataRequest_CursorOperation_CursorOperationType_QueryDataRequest_CursorOperation_CursorOperationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QueryDataRequest_CursorOperation_CursorOperationType_QueryDataRequest_CursorOperation_CursorOperationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool QueryDataRequest_CursorOperation_CursorOperationType_IsValid(int value);
extern const uint32_t QueryDataRequest_CursorOperation_CursorOperationType_internal_data_[];
constexpr QueryDataRequest_CursorOperation_CursorOperationType QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_MIN = static_cast<QueryDataRequest_CursorOperation_CursorOperationType>(0);
constexpr QueryDataRequest_CursorOperation_CursorOperationType QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_MAX = static_cast<QueryDataRequest_CursorOperation_CursorOperationType>(0);
constexpr int QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
QueryDataRequest_CursorOperation_CursorOperationType_descriptor();
template <typename T>
const std::string& QueryDataRequest_CursorOperation_CursorOperationType_Name(T value) {
  static_assert(std::is_same<T, QueryDataRequest_CursorOperation_CursorOperationType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CursorOperationType_Name().");
  return QueryDataRequest_CursorOperation_CursorOperationType_Name(static_cast<QueryDataRequest_CursorOperation_CursorOperationType>(value));
}
template <>
inline const std::string& QueryDataRequest_CursorOperation_CursorOperationType_Name(QueryDataRequest_CursorOperation_CursorOperationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QueryDataRequest_CursorOperation_CursorOperationType_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool QueryDataRequest_CursorOperation_CursorOperationType_Parse(absl::string_view name, QueryDataRequest_CursorOperation_CursorOperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryDataRequest_CursorOperation_CursorOperationType>(
      QueryDataRequest_CursorOperation_CursorOperationType_descriptor(), name, value);
}
enum QueryTableRequest_TableResultFormat : int {
  QueryTableRequest_TableResultFormat_TABLE_FORMAT_ROW_MAP = 0,
  QueryTableRequest_TableResultFormat_TABLE_FORMAT_COLUMN = 1,
  QueryTableRequest_TableResultFormat_QueryTableRequest_TableResultFormat_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  QueryTableRequest_TableResultFormat_QueryTableRequest_TableResultFormat_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool QueryTableRequest_TableResultFormat_IsValid(int value);
extern const uint32_t QueryTableRequest_TableResultFormat_internal_data_[];
constexpr QueryTableRequest_TableResultFormat QueryTableRequest_TableResultFormat_TableResultFormat_MIN = static_cast<QueryTableRequest_TableResultFormat>(0);
constexpr QueryTableRequest_TableResultFormat QueryTableRequest_TableResultFormat_TableResultFormat_MAX = static_cast<QueryTableRequest_TableResultFormat>(1);
constexpr int QueryTableRequest_TableResultFormat_TableResultFormat_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
QueryTableRequest_TableResultFormat_descriptor();
template <typename T>
const std::string& QueryTableRequest_TableResultFormat_Name(T value) {
  static_assert(std::is_same<T, QueryTableRequest_TableResultFormat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TableResultFormat_Name().");
  return QueryTableRequest_TableResultFormat_Name(static_cast<QueryTableRequest_TableResultFormat>(value));
}
template <>
inline const std::string& QueryTableRequest_TableResultFormat_Name(QueryTableRequest_TableResultFormat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<QueryTableRequest_TableResultFormat_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool QueryTableRequest_TableResultFormat_Parse(absl::string_view name, QueryTableRequest_TableResultFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryTableRequest_TableResultFormat>(
      QueryTableRequest_TableResultFormat_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class QueryDataRequest_CursorOperation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataRequest.CursorOperation) */ {
 public:
  inline QueryDataRequest_CursorOperation() : QueryDataRequest_CursorOperation(nullptr) {}
  ~QueryDataRequest_CursorOperation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataRequest_CursorOperation(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataRequest_CursorOperation(const QueryDataRequest_CursorOperation& from) : QueryDataRequest_CursorOperation(nullptr, from) {}
  inline QueryDataRequest_CursorOperation(QueryDataRequest_CursorOperation&& from) noexcept
      : QueryDataRequest_CursorOperation(nullptr, std::move(from)) {}
  inline QueryDataRequest_CursorOperation& operator=(const QueryDataRequest_CursorOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataRequest_CursorOperation& operator=(QueryDataRequest_CursorOperation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataRequest_CursorOperation& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataRequest_CursorOperation* internal_default_instance() {
    return reinterpret_cast<const QueryDataRequest_CursorOperation*>(
        &_QueryDataRequest_CursorOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryDataRequest_CursorOperation& a, QueryDataRequest_CursorOperation& b) { a.Swap(&b); }
  inline void Swap(QueryDataRequest_CursorOperation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataRequest_CursorOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataRequest_CursorOperation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataRequest_CursorOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataRequest_CursorOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataRequest_CursorOperation& from) { QueryDataRequest_CursorOperation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataRequest_CursorOperation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataRequest.CursorOperation"; }

 protected:
  explicit QueryDataRequest_CursorOperation(::google::protobuf::Arena* arena);
  QueryDataRequest_CursorOperation(::google::protobuf::Arena* arena, const QueryDataRequest_CursorOperation& from);
  QueryDataRequest_CursorOperation(::google::protobuf::Arena* arena, QueryDataRequest_CursorOperation&& from) noexcept
      : QueryDataRequest_CursorOperation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CursorOperationType = QueryDataRequest_CursorOperation_CursorOperationType;
  static constexpr CursorOperationType CURSOR_OP_NEXT = QueryDataRequest_CursorOperation_CursorOperationType_CURSOR_OP_NEXT;
  static inline bool CursorOperationType_IsValid(int value) {
    return QueryDataRequest_CursorOperation_CursorOperationType_IsValid(value);
  }
  static constexpr CursorOperationType CursorOperationType_MIN = QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_MIN;
  static constexpr CursorOperationType CursorOperationType_MAX = QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_MAX;
  static constexpr int CursorOperationType_ARRAYSIZE = QueryDataRequest_CursorOperation_CursorOperationType_CursorOperationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* CursorOperationType_descriptor() {
    return QueryDataRequest_CursorOperation_CursorOperationType_descriptor();
  }
  template <typename T>
  static inline const std::string& CursorOperationType_Name(T value) {
    return QueryDataRequest_CursorOperation_CursorOperationType_Name(value);
  }
  static inline bool CursorOperationType_Parse(absl::string_view name, CursorOperationType* value) {
    return QueryDataRequest_CursorOperation_CursorOperationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCursorOperationTypeFieldNumber = 1,
  };
  // .dp.service.query.QueryDataRequest.CursorOperation.CursorOperationType cursorOperationType = 1;
  void clear_cursoroperationtype() ;
  ::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType cursoroperationtype() const;
  void set_cursoroperationtype(::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType value);

  private:
  ::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType _internal_cursoroperationtype() const;
  void _internal_set_cursoroperationtype(::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataRequest.CursorOperation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataRequest_CursorOperation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataRequest_CursorOperation& from_msg);
    int cursoroperationtype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class PvNamePattern final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.PvNamePattern) */ {
 public:
  inline PvNamePattern() : PvNamePattern(nullptr) {}
  ~PvNamePattern() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PvNamePattern(
      ::google::protobuf::internal::ConstantInitialized);

  inline PvNamePattern(const PvNamePattern& from) : PvNamePattern(nullptr, from) {}
  inline PvNamePattern(PvNamePattern&& from) noexcept
      : PvNamePattern(nullptr, std::move(from)) {}
  inline PvNamePattern& operator=(const PvNamePattern& from) {
    CopyFrom(from);
    return *this;
  }
  inline PvNamePattern& operator=(PvNamePattern&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PvNamePattern& default_instance() {
    return *internal_default_instance();
  }
  static inline const PvNamePattern* internal_default_instance() {
    return reinterpret_cast<const PvNamePattern*>(
        &_PvNamePattern_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(PvNamePattern& a, PvNamePattern& b) { a.Swap(&b); }
  inline void Swap(PvNamePattern* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PvNamePattern* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PvNamePattern* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PvNamePattern>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PvNamePattern& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PvNamePattern& from) { PvNamePattern::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PvNamePattern* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.PvNamePattern"; }

 protected:
  explicit PvNamePattern(::google::protobuf::Arena* arena);
  PvNamePattern(::google::protobuf::Arena* arena, const PvNamePattern& from);
  PvNamePattern(::google::protobuf::Arena* arena, PvNamePattern&& from) noexcept
      : PvNamePattern(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternFieldNumber = 1,
  };
  // string pattern = 1;
  void clear_pattern() ;
  const std::string& pattern() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pattern(Arg_&& arg, Args_... args);
  std::string* mutable_pattern();
  PROTOBUF_NODISCARD std::string* release_pattern();
  void set_allocated_pattern(std::string* value);

  private:
  const std::string& _internal_pattern() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pattern(
      const std::string& value);
  std::string* _internal_mutable_pattern();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.PvNamePattern)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PvNamePattern_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PvNamePattern& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pattern_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class PvNameList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.PvNameList) */ {
 public:
  inline PvNameList() : PvNameList(nullptr) {}
  ~PvNameList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PvNameList(
      ::google::protobuf::internal::ConstantInitialized);

  inline PvNameList(const PvNameList& from) : PvNameList(nullptr, from) {}
  inline PvNameList(PvNameList&& from) noexcept
      : PvNameList(nullptr, std::move(from)) {}
  inline PvNameList& operator=(const PvNameList& from) {
    CopyFrom(from);
    return *this;
  }
  inline PvNameList& operator=(PvNameList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PvNameList& default_instance() {
    return *internal_default_instance();
  }
  static inline const PvNameList* internal_default_instance() {
    return reinterpret_cast<const PvNameList*>(
        &_PvNameList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(PvNameList& a, PvNameList& b) { a.Swap(&b); }
  inline void Swap(PvNameList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PvNameList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PvNameList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PvNameList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PvNameList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PvNameList& from) { PvNameList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PvNameList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.PvNameList"; }

 protected:
  explicit PvNameList(::google::protobuf::Arena* arena);
  PvNameList(::google::protobuf::Arena* arena, const PvNameList& from);
  PvNameList(::google::protobuf::Arena* arena, PvNameList&& from) noexcept
      : PvNameList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPvNamesFieldNumber = 1,
  };
  // repeated string pvNames = 1;
  int pvnames_size() const;
  private:
  int _internal_pvnames_size() const;

  public:
  void clear_pvnames() ;
  const std::string& pvnames(int index) const;
  std::string* mutable_pvnames(int index);
  void set_pvnames(int index, const std::string& value);
  void set_pvnames(int index, std::string&& value);
  void set_pvnames(int index, const char* value);
  void set_pvnames(int index, const char* value, std::size_t size);
  void set_pvnames(int index, absl::string_view value);
  std::string* add_pvnames();
  void add_pvnames(const std::string& value);
  void add_pvnames(std::string&& value);
  void add_pvnames(const char* value);
  void add_pvnames(const char* value, std::size_t size);
  void add_pvnames(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pvnames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pvnames();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.PvNameList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PvNameList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PvNameList& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> pvnames_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableRequest) */ {
 public:
  inline QueryTableRequest() : QueryTableRequest(nullptr) {}
  ~QueryTableRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableRequest(const QueryTableRequest& from) : QueryTableRequest(nullptr, from) {}
  inline QueryTableRequest(QueryTableRequest&& from) noexcept
      : QueryTableRequest(nullptr, std::move(from)) {}
  inline QueryTableRequest& operator=(const QueryTableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableRequest& operator=(QueryTableRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableRequest& default_instance() {
    return *internal_default_instance();
  }
  enum PvNameSpecCase {
    kPvNameList = 11,
    kPvNamePattern = 12,
    PVNAMESPEC_NOT_SET = 0,
  };
  static inline const QueryTableRequest* internal_default_instance() {
    return reinterpret_cast<const QueryTableRequest*>(
        &_QueryTableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryTableRequest& a, QueryTableRequest& b) { a.Swap(&b); }
  inline void Swap(QueryTableRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableRequest& from) { QueryTableRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableRequest"; }

 protected:
  explicit QueryTableRequest(::google::protobuf::Arena* arena);
  QueryTableRequest(::google::protobuf::Arena* arena, const QueryTableRequest& from);
  QueryTableRequest(::google::protobuf::Arena* arena, QueryTableRequest&& from) noexcept
      : QueryTableRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TableResultFormat = QueryTableRequest_TableResultFormat;
  static constexpr TableResultFormat TABLE_FORMAT_ROW_MAP = QueryTableRequest_TableResultFormat_TABLE_FORMAT_ROW_MAP;
  static constexpr TableResultFormat TABLE_FORMAT_COLUMN = QueryTableRequest_TableResultFormat_TABLE_FORMAT_COLUMN;
  static inline bool TableResultFormat_IsValid(int value) {
    return QueryTableRequest_TableResultFormat_IsValid(value);
  }
  static constexpr TableResultFormat TableResultFormat_MIN = QueryTableRequest_TableResultFormat_TableResultFormat_MIN;
  static constexpr TableResultFormat TableResultFormat_MAX = QueryTableRequest_TableResultFormat_TableResultFormat_MAX;
  static constexpr int TableResultFormat_ARRAYSIZE = QueryTableRequest_TableResultFormat_TableResultFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TableResultFormat_descriptor() {
    return QueryTableRequest_TableResultFormat_descriptor();
  }
  template <typename T>
  static inline const std::string& TableResultFormat_Name(T value) {
    return QueryTableRequest_TableResultFormat_Name(value);
  }
  static inline bool TableResultFormat_Parse(absl::string_view name, TableResultFormat* value) {
    return QueryTableRequest_TableResultFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kBeginTimeFieldNumber = 2,
    kEndTimeFieldNumber = 3,
    kFormatFieldNumber = 1,
    kPvNameListFieldNumber = 11,
    kPvNamePatternFieldNumber = 12,
  };
  // .Timestamp beginTime = 2;
  bool has_begintime() const;
  void clear_begintime() ;
  const ::Timestamp& begintime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_begintime();
  ::Timestamp* mutable_begintime();
  void set_allocated_begintime(::Timestamp* value);
  void unsafe_arena_set_allocated_begintime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_begintime();

  private:
  const ::Timestamp& _internal_begintime() const;
  ::Timestamp* _internal_mutable_begintime();

  public:
  // .Timestamp endTime = 3;
  bool has_endtime() const;
  void clear_endtime() ;
  const ::Timestamp& endtime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_endtime();
  ::Timestamp* mutable_endtime();
  void set_allocated_endtime(::Timestamp* value);
  void unsafe_arena_set_allocated_endtime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_endtime();

  private:
  const ::Timestamp& _internal_endtime() const;
  ::Timestamp* _internal_mutable_endtime();

  public:
  // .dp.service.query.QueryTableRequest.TableResultFormat format = 1;
  void clear_format() ;
  ::dp::service::query::QueryTableRequest_TableResultFormat format() const;
  void set_format(::dp::service::query::QueryTableRequest_TableResultFormat value);

  private:
  ::dp::service::query::QueryTableRequest_TableResultFormat _internal_format() const;
  void _internal_set_format(::dp::service::query::QueryTableRequest_TableResultFormat value);

  public:
  // .dp.service.query.PvNameList pvNameList = 11;
  bool has_pvnamelist() const;
  private:
  bool _internal_has_pvnamelist() const;

  public:
  void clear_pvnamelist() ;
  const ::dp::service::query::PvNameList& pvnamelist() const;
  PROTOBUF_NODISCARD ::dp::service::query::PvNameList* release_pvnamelist();
  ::dp::service::query::PvNameList* mutable_pvnamelist();
  void set_allocated_pvnamelist(::dp::service::query::PvNameList* value);
  void unsafe_arena_set_allocated_pvnamelist(::dp::service::query::PvNameList* value);
  ::dp::service::query::PvNameList* unsafe_arena_release_pvnamelist();

  private:
  const ::dp::service::query::PvNameList& _internal_pvnamelist() const;
  ::dp::service::query::PvNameList* _internal_mutable_pvnamelist();

  public:
  // .dp.service.query.PvNamePattern pvNamePattern = 12;
  bool has_pvnamepattern() const;
  private:
  bool _internal_has_pvnamepattern() const;

  public:
  void clear_pvnamepattern() ;
  const ::dp::service::query::PvNamePattern& pvnamepattern() const;
  PROTOBUF_NODISCARD ::dp::service::query::PvNamePattern* release_pvnamepattern();
  ::dp::service::query::PvNamePattern* mutable_pvnamepattern();
  void set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value);
  void unsafe_arena_set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value);
  ::dp::service::query::PvNamePattern* unsafe_arena_release_pvnamepattern();

  private:
  const ::dp::service::query::PvNamePattern& _internal_pvnamepattern() const;
  ::dp::service::query::PvNamePattern* _internal_mutable_pvnamepattern();

  public:
  void clear_pvNameSpec();
  PvNameSpecCase pvNameSpec_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableRequest)
 private:
  class _Internal;
  void set_has_pvnamelist();
  void set_has_pvnamepattern();
  inline bool has_pvNameSpec() const;
  inline void clear_has_pvNameSpec();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* begintime_;
    ::Timestamp* endtime_;
    int format_;
    union PvNameSpecUnion {
      constexpr PvNameSpecUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::query::PvNameList* pvnamelist_;
      ::dp::service::query::PvNamePattern* pvnamepattern_;
    } pvNameSpec_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryMetadataResponse_MetadataResult_PvInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo) */ {
 public:
  inline QueryMetadataResponse_MetadataResult_PvInfo() : QueryMetadataResponse_MetadataResult_PvInfo(nullptr) {}
  ~QueryMetadataResponse_MetadataResult_PvInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMetadataResponse_MetadataResult_PvInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryMetadataResponse_MetadataResult_PvInfo(const QueryMetadataResponse_MetadataResult_PvInfo& from) : QueryMetadataResponse_MetadataResult_PvInfo(nullptr, from) {}
  inline QueryMetadataResponse_MetadataResult_PvInfo(QueryMetadataResponse_MetadataResult_PvInfo&& from) noexcept
      : QueryMetadataResponse_MetadataResult_PvInfo(nullptr, std::move(from)) {}
  inline QueryMetadataResponse_MetadataResult_PvInfo& operator=(const QueryMetadataResponse_MetadataResult_PvInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMetadataResponse_MetadataResult_PvInfo& operator=(QueryMetadataResponse_MetadataResult_PvInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMetadataResponse_MetadataResult_PvInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMetadataResponse_MetadataResult_PvInfo* internal_default_instance() {
    return reinterpret_cast<const QueryMetadataResponse_MetadataResult_PvInfo*>(
        &_QueryMetadataResponse_MetadataResult_PvInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryMetadataResponse_MetadataResult_PvInfo& a, QueryMetadataResponse_MetadataResult_PvInfo& b) { a.Swap(&b); }
  inline void Swap(QueryMetadataResponse_MetadataResult_PvInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMetadataResponse_MetadataResult_PvInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMetadataResponse_MetadataResult_PvInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryMetadataResponse_MetadataResult_PvInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMetadataResponse_MetadataResult_PvInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryMetadataResponse_MetadataResult_PvInfo& from) { QueryMetadataResponse_MetadataResult_PvInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryMetadataResponse_MetadataResult_PvInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo"; }

 protected:
  explicit QueryMetadataResponse_MetadataResult_PvInfo(::google::protobuf::Arena* arena);
  QueryMetadataResponse_MetadataResult_PvInfo(::google::protobuf::Arena* arena, const QueryMetadataResponse_MetadataResult_PvInfo& from);
  QueryMetadataResponse_MetadataResult_PvInfo(::google::protobuf::Arena* arena, QueryMetadataResponse_MetadataResult_PvInfo&& from) noexcept
      : QueryMetadataResponse_MetadataResult_PvInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPvNameFieldNumber = 1,
    kLastBucketIdFieldNumber = 2,
    kLastBucketDataTypeFieldNumber = 4,
    kLastBucketDataTimestampsTypeFieldNumber = 6,
    kFirstDataTimestampFieldNumber = 10,
    kLastDataTimestampFieldNumber = 11,
    kLastBucketDataTypeCaseFieldNumber = 3,
    kLastBucketDataTimestampsCaseFieldNumber = 5,
    kLastBucketSamplePeriodFieldNumber = 9,
    kLastBucketSampleCountFieldNumber = 8,
  };
  // string pvName = 1;
  void clear_pvname() ;
  const std::string& pvname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pvname(Arg_&& arg, Args_... args);
  std::string* mutable_pvname();
  PROTOBUF_NODISCARD std::string* release_pvname();
  void set_allocated_pvname(std::string* value);

  private:
  const std::string& _internal_pvname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pvname(
      const std::string& value);
  std::string* _internal_mutable_pvname();

  public:
  // string lastBucketId = 2;
  void clear_lastbucketid() ;
  const std::string& lastbucketid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastbucketid(Arg_&& arg, Args_... args);
  std::string* mutable_lastbucketid();
  PROTOBUF_NODISCARD std::string* release_lastbucketid();
  void set_allocated_lastbucketid(std::string* value);

  private:
  const std::string& _internal_lastbucketid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastbucketid(
      const std::string& value);
  std::string* _internal_mutable_lastbucketid();

  public:
  // string lastBucketDataType = 4;
  void clear_lastbucketdatatype() ;
  const std::string& lastbucketdatatype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastbucketdatatype(Arg_&& arg, Args_... args);
  std::string* mutable_lastbucketdatatype();
  PROTOBUF_NODISCARD std::string* release_lastbucketdatatype();
  void set_allocated_lastbucketdatatype(std::string* value);

  private:
  const std::string& _internal_lastbucketdatatype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastbucketdatatype(
      const std::string& value);
  std::string* _internal_mutable_lastbucketdatatype();

  public:
  // string lastBucketDataTimestampsType = 6;
  void clear_lastbucketdatatimestampstype() ;
  const std::string& lastbucketdatatimestampstype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastbucketdatatimestampstype(Arg_&& arg, Args_... args);
  std::string* mutable_lastbucketdatatimestampstype();
  PROTOBUF_NODISCARD std::string* release_lastbucketdatatimestampstype();
  void set_allocated_lastbucketdatatimestampstype(std::string* value);

  private:
  const std::string& _internal_lastbucketdatatimestampstype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastbucketdatatimestampstype(
      const std::string& value);
  std::string* _internal_mutable_lastbucketdatatimestampstype();

  public:
  // .Timestamp firstDataTimestamp = 10;
  bool has_firstdatatimestamp() const;
  void clear_firstdatatimestamp() ;
  const ::Timestamp& firstdatatimestamp() const;
  PROTOBUF_NODISCARD ::Timestamp* release_firstdatatimestamp();
  ::Timestamp* mutable_firstdatatimestamp();
  void set_allocated_firstdatatimestamp(::Timestamp* value);
  void unsafe_arena_set_allocated_firstdatatimestamp(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_firstdatatimestamp();

  private:
  const ::Timestamp& _internal_firstdatatimestamp() const;
  ::Timestamp* _internal_mutable_firstdatatimestamp();

  public:
  // .Timestamp lastDataTimestamp = 11;
  bool has_lastdatatimestamp() const;
  void clear_lastdatatimestamp() ;
  const ::Timestamp& lastdatatimestamp() const;
  PROTOBUF_NODISCARD ::Timestamp* release_lastdatatimestamp();
  ::Timestamp* mutable_lastdatatimestamp();
  void set_allocated_lastdatatimestamp(::Timestamp* value);
  void unsafe_arena_set_allocated_lastdatatimestamp(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_lastdatatimestamp();

  private:
  const ::Timestamp& _internal_lastdatatimestamp() const;
  ::Timestamp* _internal_mutable_lastdatatimestamp();

  public:
  // int32 lastBucketDataTypeCase = 3;
  void clear_lastbucketdatatypecase() ;
  ::int32_t lastbucketdatatypecase() const;
  void set_lastbucketdatatypecase(::int32_t value);

  private:
  ::int32_t _internal_lastbucketdatatypecase() const;
  void _internal_set_lastbucketdatatypecase(::int32_t value);

  public:
  // int32 lastBucketDataTimestampsCase = 5;
  void clear_lastbucketdatatimestampscase() ;
  ::int32_t lastbucketdatatimestampscase() const;
  void set_lastbucketdatatimestampscase(::int32_t value);

  private:
  ::int32_t _internal_lastbucketdatatimestampscase() const;
  void _internal_set_lastbucketdatatimestampscase(::int32_t value);

  public:
  // uint64 lastBucketSamplePeriod = 9;
  void clear_lastbucketsampleperiod() ;
  ::uint64_t lastbucketsampleperiod() const;
  void set_lastbucketsampleperiod(::uint64_t value);

  private:
  ::uint64_t _internal_lastbucketsampleperiod() const;
  void _internal_set_lastbucketsampleperiod(::uint64_t value);

  public:
  // uint32 lastBucketSampleCount = 8;
  void clear_lastbucketsamplecount() ;
  ::uint32_t lastbucketsamplecount() const;
  void set_lastbucketsamplecount(::uint32_t value);

  private:
  ::uint32_t _internal_lastbucketsamplecount() const;
  void _internal_set_lastbucketsamplecount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      141, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryMetadataResponse_MetadataResult_PvInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryMetadataResponse_MetadataResult_PvInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr pvname_;
    ::google::protobuf::internal::ArenaStringPtr lastbucketid_;
    ::google::protobuf::internal::ArenaStringPtr lastbucketdatatype_;
    ::google::protobuf::internal::ArenaStringPtr lastbucketdatatimestampstype_;
    ::Timestamp* firstdatatimestamp_;
    ::Timestamp* lastdatatimestamp_;
    ::int32_t lastbucketdatatypecase_;
    ::int32_t lastbucketdatatimestampscase_;
    ::uint64_t lastbucketsampleperiod_;
    ::uint32_t lastbucketsamplecount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryMetadataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryMetadataRequest) */ {
 public:
  inline QueryMetadataRequest() : QueryMetadataRequest(nullptr) {}
  ~QueryMetadataRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMetadataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryMetadataRequest(const QueryMetadataRequest& from) : QueryMetadataRequest(nullptr, from) {}
  inline QueryMetadataRequest(QueryMetadataRequest&& from) noexcept
      : QueryMetadataRequest(nullptr, std::move(from)) {}
  inline QueryMetadataRequest& operator=(const QueryMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMetadataRequest& operator=(QueryMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  enum PvNameSpecCase {
    kPvNameList = 1,
    kPvNamePattern = 2,
    PVNAMESPEC_NOT_SET = 0,
  };
  static inline const QueryMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const QueryMetadataRequest*>(
        &_QueryMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryMetadataRequest& a, QueryMetadataRequest& b) { a.Swap(&b); }
  inline void Swap(QueryMetadataRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryMetadataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMetadataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryMetadataRequest& from) { QueryMetadataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryMetadataRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryMetadataRequest"; }

 protected:
  explicit QueryMetadataRequest(::google::protobuf::Arena* arena);
  QueryMetadataRequest(::google::protobuf::Arena* arena, const QueryMetadataRequest& from);
  QueryMetadataRequest(::google::protobuf::Arena* arena, QueryMetadataRequest&& from) noexcept
      : QueryMetadataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPvNameListFieldNumber = 1,
    kPvNamePatternFieldNumber = 2,
  };
  // .dp.service.query.PvNameList pvNameList = 1;
  bool has_pvnamelist() const;
  private:
  bool _internal_has_pvnamelist() const;

  public:
  void clear_pvnamelist() ;
  const ::dp::service::query::PvNameList& pvnamelist() const;
  PROTOBUF_NODISCARD ::dp::service::query::PvNameList* release_pvnamelist();
  ::dp::service::query::PvNameList* mutable_pvnamelist();
  void set_allocated_pvnamelist(::dp::service::query::PvNameList* value);
  void unsafe_arena_set_allocated_pvnamelist(::dp::service::query::PvNameList* value);
  ::dp::service::query::PvNameList* unsafe_arena_release_pvnamelist();

  private:
  const ::dp::service::query::PvNameList& _internal_pvnamelist() const;
  ::dp::service::query::PvNameList* _internal_mutable_pvnamelist();

  public:
  // .dp.service.query.PvNamePattern pvNamePattern = 2;
  bool has_pvnamepattern() const;
  private:
  bool _internal_has_pvnamepattern() const;

  public:
  void clear_pvnamepattern() ;
  const ::dp::service::query::PvNamePattern& pvnamepattern() const;
  PROTOBUF_NODISCARD ::dp::service::query::PvNamePattern* release_pvnamepattern();
  ::dp::service::query::PvNamePattern* mutable_pvnamepattern();
  void set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value);
  void unsafe_arena_set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value);
  ::dp::service::query::PvNamePattern* unsafe_arena_release_pvnamepattern();

  private:
  const ::dp::service::query::PvNamePattern& _internal_pvnamepattern() const;
  ::dp::service::query::PvNamePattern* _internal_mutable_pvnamepattern();

  public:
  void clear_pvNameSpec();
  PvNameSpecCase pvNameSpec_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryMetadataRequest)
 private:
  class _Internal;
  void set_has_pvnamelist();
  void set_has_pvnamepattern();
  inline bool has_pvNameSpec() const;
  inline void clear_has_pvNameSpec();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryMetadataRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryMetadataRequest& from_msg);
    union PvNameSpecUnion {
      constexpr PvNameSpecUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::query::PvNameList* pvnamelist_;
      ::dp::service::query::PvNamePattern* pvnamepattern_;
    } pvNameSpec_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryDataRequest_QuerySpec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataRequest.QuerySpec) */ {
 public:
  inline QueryDataRequest_QuerySpec() : QueryDataRequest_QuerySpec(nullptr) {}
  ~QueryDataRequest_QuerySpec() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataRequest_QuerySpec(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataRequest_QuerySpec(const QueryDataRequest_QuerySpec& from) : QueryDataRequest_QuerySpec(nullptr, from) {}
  inline QueryDataRequest_QuerySpec(QueryDataRequest_QuerySpec&& from) noexcept
      : QueryDataRequest_QuerySpec(nullptr, std::move(from)) {}
  inline QueryDataRequest_QuerySpec& operator=(const QueryDataRequest_QuerySpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataRequest_QuerySpec& operator=(QueryDataRequest_QuerySpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataRequest_QuerySpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataRequest_QuerySpec* internal_default_instance() {
    return reinterpret_cast<const QueryDataRequest_QuerySpec*>(
        &_QueryDataRequest_QuerySpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryDataRequest_QuerySpec& a, QueryDataRequest_QuerySpec& b) { a.Swap(&b); }
  inline void Swap(QueryDataRequest_QuerySpec* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataRequest_QuerySpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataRequest_QuerySpec* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataRequest_QuerySpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataRequest_QuerySpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataRequest_QuerySpec& from) { QueryDataRequest_QuerySpec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataRequest_QuerySpec* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataRequest.QuerySpec"; }

 protected:
  explicit QueryDataRequest_QuerySpec(::google::protobuf::Arena* arena);
  QueryDataRequest_QuerySpec(::google::protobuf::Arena* arena, const QueryDataRequest_QuerySpec& from);
  QueryDataRequest_QuerySpec(::google::protobuf::Arena* arena, QueryDataRequest_QuerySpec&& from) noexcept
      : QueryDataRequest_QuerySpec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPvNamesFieldNumber = 3,
    kBeginTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
  };
  // repeated string pvNames = 3;
  int pvnames_size() const;
  private:
  int _internal_pvnames_size() const;

  public:
  void clear_pvnames() ;
  const std::string& pvnames(int index) const;
  std::string* mutable_pvnames(int index);
  void set_pvnames(int index, const std::string& value);
  void set_pvnames(int index, std::string&& value);
  void set_pvnames(int index, const char* value);
  void set_pvnames(int index, const char* value, std::size_t size);
  void set_pvnames(int index, absl::string_view value);
  std::string* add_pvnames();
  void add_pvnames(const std::string& value);
  void add_pvnames(std::string&& value);
  void add_pvnames(const char* value);
  void add_pvnames(const char* value, std::size_t size);
  void add_pvnames(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pvnames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pvnames();

  public:
  // .Timestamp beginTime = 1;
  bool has_begintime() const;
  void clear_begintime() ;
  const ::Timestamp& begintime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_begintime();
  ::Timestamp* mutable_begintime();
  void set_allocated_begintime(::Timestamp* value);
  void unsafe_arena_set_allocated_begintime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_begintime();

  private:
  const ::Timestamp& _internal_begintime() const;
  ::Timestamp* _internal_mutable_begintime();

  public:
  // .Timestamp endTime = 2;
  bool has_endtime() const;
  void clear_endtime() ;
  const ::Timestamp& endtime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_endtime();
  ::Timestamp* mutable_endtime();
  void set_allocated_endtime(::Timestamp* value);
  void unsafe_arena_set_allocated_endtime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_endtime();

  private:
  const ::Timestamp& _internal_endtime() const;
  ::Timestamp* _internal_mutable_endtime();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataRequest.QuerySpec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataRequest_QuerySpec_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataRequest_QuerySpec& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> pvnames_;
    ::Timestamp* begintime_;
    ::Timestamp* endtime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse, std::string, ::DataValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse, std::string, ::DataValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse*>(
        &_QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryMetadataResponse_MetadataResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryMetadataResponse.MetadataResult) */ {
 public:
  inline QueryMetadataResponse_MetadataResult() : QueryMetadataResponse_MetadataResult(nullptr) {}
  ~QueryMetadataResponse_MetadataResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMetadataResponse_MetadataResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryMetadataResponse_MetadataResult(const QueryMetadataResponse_MetadataResult& from) : QueryMetadataResponse_MetadataResult(nullptr, from) {}
  inline QueryMetadataResponse_MetadataResult(QueryMetadataResponse_MetadataResult&& from) noexcept
      : QueryMetadataResponse_MetadataResult(nullptr, std::move(from)) {}
  inline QueryMetadataResponse_MetadataResult& operator=(const QueryMetadataResponse_MetadataResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMetadataResponse_MetadataResult& operator=(QueryMetadataResponse_MetadataResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMetadataResponse_MetadataResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMetadataResponse_MetadataResult* internal_default_instance() {
    return reinterpret_cast<const QueryMetadataResponse_MetadataResult*>(
        &_QueryMetadataResponse_MetadataResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(QueryMetadataResponse_MetadataResult& a, QueryMetadataResponse_MetadataResult& b) { a.Swap(&b); }
  inline void Swap(QueryMetadataResponse_MetadataResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMetadataResponse_MetadataResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMetadataResponse_MetadataResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryMetadataResponse_MetadataResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMetadataResponse_MetadataResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryMetadataResponse_MetadataResult& from) { QueryMetadataResponse_MetadataResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryMetadataResponse_MetadataResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryMetadataResponse.MetadataResult"; }

 protected:
  explicit QueryMetadataResponse_MetadataResult(::google::protobuf::Arena* arena);
  QueryMetadataResponse_MetadataResult(::google::protobuf::Arena* arena, const QueryMetadataResponse_MetadataResult& from);
  QueryMetadataResponse_MetadataResult(::google::protobuf::Arena* arena, QueryMetadataResponse_MetadataResult&& from) noexcept
      : QueryMetadataResponse_MetadataResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PvInfo = QueryMetadataResponse_MetadataResult_PvInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kPvInfosFieldNumber = 1,
  };
  // repeated .dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo pvInfos = 1;
  int pvinfos_size() const;
  private:
  int _internal_pvinfos_size() const;

  public:
  void clear_pvinfos() ;
  ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo* mutable_pvinfos(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>* mutable_pvinfos();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>& _internal_pvinfos() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>* _internal_mutable_pvinfos();
  public:
  const ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo& pvinfos(int index) const;
  ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo* add_pvinfos();
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>& pvinfos() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryMetadataResponse.MetadataResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryMetadataResponse_MetadataResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryMetadataResponse_MetadataResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo > pvinfos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryDataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataRequest) */ {
 public:
  inline QueryDataRequest() : QueryDataRequest(nullptr) {}
  ~QueryDataRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataRequest(const QueryDataRequest& from) : QueryDataRequest(nullptr, from) {}
  inline QueryDataRequest(QueryDataRequest&& from) noexcept
      : QueryDataRequest(nullptr, std::move(from)) {}
  inline QueryDataRequest& operator=(const QueryDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataRequest& operator=(QueryDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataRequest& default_instance() {
    return *internal_default_instance();
  }
  enum RequestCase {
    kQuerySpec = 1,
    kCursorOp = 2,
    REQUEST_NOT_SET = 0,
  };
  static inline const QueryDataRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDataRequest*>(
        &_QueryDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryDataRequest& a, QueryDataRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDataRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataRequest& from) { QueryDataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataRequest"; }

 protected:
  explicit QueryDataRequest(::google::protobuf::Arena* arena);
  QueryDataRequest(::google::protobuf::Arena* arena, const QueryDataRequest& from);
  QueryDataRequest(::google::protobuf::Arena* arena, QueryDataRequest&& from) noexcept
      : QueryDataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QuerySpec = QueryDataRequest_QuerySpec;
  using CursorOperation = QueryDataRequest_CursorOperation;

  // accessors -------------------------------------------------------
  enum : int {
    kQuerySpecFieldNumber = 1,
    kCursorOpFieldNumber = 2,
  };
  // .dp.service.query.QueryDataRequest.QuerySpec querySpec = 1;
  bool has_queryspec() const;
  private:
  bool _internal_has_queryspec() const;

  public:
  void clear_queryspec() ;
  const ::dp::service::query::QueryDataRequest_QuerySpec& queryspec() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryDataRequest_QuerySpec* release_queryspec();
  ::dp::service::query::QueryDataRequest_QuerySpec* mutable_queryspec();
  void set_allocated_queryspec(::dp::service::query::QueryDataRequest_QuerySpec* value);
  void unsafe_arena_set_allocated_queryspec(::dp::service::query::QueryDataRequest_QuerySpec* value);
  ::dp::service::query::QueryDataRequest_QuerySpec* unsafe_arena_release_queryspec();

  private:
  const ::dp::service::query::QueryDataRequest_QuerySpec& _internal_queryspec() const;
  ::dp::service::query::QueryDataRequest_QuerySpec* _internal_mutable_queryspec();

  public:
  // .dp.service.query.QueryDataRequest.CursorOperation cursorOp = 2;
  bool has_cursorop() const;
  private:
  bool _internal_has_cursorop() const;

  public:
  void clear_cursorop() ;
  const ::dp::service::query::QueryDataRequest_CursorOperation& cursorop() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryDataRequest_CursorOperation* release_cursorop();
  ::dp::service::query::QueryDataRequest_CursorOperation* mutable_cursorop();
  void set_allocated_cursorop(::dp::service::query::QueryDataRequest_CursorOperation* value);
  void unsafe_arena_set_allocated_cursorop(::dp::service::query::QueryDataRequest_CursorOperation* value);
  ::dp::service::query::QueryDataRequest_CursorOperation* unsafe_arena_release_cursorop();

  private:
  const ::dp::service::query::QueryDataRequest_CursorOperation& _internal_cursorop() const;
  ::dp::service::query::QueryDataRequest_CursorOperation* _internal_mutable_cursorop();

  public:
  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataRequest)
 private:
  class _Internal;
  void set_has_queryspec();
  void set_has_cursorop();
  inline bool has_request() const;
  inline void clear_has_request();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataRequest& from_msg);
    union RequestUnion {
      constexpr RequestUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::query::QueryDataRequest_QuerySpec* queryspec_;
      ::dp::service::query::QueryDataRequest_CursorOperation* cursorop_;
    } request_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse_RowMapTable_DataRow final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableResponse.RowMapTable.DataRow) */ {
 public:
  inline QueryTableResponse_RowMapTable_DataRow() : QueryTableResponse_RowMapTable_DataRow(nullptr) {}
  ~QueryTableResponse_RowMapTable_DataRow() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse_RowMapTable_DataRow(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableResponse_RowMapTable_DataRow(const QueryTableResponse_RowMapTable_DataRow& from) : QueryTableResponse_RowMapTable_DataRow(nullptr, from) {}
  inline QueryTableResponse_RowMapTable_DataRow(QueryTableResponse_RowMapTable_DataRow&& from) noexcept
      : QueryTableResponse_RowMapTable_DataRow(nullptr, std::move(from)) {}
  inline QueryTableResponse_RowMapTable_DataRow& operator=(const QueryTableResponse_RowMapTable_DataRow& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableResponse_RowMapTable_DataRow& operator=(QueryTableResponse_RowMapTable_DataRow&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableResponse_RowMapTable_DataRow& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTableResponse_RowMapTable_DataRow* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse_RowMapTable_DataRow*>(
        &_QueryTableResponse_RowMapTable_DataRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryTableResponse_RowMapTable_DataRow& a, QueryTableResponse_RowMapTable_DataRow& b) { a.Swap(&b); }
  inline void Swap(QueryTableResponse_RowMapTable_DataRow* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableResponse_RowMapTable_DataRow* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableResponse_RowMapTable_DataRow* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableResponse_RowMapTable_DataRow>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableResponse_RowMapTable_DataRow& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableResponse_RowMapTable_DataRow& from) { QueryTableResponse_RowMapTable_DataRow::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableResponse_RowMapTable_DataRow* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableResponse.RowMapTable.DataRow"; }

 protected:
  explicit QueryTableResponse_RowMapTable_DataRow(::google::protobuf::Arena* arena);
  QueryTableResponse_RowMapTable_DataRow(::google::protobuf::Arena* arena, const QueryTableResponse_RowMapTable_DataRow& from);
  QueryTableResponse_RowMapTable_DataRow(::google::protobuf::Arena* arena, QueryTableResponse_RowMapTable_DataRow&& from) noexcept
      : QueryTableResponse_RowMapTable_DataRow(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kColumnValuesFieldNumber = 1,
  };
  // map<string, .DataValue> columnValues = 1;
  int columnvalues_size() const;
  private:
  int _internal_columnvalues_size() const;

  public:
  void clear_columnvalues() ;
  const ::google::protobuf::Map<std::string, ::DataValue>& columnvalues() const;
  ::google::protobuf::Map<std::string, ::DataValue>* mutable_columnvalues();

  private:
  const ::google::protobuf::Map<std::string, ::DataValue>& _internal_columnvalues() const;
  ::google::protobuf::Map<std::string, ::DataValue>* _internal_mutable_columnvalues();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableResponse.RowMapTable.DataRow)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      76, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableResponse_RowMapTable_DataRow_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableResponse_RowMapTable_DataRow& from_msg);
    ::google::protobuf::internal::MapField<QueryTableResponse_RowMapTable_DataRow_ColumnValuesEntry_DoNotUse, std::string, ::DataValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        columnvalues_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse_ColumnTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableResponse.ColumnTable) */ {
 public:
  inline QueryTableResponse_ColumnTable() : QueryTableResponse_ColumnTable(nullptr) {}
  ~QueryTableResponse_ColumnTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse_ColumnTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableResponse_ColumnTable(const QueryTableResponse_ColumnTable& from) : QueryTableResponse_ColumnTable(nullptr, from) {}
  inline QueryTableResponse_ColumnTable(QueryTableResponse_ColumnTable&& from) noexcept
      : QueryTableResponse_ColumnTable(nullptr, std::move(from)) {}
  inline QueryTableResponse_ColumnTable& operator=(const QueryTableResponse_ColumnTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableResponse_ColumnTable& operator=(QueryTableResponse_ColumnTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableResponse_ColumnTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTableResponse_ColumnTable* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse_ColumnTable*>(
        &_QueryTableResponse_ColumnTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryTableResponse_ColumnTable& a, QueryTableResponse_ColumnTable& b) { a.Swap(&b); }
  inline void Swap(QueryTableResponse_ColumnTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableResponse_ColumnTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableResponse_ColumnTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableResponse_ColumnTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableResponse_ColumnTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableResponse_ColumnTable& from) { QueryTableResponse_ColumnTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableResponse_ColumnTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableResponse.ColumnTable"; }

 protected:
  explicit QueryTableResponse_ColumnTable(::google::protobuf::Arena* arena);
  QueryTableResponse_ColumnTable(::google::protobuf::Arena* arena, const QueryTableResponse_ColumnTable& from);
  QueryTableResponse_ColumnTable(::google::protobuf::Arena* arena, QueryTableResponse_ColumnTable&& from) noexcept
      : QueryTableResponse_ColumnTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataColumnsFieldNumber = 2,
    kDataTimestampsFieldNumber = 1,
  };
  // repeated .DataColumn dataColumns = 2;
  int datacolumns_size() const;
  private:
  int _internal_datacolumns_size() const;

  public:
  void clear_datacolumns() ;
  ::DataColumn* mutable_datacolumns(int index);
  ::google::protobuf::RepeatedPtrField<::DataColumn>* mutable_datacolumns();

  private:
  const ::google::protobuf::RepeatedPtrField<::DataColumn>& _internal_datacolumns() const;
  ::google::protobuf::RepeatedPtrField<::DataColumn>* _internal_mutable_datacolumns();
  public:
  const ::DataColumn& datacolumns(int index) const;
  ::DataColumn* add_datacolumns();
  const ::google::protobuf::RepeatedPtrField<::DataColumn>& datacolumns() const;
  // .DataTimestamps dataTimestamps = 1;
  bool has_datatimestamps() const;
  void clear_datatimestamps() ;
  const ::DataTimestamps& datatimestamps() const;
  PROTOBUF_NODISCARD ::DataTimestamps* release_datatimestamps();
  ::DataTimestamps* mutable_datatimestamps();
  void set_allocated_datatimestamps(::DataTimestamps* value);
  void unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value);
  ::DataTimestamps* unsafe_arena_release_datatimestamps();

  private:
  const ::DataTimestamps& _internal_datatimestamps() const;
  ::DataTimestamps* _internal_mutable_datatimestamps();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableResponse.ColumnTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableResponse_ColumnTable_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableResponse_ColumnTable& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DataColumn > datacolumns_;
    ::DataTimestamps* datatimestamps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryMetadataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryMetadataResponse) */ {
 public:
  inline QueryMetadataResponse() : QueryMetadataResponse(nullptr) {}
  ~QueryMetadataResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMetadataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryMetadataResponse(const QueryMetadataResponse& from) : QueryMetadataResponse(nullptr, from) {}
  inline QueryMetadataResponse(QueryMetadataResponse&& from) noexcept
      : QueryMetadataResponse(nullptr, std::move(from)) {}
  inline QueryMetadataResponse& operator=(const QueryMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMetadataResponse& operator=(QueryMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kMetadataResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const QueryMetadataResponse*>(
        &_QueryMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryMetadataResponse& a, QueryMetadataResponse& b) { a.Swap(&b); }
  inline void Swap(QueryMetadataResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryMetadataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMetadataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryMetadataResponse& from) { QueryMetadataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryMetadataResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryMetadataResponse"; }

 protected:
  explicit QueryMetadataResponse(::google::protobuf::Arena* arena);
  QueryMetadataResponse(::google::protobuf::Arena* arena, const QueryMetadataResponse& from);
  QueryMetadataResponse(::google::protobuf::Arena* arena, QueryMetadataResponse&& from) noexcept
      : QueryMetadataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using MetadataResult = QueryMetadataResponse_MetadataResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kMetadataResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.query.QueryMetadataResponse.MetadataResult metadataResult = 11;
  bool has_metadataresult() const;
  private:
  bool _internal_has_metadataresult() const;

  public:
  void clear_metadataresult() ;
  const ::dp::service::query::QueryMetadataResponse_MetadataResult& metadataresult() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryMetadataResponse_MetadataResult* release_metadataresult();
  ::dp::service::query::QueryMetadataResponse_MetadataResult* mutable_metadataresult();
  void set_allocated_metadataresult(::dp::service::query::QueryMetadataResponse_MetadataResult* value);
  void unsafe_arena_set_allocated_metadataresult(::dp::service::query::QueryMetadataResponse_MetadataResult* value);
  ::dp::service::query::QueryMetadataResponse_MetadataResult* unsafe_arena_release_metadataresult();

  private:
  const ::dp::service::query::QueryMetadataResponse_MetadataResult& _internal_metadataresult() const;
  ::dp::service::query::QueryMetadataResponse_MetadataResult* _internal_mutable_metadataresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryMetadataResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_metadataresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryMetadataResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryMetadataResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::query::QueryMetadataResponse_MetadataResult* metadataresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryDataResponse_QueryData_DataBucket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataResponse.QueryData.DataBucket) */ {
 public:
  inline QueryDataResponse_QueryData_DataBucket() : QueryDataResponse_QueryData_DataBucket(nullptr) {}
  ~QueryDataResponse_QueryData_DataBucket() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataResponse_QueryData_DataBucket(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataResponse_QueryData_DataBucket(const QueryDataResponse_QueryData_DataBucket& from) : QueryDataResponse_QueryData_DataBucket(nullptr, from) {}
  inline QueryDataResponse_QueryData_DataBucket(QueryDataResponse_QueryData_DataBucket&& from) noexcept
      : QueryDataResponse_QueryData_DataBucket(nullptr, std::move(from)) {}
  inline QueryDataResponse_QueryData_DataBucket& operator=(const QueryDataResponse_QueryData_DataBucket& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataResponse_QueryData_DataBucket& operator=(QueryDataResponse_QueryData_DataBucket&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataResponse_QueryData_DataBucket& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataResponse_QueryData_DataBucket* internal_default_instance() {
    return reinterpret_cast<const QueryDataResponse_QueryData_DataBucket*>(
        &_QueryDataResponse_QueryData_DataBucket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryDataResponse_QueryData_DataBucket& a, QueryDataResponse_QueryData_DataBucket& b) { a.Swap(&b); }
  inline void Swap(QueryDataResponse_QueryData_DataBucket* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataResponse_QueryData_DataBucket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataResponse_QueryData_DataBucket* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataResponse_QueryData_DataBucket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataResponse_QueryData_DataBucket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataResponse_QueryData_DataBucket& from) { QueryDataResponse_QueryData_DataBucket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataResponse_QueryData_DataBucket* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataResponse.QueryData.DataBucket"; }

 protected:
  explicit QueryDataResponse_QueryData_DataBucket(::google::protobuf::Arena* arena);
  QueryDataResponse_QueryData_DataBucket(::google::protobuf::Arena* arena, const QueryDataResponse_QueryData_DataBucket& from);
  QueryDataResponse_QueryData_DataBucket(::google::protobuf::Arena* arena, QueryDataResponse_QueryData_DataBucket&& from) noexcept
      : QueryDataResponse_QueryData_DataBucket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 2,
    kDataTimestampsFieldNumber = 1,
    kEventMetadataFieldNumber = 3,
    kDataColumnFieldNumber = 4,
  };
  // repeated .Attribute attributes = 2;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  ::Attribute* mutable_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::Attribute>* mutable_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::Attribute>& _internal_attributes() const;
  ::google::protobuf::RepeatedPtrField<::Attribute>* _internal_mutable_attributes();
  public:
  const ::Attribute& attributes(int index) const;
  ::Attribute* add_attributes();
  const ::google::protobuf::RepeatedPtrField<::Attribute>& attributes() const;
  // .DataTimestamps dataTimestamps = 1;
  bool has_datatimestamps() const;
  void clear_datatimestamps() ;
  const ::DataTimestamps& datatimestamps() const;
  PROTOBUF_NODISCARD ::DataTimestamps* release_datatimestamps();
  ::DataTimestamps* mutable_datatimestamps();
  void set_allocated_datatimestamps(::DataTimestamps* value);
  void unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value);
  ::DataTimestamps* unsafe_arena_release_datatimestamps();

  private:
  const ::DataTimestamps& _internal_datatimestamps() const;
  ::DataTimestamps* _internal_mutable_datatimestamps();

  public:
  // .EventMetadata eventMetadata = 3;
  bool has_eventmetadata() const;
  void clear_eventmetadata() ;
  const ::EventMetadata& eventmetadata() const;
  PROTOBUF_NODISCARD ::EventMetadata* release_eventmetadata();
  ::EventMetadata* mutable_eventmetadata();
  void set_allocated_eventmetadata(::EventMetadata* value);
  void unsafe_arena_set_allocated_eventmetadata(::EventMetadata* value);
  ::EventMetadata* unsafe_arena_release_eventmetadata();

  private:
  const ::EventMetadata& _internal_eventmetadata() const;
  ::EventMetadata* _internal_mutable_eventmetadata();

  public:
  // .DataColumn dataColumn = 4;
  bool has_datacolumn() const;
  void clear_datacolumn() ;
  const ::DataColumn& datacolumn() const;
  PROTOBUF_NODISCARD ::DataColumn* release_datacolumn();
  ::DataColumn* mutable_datacolumn();
  void set_allocated_datacolumn(::DataColumn* value);
  void unsafe_arena_set_allocated_datacolumn(::DataColumn* value);
  ::DataColumn* unsafe_arena_release_datacolumn();

  private:
  const ::DataColumn& _internal_datacolumn() const;
  ::DataColumn* _internal_mutable_datacolumn();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataResponse.QueryData.DataBucket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataResponse_QueryData_DataBucket_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataResponse_QueryData_DataBucket& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Attribute > attributes_;
    ::DataTimestamps* datatimestamps_;
    ::EventMetadata* eventmetadata_;
    ::DataColumn* datacolumn_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse_RowMapTable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableResponse.RowMapTable) */ {
 public:
  inline QueryTableResponse_RowMapTable() : QueryTableResponse_RowMapTable(nullptr) {}
  ~QueryTableResponse_RowMapTable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse_RowMapTable(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableResponse_RowMapTable(const QueryTableResponse_RowMapTable& from) : QueryTableResponse_RowMapTable(nullptr, from) {}
  inline QueryTableResponse_RowMapTable(QueryTableResponse_RowMapTable&& from) noexcept
      : QueryTableResponse_RowMapTable(nullptr, std::move(from)) {}
  inline QueryTableResponse_RowMapTable& operator=(const QueryTableResponse_RowMapTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableResponse_RowMapTable& operator=(QueryTableResponse_RowMapTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableResponse_RowMapTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTableResponse_RowMapTable* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse_RowMapTable*>(
        &_QueryTableResponse_RowMapTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QueryTableResponse_RowMapTable& a, QueryTableResponse_RowMapTable& b) { a.Swap(&b); }
  inline void Swap(QueryTableResponse_RowMapTable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableResponse_RowMapTable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableResponse_RowMapTable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableResponse_RowMapTable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableResponse_RowMapTable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableResponse_RowMapTable& from) { QueryTableResponse_RowMapTable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableResponse_RowMapTable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableResponse.RowMapTable"; }

 protected:
  explicit QueryTableResponse_RowMapTable(::google::protobuf::Arena* arena);
  QueryTableResponse_RowMapTable(::google::protobuf::Arena* arena, const QueryTableResponse_RowMapTable& from);
  QueryTableResponse_RowMapTable(::google::protobuf::Arena* arena, QueryTableResponse_RowMapTable&& from) noexcept
      : QueryTableResponse_RowMapTable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DataRow = QueryTableResponse_RowMapTable_DataRow;

  // accessors -------------------------------------------------------
  enum : int {
    kColumnNamesFieldNumber = 1,
    kRowsFieldNumber = 2,
  };
  // repeated string columnNames = 1;
  int columnnames_size() const;
  private:
  int _internal_columnnames_size() const;

  public:
  void clear_columnnames() ;
  const std::string& columnnames(int index) const;
  std::string* mutable_columnnames(int index);
  void set_columnnames(int index, const std::string& value);
  void set_columnnames(int index, std::string&& value);
  void set_columnnames(int index, const char* value);
  void set_columnnames(int index, const char* value, std::size_t size);
  void set_columnnames(int index, absl::string_view value);
  std::string* add_columnnames();
  void add_columnnames(const std::string& value);
  void add_columnnames(std::string&& value);
  void add_columnnames(const char* value);
  void add_columnnames(const char* value, std::size_t size);
  void add_columnnames(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& columnnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_columnnames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_columnnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_columnnames();

  public:
  // repeated .dp.service.query.QueryTableResponse.RowMapTable.DataRow rows = 2;
  int rows_size() const;
  private:
  int _internal_rows_size() const;

  public:
  void clear_rows() ;
  ::dp::service::query::QueryTableResponse_RowMapTable_DataRow* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>* mutable_rows();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>& _internal_rows() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>* _internal_mutable_rows();
  public:
  const ::dp::service::query::QueryTableResponse_RowMapTable_DataRow& rows(int index) const;
  ::dp::service::query::QueryTableResponse_RowMapTable_DataRow* add_rows();
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>& rows() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableResponse.RowMapTable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableResponse_RowMapTable_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableResponse_RowMapTable& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> columnnames_;
    ::google::protobuf::RepeatedPtrField< ::dp::service::query::QueryTableResponse_RowMapTable_DataRow > rows_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryDataResponse_QueryData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataResponse.QueryData) */ {
 public:
  inline QueryDataResponse_QueryData() : QueryDataResponse_QueryData(nullptr) {}
  ~QueryDataResponse_QueryData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataResponse_QueryData(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataResponse_QueryData(const QueryDataResponse_QueryData& from) : QueryDataResponse_QueryData(nullptr, from) {}
  inline QueryDataResponse_QueryData(QueryDataResponse_QueryData&& from) noexcept
      : QueryDataResponse_QueryData(nullptr, std::move(from)) {}
  inline QueryDataResponse_QueryData& operator=(const QueryDataResponse_QueryData& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataResponse_QueryData& operator=(QueryDataResponse_QueryData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataResponse_QueryData& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataResponse_QueryData* internal_default_instance() {
    return reinterpret_cast<const QueryDataResponse_QueryData*>(
        &_QueryDataResponse_QueryData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryDataResponse_QueryData& a, QueryDataResponse_QueryData& b) { a.Swap(&b); }
  inline void Swap(QueryDataResponse_QueryData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataResponse_QueryData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataResponse_QueryData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataResponse_QueryData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataResponse_QueryData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataResponse_QueryData& from) { QueryDataResponse_QueryData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataResponse_QueryData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataResponse.QueryData"; }

 protected:
  explicit QueryDataResponse_QueryData(::google::protobuf::Arena* arena);
  QueryDataResponse_QueryData(::google::protobuf::Arena* arena, const QueryDataResponse_QueryData& from);
  QueryDataResponse_QueryData(::google::protobuf::Arena* arena, QueryDataResponse_QueryData&& from) noexcept
      : QueryDataResponse_QueryData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DataBucket = QueryDataResponse_QueryData_DataBucket;

  // accessors -------------------------------------------------------
  enum : int {
    kDataBucketsFieldNumber = 1,
  };
  // repeated .dp.service.query.QueryDataResponse.QueryData.DataBucket dataBuckets = 1;
  int databuckets_size() const;
  private:
  int _internal_databuckets_size() const;

  public:
  void clear_databuckets() ;
  ::dp::service::query::QueryDataResponse_QueryData_DataBucket* mutable_databuckets(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>* mutable_databuckets();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>& _internal_databuckets() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>* _internal_mutable_databuckets();
  public:
  const ::dp::service::query::QueryDataResponse_QueryData_DataBucket& databuckets(int index) const;
  ::dp::service::query::QueryDataResponse_QueryData_DataBucket* add_databuckets();
  const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>& databuckets() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataResponse.QueryData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataResponse_QueryData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataResponse_QueryData& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::query::QueryDataResponse_QueryData_DataBucket > databuckets_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse_TableResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableResponse.TableResult) */ {
 public:
  inline QueryTableResponse_TableResult() : QueryTableResponse_TableResult(nullptr) {}
  ~QueryTableResponse_TableResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse_TableResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableResponse_TableResult(const QueryTableResponse_TableResult& from) : QueryTableResponse_TableResult(nullptr, from) {}
  inline QueryTableResponse_TableResult(QueryTableResponse_TableResult&& from) noexcept
      : QueryTableResponse_TableResult(nullptr, std::move(from)) {}
  inline QueryTableResponse_TableResult& operator=(const QueryTableResponse_TableResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableResponse_TableResult& operator=(QueryTableResponse_TableResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableResponse_TableResult& default_instance() {
    return *internal_default_instance();
  }
  enum TableResultCase {
    kColumnTable = 1,
    kRowMapTable = 2,
    TABLERESULT_NOT_SET = 0,
  };
  static inline const QueryTableResponse_TableResult* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse_TableResult*>(
        &_QueryTableResponse_TableResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryTableResponse_TableResult& a, QueryTableResponse_TableResult& b) { a.Swap(&b); }
  inline void Swap(QueryTableResponse_TableResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableResponse_TableResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableResponse_TableResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableResponse_TableResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableResponse_TableResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableResponse_TableResult& from) { QueryTableResponse_TableResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableResponse_TableResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableResponse.TableResult"; }

 protected:
  explicit QueryTableResponse_TableResult(::google::protobuf::Arena* arena);
  QueryTableResponse_TableResult(::google::protobuf::Arena* arena, const QueryTableResponse_TableResult& from);
  QueryTableResponse_TableResult(::google::protobuf::Arena* arena, QueryTableResponse_TableResult&& from) noexcept
      : QueryTableResponse_TableResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kColumnTableFieldNumber = 1,
    kRowMapTableFieldNumber = 2,
  };
  // .dp.service.query.QueryTableResponse.ColumnTable columnTable = 1;
  bool has_columntable() const;
  private:
  bool _internal_has_columntable() const;

  public:
  void clear_columntable() ;
  const ::dp::service::query::QueryTableResponse_ColumnTable& columntable() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryTableResponse_ColumnTable* release_columntable();
  ::dp::service::query::QueryTableResponse_ColumnTable* mutable_columntable();
  void set_allocated_columntable(::dp::service::query::QueryTableResponse_ColumnTable* value);
  void unsafe_arena_set_allocated_columntable(::dp::service::query::QueryTableResponse_ColumnTable* value);
  ::dp::service::query::QueryTableResponse_ColumnTable* unsafe_arena_release_columntable();

  private:
  const ::dp::service::query::QueryTableResponse_ColumnTable& _internal_columntable() const;
  ::dp::service::query::QueryTableResponse_ColumnTable* _internal_mutable_columntable();

  public:
  // .dp.service.query.QueryTableResponse.RowMapTable rowMapTable = 2;
  bool has_rowmaptable() const;
  private:
  bool _internal_has_rowmaptable() const;

  public:
  void clear_rowmaptable() ;
  const ::dp::service::query::QueryTableResponse_RowMapTable& rowmaptable() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryTableResponse_RowMapTable* release_rowmaptable();
  ::dp::service::query::QueryTableResponse_RowMapTable* mutable_rowmaptable();
  void set_allocated_rowmaptable(::dp::service::query::QueryTableResponse_RowMapTable* value);
  void unsafe_arena_set_allocated_rowmaptable(::dp::service::query::QueryTableResponse_RowMapTable* value);
  ::dp::service::query::QueryTableResponse_RowMapTable* unsafe_arena_release_rowmaptable();

  private:
  const ::dp::service::query::QueryTableResponse_RowMapTable& _internal_rowmaptable() const;
  ::dp::service::query::QueryTableResponse_RowMapTable* _internal_mutable_rowmaptable();

  public:
  void clear_tableResult();
  TableResultCase tableResult_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableResponse.TableResult)
 private:
  class _Internal;
  void set_has_columntable();
  void set_has_rowmaptable();
  inline bool has_tableResult() const;
  inline void clear_has_tableResult();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableResponse_TableResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableResponse_TableResult& from_msg);
    union TableResultUnion {
      constexpr TableResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::query::QueryTableResponse_ColumnTable* columntable_;
      ::dp::service::query::QueryTableResponse_RowMapTable* rowmaptable_;
    } tableResult_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryDataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryDataResponse) */ {
 public:
  inline QueryDataResponse() : QueryDataResponse(nullptr) {}
  ~QueryDataResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataResponse(const QueryDataResponse& from) : QueryDataResponse(nullptr, from) {}
  inline QueryDataResponse(QueryDataResponse&& from) noexcept
      : QueryDataResponse(nullptr, std::move(from)) {}
  inline QueryDataResponse& operator=(const QueryDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataResponse& operator=(QueryDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kQueryData = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryDataResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDataResponse*>(
        &_QueryDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryDataResponse& a, QueryDataResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDataResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataResponse& from) { QueryDataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryDataResponse"; }

 protected:
  explicit QueryDataResponse(::google::protobuf::Arena* arena);
  QueryDataResponse(::google::protobuf::Arena* arena, const QueryDataResponse& from);
  QueryDataResponse(::google::protobuf::Arena* arena, QueryDataResponse&& from) noexcept
      : QueryDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QueryData = QueryDataResponse_QueryData;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kQueryDataFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.query.QueryDataResponse.QueryData queryData = 11;
  bool has_querydata() const;
  private:
  bool _internal_has_querydata() const;

  public:
  void clear_querydata() ;
  const ::dp::service::query::QueryDataResponse_QueryData& querydata() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryDataResponse_QueryData* release_querydata();
  ::dp::service::query::QueryDataResponse_QueryData* mutable_querydata();
  void set_allocated_querydata(::dp::service::query::QueryDataResponse_QueryData* value);
  void unsafe_arena_set_allocated_querydata(::dp::service::query::QueryDataResponse_QueryData* value);
  ::dp::service::query::QueryDataResponse_QueryData* unsafe_arena_release_querydata();

  private:
  const ::dp::service::query::QueryDataResponse_QueryData& _internal_querydata() const;
  ::dp::service::query::QueryDataResponse_QueryData* _internal_mutable_querydata();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryDataResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_querydata();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::query::QueryDataResponse_QueryData* querydata_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};
// -------------------------------------------------------------------

class QueryTableResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.query.QueryTableResponse) */ {
 public:
  inline QueryTableResponse() : QueryTableResponse(nullptr) {}
  ~QueryTableResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTableResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTableResponse(const QueryTableResponse& from) : QueryTableResponse(nullptr, from) {}
  inline QueryTableResponse(QueryTableResponse&& from) noexcept
      : QueryTableResponse(nullptr, std::move(from)) {}
  inline QueryTableResponse& operator=(const QueryTableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTableResponse& operator=(QueryTableResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTableResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kTableResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryTableResponse* internal_default_instance() {
    return reinterpret_cast<const QueryTableResponse*>(
        &_QueryTableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(QueryTableResponse& a, QueryTableResponse& b) { a.Swap(&b); }
  inline void Swap(QueryTableResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTableResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTableResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryTableResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTableResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTableResponse& from) { QueryTableResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryTableResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.query.QueryTableResponse"; }

 protected:
  explicit QueryTableResponse(::google::protobuf::Arena* arena);
  QueryTableResponse(::google::protobuf::Arena* arena, const QueryTableResponse& from);
  QueryTableResponse(::google::protobuf::Arena* arena, QueryTableResponse&& from) noexcept
      : QueryTableResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TableResult = QueryTableResponse_TableResult;
  using ColumnTable = QueryTableResponse_ColumnTable;
  using RowMapTable = QueryTableResponse_RowMapTable;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kTableResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.query.QueryTableResponse.TableResult tableResult = 11;
  bool has_tableresult() const;
  private:
  bool _internal_has_tableresult() const;

  public:
  void clear_tableresult() ;
  const ::dp::service::query::QueryTableResponse_TableResult& tableresult() const;
  PROTOBUF_NODISCARD ::dp::service::query::QueryTableResponse_TableResult* release_tableresult();
  ::dp::service::query::QueryTableResponse_TableResult* mutable_tableresult();
  void set_allocated_tableresult(::dp::service::query::QueryTableResponse_TableResult* value);
  void unsafe_arena_set_allocated_tableresult(::dp::service::query::QueryTableResponse_TableResult* value);
  ::dp::service::query::QueryTableResponse_TableResult* unsafe_arena_release_tableresult();

  private:
  const ::dp::service::query::QueryTableResponse_TableResult& _internal_tableresult() const;
  ::dp::service::query::QueryTableResponse_TableResult* _internal_mutable_tableresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.query.QueryTableResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_tableresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryTableResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTableResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::query::QueryTableResponse_TableResult* tableresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_query_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryDataRequest_QuerySpec

// .Timestamp beginTime = 1;
inline bool QueryDataRequest_QuerySpec::has_begintime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.begintime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryDataRequest_QuerySpec::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.begintime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryDataRequest_QuerySpec::begintime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.QuerySpec.beginTime)
  return _internal_begintime();
}
inline void QueryDataRequest_QuerySpec::unsafe_arena_set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }
  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataRequest.QuerySpec.beginTime)
}
inline ::Timestamp* QueryDataRequest_QuerySpec::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::unsafe_arena_release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataRequest.QuerySpec.beginTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.begintime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.begintime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.begintime_;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataRequest.QuerySpec.beginTime)
  return _msg;
}
inline void QueryDataRequest_QuerySpec::set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataRequest.QuerySpec.beginTime)
}

// .Timestamp endTime = 2;
inline bool QueryDataRequest_QuerySpec::has_endtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endtime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryDataRequest_QuerySpec::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.endtime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryDataRequest_QuerySpec::endtime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.QuerySpec.endTime)
  return _internal_endtime();
}
inline void QueryDataRequest_QuerySpec::unsafe_arena_set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }
  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataRequest.QuerySpec.endTime)
}
inline ::Timestamp* QueryDataRequest_QuerySpec::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* released = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::unsafe_arena_release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataRequest.QuerySpec.endTime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* temp = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endtime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.endtime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.endtime_;
}
inline ::Timestamp* QueryDataRequest_QuerySpec::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Timestamp* _msg = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataRequest.QuerySpec.endTime)
  return _msg;
}
inline void QueryDataRequest_QuerySpec::set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataRequest.QuerySpec.endTime)
}

// repeated string pvNames = 3;
inline int QueryDataRequest_QuerySpec::_internal_pvnames_size() const {
  return _internal_pvnames().size();
}
inline int QueryDataRequest_QuerySpec::pvnames_size() const {
  return _internal_pvnames_size();
}
inline void QueryDataRequest_QuerySpec::clear_pvnames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvnames_.Clear();
}
inline std::string* QueryDataRequest_QuerySpec::add_pvnames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pvnames()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
  return _s;
}
inline const std::string& QueryDataRequest_QuerySpec::pvnames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
  return _internal_pvnames().Get(index);
}
inline std::string* QueryDataRequest_QuerySpec::mutable_pvnames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
  return _internal_mutable_pvnames()->Mutable(index);
}
inline void QueryDataRequest_QuerySpec::set_pvnames(int index, const std::string& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::set_pvnames(int index, std::string&& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::set_pvnames(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::set_pvnames(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::set_pvnames(int index, absl::string_view value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::add_pvnames(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::add_pvnames(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::add_pvnames(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::add_pvnames(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline void QueryDataRequest_QuerySpec::add_pvnames(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryDataRequest_QuerySpec::pvnames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
  return _internal_pvnames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryDataRequest_QuerySpec::mutable_pvnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryDataRequest.QuerySpec.pvNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pvnames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryDataRequest_QuerySpec::_internal_pvnames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pvnames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryDataRequest_QuerySpec::_internal_mutable_pvnames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pvnames_;
}

// -------------------------------------------------------------------

// QueryDataRequest_CursorOperation

// .dp.service.query.QueryDataRequest.CursorOperation.CursorOperationType cursorOperationType = 1;
inline void QueryDataRequest_CursorOperation::clear_cursoroperationtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursoroperationtype_ = 0;
}
inline ::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType QueryDataRequest_CursorOperation::cursoroperationtype() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.CursorOperation.cursorOperationType)
  return _internal_cursoroperationtype();
}
inline void QueryDataRequest_CursorOperation::set_cursoroperationtype(::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType value) {
  _internal_set_cursoroperationtype(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryDataRequest.CursorOperation.cursorOperationType)
}
inline ::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType QueryDataRequest_CursorOperation::_internal_cursoroperationtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType>(_impl_.cursoroperationtype_);
}
inline void QueryDataRequest_CursorOperation::_internal_set_cursoroperationtype(::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursoroperationtype_ = value;
}

// -------------------------------------------------------------------

// QueryDataRequest

// .dp.service.query.QueryDataRequest.QuerySpec querySpec = 1;
inline bool QueryDataRequest::has_queryspec() const {
  return request_case() == kQuerySpec;
}
inline bool QueryDataRequest::_internal_has_queryspec() const {
  return request_case() == kQuerySpec;
}
inline void QueryDataRequest::set_has_queryspec() {
  _impl_._oneof_case_[0] = kQuerySpec;
}
inline void QueryDataRequest::clear_queryspec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kQuerySpec) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.queryspec_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.queryspec_);
    }
    clear_has_request();
  }
}
inline ::dp::service::query::QueryDataRequest_QuerySpec* QueryDataRequest::release_queryspec() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataRequest.querySpec)
  if (request_case() == kQuerySpec) {
    clear_has_request();
    auto* temp = _impl_.request_.queryspec_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.queryspec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryDataRequest_QuerySpec& QueryDataRequest::_internal_queryspec() const {
  return request_case() == kQuerySpec ? *_impl_.request_.queryspec_ : reinterpret_cast<::dp::service::query::QueryDataRequest_QuerySpec&>(::dp::service::query::_QueryDataRequest_QuerySpec_default_instance_);
}
inline const ::dp::service::query::QueryDataRequest_QuerySpec& QueryDataRequest::queryspec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.querySpec)
  return _internal_queryspec();
}
inline ::dp::service::query::QueryDataRequest_QuerySpec* QueryDataRequest::unsafe_arena_release_queryspec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryDataRequest.querySpec)
  if (request_case() == kQuerySpec) {
    clear_has_request();
    auto* temp = _impl_.request_.queryspec_;
    _impl_.request_.queryspec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataRequest::unsafe_arena_set_allocated_queryspec(::dp::service::query::QueryDataRequest_QuerySpec* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_queryspec();
    _impl_.request_.queryspec_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataRequest.querySpec)
}
inline ::dp::service::query::QueryDataRequest_QuerySpec* QueryDataRequest::_internal_mutable_queryspec() {
  if (request_case() != kQuerySpec) {
    clear_request();
    set_has_queryspec();
    _impl_.request_.queryspec_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryDataRequest_QuerySpec>(GetArena());
  }
  return _impl_.request_.queryspec_;
}
inline ::dp::service::query::QueryDataRequest_QuerySpec* QueryDataRequest::mutable_queryspec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryDataRequest_QuerySpec* _msg = _internal_mutable_queryspec();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataRequest.querySpec)
  return _msg;
}

// .dp.service.query.QueryDataRequest.CursorOperation cursorOp = 2;
inline bool QueryDataRequest::has_cursorop() const {
  return request_case() == kCursorOp;
}
inline bool QueryDataRequest::_internal_has_cursorop() const {
  return request_case() == kCursorOp;
}
inline void QueryDataRequest::set_has_cursorop() {
  _impl_._oneof_case_[0] = kCursorOp;
}
inline void QueryDataRequest::clear_cursorop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_case() == kCursorOp) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.cursorop_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_.cursorop_);
    }
    clear_has_request();
  }
}
inline ::dp::service::query::QueryDataRequest_CursorOperation* QueryDataRequest::release_cursorop() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataRequest.cursorOp)
  if (request_case() == kCursorOp) {
    clear_has_request();
    auto* temp = _impl_.request_.cursorop_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.cursorop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryDataRequest_CursorOperation& QueryDataRequest::_internal_cursorop() const {
  return request_case() == kCursorOp ? *_impl_.request_.cursorop_ : reinterpret_cast<::dp::service::query::QueryDataRequest_CursorOperation&>(::dp::service::query::_QueryDataRequest_CursorOperation_default_instance_);
}
inline const ::dp::service::query::QueryDataRequest_CursorOperation& QueryDataRequest::cursorop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataRequest.cursorOp)
  return _internal_cursorop();
}
inline ::dp::service::query::QueryDataRequest_CursorOperation* QueryDataRequest::unsafe_arena_release_cursorop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryDataRequest.cursorOp)
  if (request_case() == kCursorOp) {
    clear_has_request();
    auto* temp = _impl_.request_.cursorop_;
    _impl_.request_.cursorop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataRequest::unsafe_arena_set_allocated_cursorop(::dp::service::query::QueryDataRequest_CursorOperation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_cursorop();
    _impl_.request_.cursorop_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataRequest.cursorOp)
}
inline ::dp::service::query::QueryDataRequest_CursorOperation* QueryDataRequest::_internal_mutable_cursorop() {
  if (request_case() != kCursorOp) {
    clear_request();
    set_has_cursorop();
    _impl_.request_.cursorop_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryDataRequest_CursorOperation>(GetArena());
  }
  return _impl_.request_.cursorop_;
}
inline ::dp::service::query::QueryDataRequest_CursorOperation* QueryDataRequest::mutable_cursorop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryDataRequest_CursorOperation* _msg = _internal_mutable_cursorop();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataRequest.cursorOp)
  return _msg;
}

inline bool QueryDataRequest::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void QueryDataRequest::clear_has_request() {
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}
inline QueryDataRequest::RequestCase QueryDataRequest::request_case() const {
  return QueryDataRequest::RequestCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryDataResponse_QueryData_DataBucket

// .DataTimestamps dataTimestamps = 1;
inline bool QueryDataResponse_QueryData_DataBucket::has_datatimestamps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.datatimestamps_ != nullptr);
  return value;
}
inline const ::DataTimestamps& QueryDataResponse_QueryData_DataBucket::_internal_datatimestamps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DataTimestamps* p = _impl_.datatimestamps_;
  return p != nullptr ? *p : reinterpret_cast<const ::DataTimestamps&>(::_DataTimestamps_default_instance_);
}
inline const ::DataTimestamps& QueryDataResponse_QueryData_DataBucket::datatimestamps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataTimestamps)
  return _internal_datatimestamps();
}
inline void QueryDataResponse_QueryData_DataBucket::unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }
  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataTimestamps)
}
inline ::DataTimestamps* QueryDataResponse_QueryData_DataBucket::release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* released = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DataTimestamps* QueryDataResponse_QueryData_DataBucket::unsafe_arena_release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataTimestamps)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* temp = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
  return temp;
}
inline ::DataTimestamps* QueryDataResponse_QueryData_DataBucket::_internal_mutable_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datatimestamps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DataTimestamps>(GetArena());
    _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(p);
  }
  return _impl_.datatimestamps_;
}
inline ::DataTimestamps* QueryDataResponse_QueryData_DataBucket::mutable_datatimestamps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DataTimestamps* _msg = _internal_mutable_datatimestamps();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataTimestamps)
  return _msg;
}
inline void QueryDataResponse_QueryData_DataBucket::set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataTimestamps)
}

// repeated .Attribute attributes = 2;
inline int QueryDataResponse_QueryData_DataBucket::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int QueryDataResponse_QueryData_DataBucket::attributes_size() const {
  return _internal_attributes_size();
}
inline ::Attribute* QueryDataResponse_QueryData_DataBucket::mutable_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.QueryData.DataBucket.attributes)
  return _internal_mutable_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>* QueryDataResponse_QueryData_DataBucket::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryDataResponse.QueryData.DataBucket.attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributes();
}
inline const ::Attribute& QueryDataResponse_QueryData_DataBucket::attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.QueryData.DataBucket.attributes)
  return _internal_attributes().Get(index);
}
inline ::Attribute* QueryDataResponse_QueryData_DataBucket::add_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Attribute* _add = _internal_mutable_attributes()->Add();
  // @@protoc_insertion_point(field_add:dp.service.query.QueryDataResponse.QueryData.DataBucket.attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>& QueryDataResponse_QueryData_DataBucket::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryDataResponse.QueryData.DataBucket.attributes)
  return _internal_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>&
QueryDataResponse_QueryData_DataBucket::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>*
QueryDataResponse_QueryData_DataBucket::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributes_;
}

// .EventMetadata eventMetadata = 3;
inline bool QueryDataResponse_QueryData_DataBucket::has_eventmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventmetadata_ != nullptr);
  return value;
}
inline const ::EventMetadata& QueryDataResponse_QueryData_DataBucket::_internal_eventmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::EventMetadata* p = _impl_.eventmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::EventMetadata&>(::_EventMetadata_default_instance_);
}
inline const ::EventMetadata& QueryDataResponse_QueryData_DataBucket::eventmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.QueryData.DataBucket.eventMetadata)
  return _internal_eventmetadata();
}
inline void QueryDataResponse_QueryData_DataBucket::unsafe_arena_set_allocated_eventmetadata(::EventMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmetadata_);
  }
  _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.eventMetadata)
}
inline ::EventMetadata* QueryDataResponse_QueryData_DataBucket::release_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::EventMetadata* released = _impl_.eventmetadata_;
  _impl_.eventmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::EventMetadata* QueryDataResponse_QueryData_DataBucket::unsafe_arena_release_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.QueryData.DataBucket.eventMetadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::EventMetadata* temp = _impl_.eventmetadata_;
  _impl_.eventmetadata_ = nullptr;
  return temp;
}
inline ::EventMetadata* QueryDataResponse_QueryData_DataBucket::_internal_mutable_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::EventMetadata>(GetArena());
    _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(p);
  }
  return _impl_.eventmetadata_;
}
inline ::EventMetadata* QueryDataResponse_QueryData_DataBucket::mutable_eventmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::EventMetadata* _msg = _internal_mutable_eventmetadata();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.QueryData.DataBucket.eventMetadata)
  return _msg;
}
inline void QueryDataResponse_QueryData_DataBucket::set_allocated_eventmetadata(::EventMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.eventMetadata)
}

// .DataColumn dataColumn = 4;
inline bool QueryDataResponse_QueryData_DataBucket::has_datacolumn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.datacolumn_ != nullptr);
  return value;
}
inline const ::DataColumn& QueryDataResponse_QueryData_DataBucket::_internal_datacolumn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DataColumn* p = _impl_.datacolumn_;
  return p != nullptr ? *p : reinterpret_cast<const ::DataColumn&>(::_DataColumn_default_instance_);
}
inline const ::DataColumn& QueryDataResponse_QueryData_DataBucket::datacolumn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataColumn)
  return _internal_datacolumn();
}
inline void QueryDataResponse_QueryData_DataBucket::unsafe_arena_set_allocated_datacolumn(::DataColumn* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datacolumn_);
  }
  _impl_.datacolumn_ = reinterpret_cast<::DataColumn*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataColumn)
}
inline ::DataColumn* QueryDataResponse_QueryData_DataBucket::release_datacolumn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::DataColumn* released = _impl_.datacolumn_;
  _impl_.datacolumn_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DataColumn* QueryDataResponse_QueryData_DataBucket::unsafe_arena_release_datacolumn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataColumn)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::DataColumn* temp = _impl_.datacolumn_;
  _impl_.datacolumn_ = nullptr;
  return temp;
}
inline ::DataColumn* QueryDataResponse_QueryData_DataBucket::_internal_mutable_datacolumn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datacolumn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DataColumn>(GetArena());
    _impl_.datacolumn_ = reinterpret_cast<::DataColumn*>(p);
  }
  return _impl_.datacolumn_;
}
inline ::DataColumn* QueryDataResponse_QueryData_DataBucket::mutable_datacolumn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::DataColumn* _msg = _internal_mutable_datacolumn();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataColumn)
  return _msg;
}
inline void QueryDataResponse_QueryData_DataBucket::set_allocated_datacolumn(::DataColumn* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datacolumn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.datacolumn_ = reinterpret_cast<::DataColumn*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataResponse.QueryData.DataBucket.dataColumn)
}

// -------------------------------------------------------------------

// QueryDataResponse_QueryData

// repeated .dp.service.query.QueryDataResponse.QueryData.DataBucket dataBuckets = 1;
inline int QueryDataResponse_QueryData::_internal_databuckets_size() const {
  return _internal_databuckets().size();
}
inline int QueryDataResponse_QueryData::databuckets_size() const {
  return _internal_databuckets_size();
}
inline void QueryDataResponse_QueryData::clear_databuckets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.databuckets_.Clear();
}
inline ::dp::service::query::QueryDataResponse_QueryData_DataBucket* QueryDataResponse_QueryData::mutable_databuckets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.QueryData.dataBuckets)
  return _internal_mutable_databuckets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>* QueryDataResponse_QueryData::mutable_databuckets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryDataResponse.QueryData.dataBuckets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_databuckets();
}
inline const ::dp::service::query::QueryDataResponse_QueryData_DataBucket& QueryDataResponse_QueryData::databuckets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.QueryData.dataBuckets)
  return _internal_databuckets().Get(index);
}
inline ::dp::service::query::QueryDataResponse_QueryData_DataBucket* QueryDataResponse_QueryData::add_databuckets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::query::QueryDataResponse_QueryData_DataBucket* _add = _internal_mutable_databuckets()->Add();
  // @@protoc_insertion_point(field_add:dp.service.query.QueryDataResponse.QueryData.dataBuckets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>& QueryDataResponse_QueryData::databuckets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryDataResponse.QueryData.dataBuckets)
  return _internal_databuckets();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>&
QueryDataResponse_QueryData::_internal_databuckets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.databuckets_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryDataResponse_QueryData_DataBucket>*
QueryDataResponse_QueryData::_internal_mutable_databuckets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.databuckets_;
}

// -------------------------------------------------------------------

// QueryDataResponse

// .Timestamp responseTime = 1;
inline bool QueryDataResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryDataResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryDataResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryDataResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.responseTime)
}
inline ::Timestamp* QueryDataResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryDataResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryDataResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryDataResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.responseTime)
  return _msg;
}
inline void QueryDataResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryDataResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryDataResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryDataResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryDataResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryDataResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryDataResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryDataResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryDataResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryDataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryDataResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryDataResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.exceptionalResult)
  return _msg;
}

// .dp.service.query.QueryDataResponse.QueryData queryData = 11;
inline bool QueryDataResponse::has_querydata() const {
  return result_case() == kQueryData;
}
inline bool QueryDataResponse::_internal_has_querydata() const {
  return result_case() == kQueryData;
}
inline void QueryDataResponse::set_has_querydata() {
  _impl_._oneof_case_[0] = kQueryData;
}
inline void QueryDataResponse::clear_querydata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kQueryData) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.querydata_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.querydata_);
    }
    clear_has_result();
  }
}
inline ::dp::service::query::QueryDataResponse_QueryData* QueryDataResponse::release_querydata() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryDataResponse.queryData)
  if (result_case() == kQueryData) {
    clear_has_result();
    auto* temp = _impl_.result_.querydata_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.querydata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryDataResponse_QueryData& QueryDataResponse::_internal_querydata() const {
  return result_case() == kQueryData ? *_impl_.result_.querydata_ : reinterpret_cast<::dp::service::query::QueryDataResponse_QueryData&>(::dp::service::query::_QueryDataResponse_QueryData_default_instance_);
}
inline const ::dp::service::query::QueryDataResponse_QueryData& QueryDataResponse::querydata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryDataResponse.queryData)
  return _internal_querydata();
}
inline ::dp::service::query::QueryDataResponse_QueryData* QueryDataResponse::unsafe_arena_release_querydata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryDataResponse.queryData)
  if (result_case() == kQueryData) {
    clear_has_result();
    auto* temp = _impl_.result_.querydata_;
    _impl_.result_.querydata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataResponse::unsafe_arena_set_allocated_querydata(::dp::service::query::QueryDataResponse_QueryData* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_querydata();
    _impl_.result_.querydata_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryDataResponse.queryData)
}
inline ::dp::service::query::QueryDataResponse_QueryData* QueryDataResponse::_internal_mutable_querydata() {
  if (result_case() != kQueryData) {
    clear_result();
    set_has_querydata();
    _impl_.result_.querydata_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryDataResponse_QueryData>(GetArena());
  }
  return _impl_.result_.querydata_;
}
inline ::dp::service::query::QueryDataResponse_QueryData* QueryDataResponse::mutable_querydata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryDataResponse_QueryData* _msg = _internal_mutable_querydata();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryDataResponse.queryData)
  return _msg;
}

inline bool QueryDataResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryDataResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryDataResponse::ResultCase QueryDataResponse::result_case() const {
  return QueryDataResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryTableRequest

// .dp.service.query.QueryTableRequest.TableResultFormat format = 1;
inline void QueryTableRequest::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = 0;
}
inline ::dp::service::query::QueryTableRequest_TableResultFormat QueryTableRequest::format() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableRequest.format)
  return _internal_format();
}
inline void QueryTableRequest::set_format(::dp::service::query::QueryTableRequest_TableResultFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryTableRequest.format)
}
inline ::dp::service::query::QueryTableRequest_TableResultFormat QueryTableRequest::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::dp::service::query::QueryTableRequest_TableResultFormat>(_impl_.format_);
}
inline void QueryTableRequest::_internal_set_format(::dp::service::query::QueryTableRequest_TableResultFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = value;
}

// .Timestamp beginTime = 2;
inline bool QueryTableRequest::has_begintime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.begintime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryTableRequest::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.begintime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryTableRequest::begintime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableRequest.beginTime)
  return _internal_begintime();
}
inline void QueryTableRequest::unsafe_arena_set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }
  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableRequest.beginTime)
}
inline ::Timestamp* QueryTableRequest::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryTableRequest::unsafe_arena_release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableRequest.beginTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryTableRequest::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.begintime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.begintime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.begintime_;
}
inline ::Timestamp* QueryTableRequest::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableRequest.beginTime)
  return _msg;
}
inline void QueryTableRequest::set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryTableRequest.beginTime)
}

// .Timestamp endTime = 3;
inline bool QueryTableRequest::has_endtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endtime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryTableRequest::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.endtime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryTableRequest::endtime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableRequest.endTime)
  return _internal_endtime();
}
inline void QueryTableRequest::unsafe_arena_set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }
  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableRequest.endTime)
}
inline ::Timestamp* QueryTableRequest::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* released = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryTableRequest::unsafe_arena_release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableRequest.endTime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* temp = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryTableRequest::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endtime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.endtime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.endtime_;
}
inline ::Timestamp* QueryTableRequest::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Timestamp* _msg = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableRequest.endTime)
  return _msg;
}
inline void QueryTableRequest::set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryTableRequest.endTime)
}

// .dp.service.query.PvNameList pvNameList = 11;
inline bool QueryTableRequest::has_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList;
}
inline bool QueryTableRequest::_internal_has_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList;
}
inline void QueryTableRequest::set_has_pvnamelist() {
  _impl_._oneof_case_[0] = kPvNameList;
}
inline void QueryTableRequest::clear_pvnamelist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pvNameSpec_case() == kPvNameList) {
    if (GetArena() == nullptr) {
      delete _impl_.pvNameSpec_.pvnamelist_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pvNameSpec_.pvnamelist_);
    }
    clear_has_pvNameSpec();
  }
}
inline ::dp::service::query::PvNameList* QueryTableRequest::release_pvnamelist() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableRequest.pvNameList)
  if (pvNameSpec_case() == kPvNameList) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamelist_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.pvNameSpec_.pvnamelist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::PvNameList& QueryTableRequest::_internal_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList ? *_impl_.pvNameSpec_.pvnamelist_ : reinterpret_cast<::dp::service::query::PvNameList&>(::dp::service::query::_PvNameList_default_instance_);
}
inline const ::dp::service::query::PvNameList& QueryTableRequest::pvnamelist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableRequest.pvNameList)
  return _internal_pvnamelist();
}
inline ::dp::service::query::PvNameList* QueryTableRequest::unsafe_arena_release_pvnamelist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableRequest.pvNameList)
  if (pvNameSpec_case() == kPvNameList) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamelist_;
    _impl_.pvNameSpec_.pvnamelist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableRequest::unsafe_arena_set_allocated_pvnamelist(::dp::service::query::PvNameList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_pvNameSpec();
  if (value) {
    set_has_pvnamelist();
    _impl_.pvNameSpec_.pvnamelist_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableRequest.pvNameList)
}
inline ::dp::service::query::PvNameList* QueryTableRequest::_internal_mutable_pvnamelist() {
  if (pvNameSpec_case() != kPvNameList) {
    clear_pvNameSpec();
    set_has_pvnamelist();
    _impl_.pvNameSpec_.pvnamelist_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::PvNameList>(GetArena());
  }
  return _impl_.pvNameSpec_.pvnamelist_;
}
inline ::dp::service::query::PvNameList* QueryTableRequest::mutable_pvnamelist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::PvNameList* _msg = _internal_mutable_pvnamelist();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableRequest.pvNameList)
  return _msg;
}

// .dp.service.query.PvNamePattern pvNamePattern = 12;
inline bool QueryTableRequest::has_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern;
}
inline bool QueryTableRequest::_internal_has_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern;
}
inline void QueryTableRequest::set_has_pvnamepattern() {
  _impl_._oneof_case_[0] = kPvNamePattern;
}
inline void QueryTableRequest::clear_pvnamepattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pvNameSpec_case() == kPvNamePattern) {
    if (GetArena() == nullptr) {
      delete _impl_.pvNameSpec_.pvnamepattern_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pvNameSpec_.pvnamepattern_);
    }
    clear_has_pvNameSpec();
  }
}
inline ::dp::service::query::PvNamePattern* QueryTableRequest::release_pvnamepattern() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableRequest.pvNamePattern)
  if (pvNameSpec_case() == kPvNamePattern) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamepattern_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.pvNameSpec_.pvnamepattern_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::PvNamePattern& QueryTableRequest::_internal_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern ? *_impl_.pvNameSpec_.pvnamepattern_ : reinterpret_cast<::dp::service::query::PvNamePattern&>(::dp::service::query::_PvNamePattern_default_instance_);
}
inline const ::dp::service::query::PvNamePattern& QueryTableRequest::pvnamepattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableRequest.pvNamePattern)
  return _internal_pvnamepattern();
}
inline ::dp::service::query::PvNamePattern* QueryTableRequest::unsafe_arena_release_pvnamepattern() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableRequest.pvNamePattern)
  if (pvNameSpec_case() == kPvNamePattern) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamepattern_;
    _impl_.pvNameSpec_.pvnamepattern_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableRequest::unsafe_arena_set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_pvNameSpec();
  if (value) {
    set_has_pvnamepattern();
    _impl_.pvNameSpec_.pvnamepattern_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableRequest.pvNamePattern)
}
inline ::dp::service::query::PvNamePattern* QueryTableRequest::_internal_mutable_pvnamepattern() {
  if (pvNameSpec_case() != kPvNamePattern) {
    clear_pvNameSpec();
    set_has_pvnamepattern();
    _impl_.pvNameSpec_.pvnamepattern_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::PvNamePattern>(GetArena());
  }
  return _impl_.pvNameSpec_.pvnamepattern_;
}
inline ::dp::service::query::PvNamePattern* QueryTableRequest::mutable_pvnamepattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::PvNamePattern* _msg = _internal_mutable_pvnamepattern();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableRequest.pvNamePattern)
  return _msg;
}

inline bool QueryTableRequest::has_pvNameSpec() const {
  return pvNameSpec_case() != PVNAMESPEC_NOT_SET;
}
inline void QueryTableRequest::clear_has_pvNameSpec() {
  _impl_._oneof_case_[0] = PVNAMESPEC_NOT_SET;
}
inline QueryTableRequest::PvNameSpecCase QueryTableRequest::pvNameSpec_case() const {
  return QueryTableRequest::PvNameSpecCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryTableResponse_TableResult

// .dp.service.query.QueryTableResponse.ColumnTable columnTable = 1;
inline bool QueryTableResponse_TableResult::has_columntable() const {
  return tableResult_case() == kColumnTable;
}
inline bool QueryTableResponse_TableResult::_internal_has_columntable() const {
  return tableResult_case() == kColumnTable;
}
inline void QueryTableResponse_TableResult::set_has_columntable() {
  _impl_._oneof_case_[0] = kColumnTable;
}
inline void QueryTableResponse_TableResult::clear_columntable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (tableResult_case() == kColumnTable) {
    if (GetArena() == nullptr) {
      delete _impl_.tableResult_.columntable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.tableResult_.columntable_);
    }
    clear_has_tableResult();
  }
}
inline ::dp::service::query::QueryTableResponse_ColumnTable* QueryTableResponse_TableResult::release_columntable() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.TableResult.columnTable)
  if (tableResult_case() == kColumnTable) {
    clear_has_tableResult();
    auto* temp = _impl_.tableResult_.columntable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.tableResult_.columntable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryTableResponse_ColumnTable& QueryTableResponse_TableResult::_internal_columntable() const {
  return tableResult_case() == kColumnTable ? *_impl_.tableResult_.columntable_ : reinterpret_cast<::dp::service::query::QueryTableResponse_ColumnTable&>(::dp::service::query::_QueryTableResponse_ColumnTable_default_instance_);
}
inline const ::dp::service::query::QueryTableResponse_ColumnTable& QueryTableResponse_TableResult::columntable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.TableResult.columnTable)
  return _internal_columntable();
}
inline ::dp::service::query::QueryTableResponse_ColumnTable* QueryTableResponse_TableResult::unsafe_arena_release_columntable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableResponse.TableResult.columnTable)
  if (tableResult_case() == kColumnTable) {
    clear_has_tableResult();
    auto* temp = _impl_.tableResult_.columntable_;
    _impl_.tableResult_.columntable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableResponse_TableResult::unsafe_arena_set_allocated_columntable(::dp::service::query::QueryTableResponse_ColumnTable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_tableResult();
  if (value) {
    set_has_columntable();
    _impl_.tableResult_.columntable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.TableResult.columnTable)
}
inline ::dp::service::query::QueryTableResponse_ColumnTable* QueryTableResponse_TableResult::_internal_mutable_columntable() {
  if (tableResult_case() != kColumnTable) {
    clear_tableResult();
    set_has_columntable();
    _impl_.tableResult_.columntable_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryTableResponse_ColumnTable>(GetArena());
  }
  return _impl_.tableResult_.columntable_;
}
inline ::dp::service::query::QueryTableResponse_ColumnTable* QueryTableResponse_TableResult::mutable_columntable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryTableResponse_ColumnTable* _msg = _internal_mutable_columntable();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.TableResult.columnTable)
  return _msg;
}

// .dp.service.query.QueryTableResponse.RowMapTable rowMapTable = 2;
inline bool QueryTableResponse_TableResult::has_rowmaptable() const {
  return tableResult_case() == kRowMapTable;
}
inline bool QueryTableResponse_TableResult::_internal_has_rowmaptable() const {
  return tableResult_case() == kRowMapTable;
}
inline void QueryTableResponse_TableResult::set_has_rowmaptable() {
  _impl_._oneof_case_[0] = kRowMapTable;
}
inline void QueryTableResponse_TableResult::clear_rowmaptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (tableResult_case() == kRowMapTable) {
    if (GetArena() == nullptr) {
      delete _impl_.tableResult_.rowmaptable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.tableResult_.rowmaptable_);
    }
    clear_has_tableResult();
  }
}
inline ::dp::service::query::QueryTableResponse_RowMapTable* QueryTableResponse_TableResult::release_rowmaptable() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.TableResult.rowMapTable)
  if (tableResult_case() == kRowMapTable) {
    clear_has_tableResult();
    auto* temp = _impl_.tableResult_.rowmaptable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.tableResult_.rowmaptable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryTableResponse_RowMapTable& QueryTableResponse_TableResult::_internal_rowmaptable() const {
  return tableResult_case() == kRowMapTable ? *_impl_.tableResult_.rowmaptable_ : reinterpret_cast<::dp::service::query::QueryTableResponse_RowMapTable&>(::dp::service::query::_QueryTableResponse_RowMapTable_default_instance_);
}
inline const ::dp::service::query::QueryTableResponse_RowMapTable& QueryTableResponse_TableResult::rowmaptable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.TableResult.rowMapTable)
  return _internal_rowmaptable();
}
inline ::dp::service::query::QueryTableResponse_RowMapTable* QueryTableResponse_TableResult::unsafe_arena_release_rowmaptable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableResponse.TableResult.rowMapTable)
  if (tableResult_case() == kRowMapTable) {
    clear_has_tableResult();
    auto* temp = _impl_.tableResult_.rowmaptable_;
    _impl_.tableResult_.rowmaptable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableResponse_TableResult::unsafe_arena_set_allocated_rowmaptable(::dp::service::query::QueryTableResponse_RowMapTable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_tableResult();
  if (value) {
    set_has_rowmaptable();
    _impl_.tableResult_.rowmaptable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.TableResult.rowMapTable)
}
inline ::dp::service::query::QueryTableResponse_RowMapTable* QueryTableResponse_TableResult::_internal_mutable_rowmaptable() {
  if (tableResult_case() != kRowMapTable) {
    clear_tableResult();
    set_has_rowmaptable();
    _impl_.tableResult_.rowmaptable_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryTableResponse_RowMapTable>(GetArena());
  }
  return _impl_.tableResult_.rowmaptable_;
}
inline ::dp::service::query::QueryTableResponse_RowMapTable* QueryTableResponse_TableResult::mutable_rowmaptable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryTableResponse_RowMapTable* _msg = _internal_mutable_rowmaptable();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.TableResult.rowMapTable)
  return _msg;
}

inline bool QueryTableResponse_TableResult::has_tableResult() const {
  return tableResult_case() != TABLERESULT_NOT_SET;
}
inline void QueryTableResponse_TableResult::clear_has_tableResult() {
  _impl_._oneof_case_[0] = TABLERESULT_NOT_SET;
}
inline QueryTableResponse_TableResult::TableResultCase QueryTableResponse_TableResult::tableResult_case() const {
  return QueryTableResponse_TableResult::TableResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryTableResponse_ColumnTable

// .DataTimestamps dataTimestamps = 1;
inline bool QueryTableResponse_ColumnTable::has_datatimestamps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.datatimestamps_ != nullptr);
  return value;
}
inline const ::DataTimestamps& QueryTableResponse_ColumnTable::_internal_datatimestamps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DataTimestamps* p = _impl_.datatimestamps_;
  return p != nullptr ? *p : reinterpret_cast<const ::DataTimestamps&>(::_DataTimestamps_default_instance_);
}
inline const ::DataTimestamps& QueryTableResponse_ColumnTable::datatimestamps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.ColumnTable.dataTimestamps)
  return _internal_datatimestamps();
}
inline void QueryTableResponse_ColumnTable::unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }
  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.ColumnTable.dataTimestamps)
}
inline ::DataTimestamps* QueryTableResponse_ColumnTable::release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* released = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DataTimestamps* QueryTableResponse_ColumnTable::unsafe_arena_release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.ColumnTable.dataTimestamps)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* temp = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
  return temp;
}
inline ::DataTimestamps* QueryTableResponse_ColumnTable::_internal_mutable_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datatimestamps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DataTimestamps>(GetArena());
    _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(p);
  }
  return _impl_.datatimestamps_;
}
inline ::DataTimestamps* QueryTableResponse_ColumnTable::mutable_datatimestamps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DataTimestamps* _msg = _internal_mutable_datatimestamps();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.ColumnTable.dataTimestamps)
  return _msg;
}
inline void QueryTableResponse_ColumnTable::set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryTableResponse.ColumnTable.dataTimestamps)
}

// repeated .DataColumn dataColumns = 2;
inline int QueryTableResponse_ColumnTable::_internal_datacolumns_size() const {
  return _internal_datacolumns().size();
}
inline int QueryTableResponse_ColumnTable::datacolumns_size() const {
  return _internal_datacolumns_size();
}
inline ::DataColumn* QueryTableResponse_ColumnTable::mutable_datacolumns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.ColumnTable.dataColumns)
  return _internal_mutable_datacolumns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DataColumn>* QueryTableResponse_ColumnTable::mutable_datacolumns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryTableResponse.ColumnTable.dataColumns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_datacolumns();
}
inline const ::DataColumn& QueryTableResponse_ColumnTable::datacolumns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.ColumnTable.dataColumns)
  return _internal_datacolumns().Get(index);
}
inline ::DataColumn* QueryTableResponse_ColumnTable::add_datacolumns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DataColumn* _add = _internal_mutable_datacolumns()->Add();
  // @@protoc_insertion_point(field_add:dp.service.query.QueryTableResponse.ColumnTable.dataColumns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DataColumn>& QueryTableResponse_ColumnTable::datacolumns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryTableResponse.ColumnTable.dataColumns)
  return _internal_datacolumns();
}
inline const ::google::protobuf::RepeatedPtrField<::DataColumn>&
QueryTableResponse_ColumnTable::_internal_datacolumns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datacolumns_;
}
inline ::google::protobuf::RepeatedPtrField<::DataColumn>*
QueryTableResponse_ColumnTable::_internal_mutable_datacolumns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.datacolumns_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryTableResponse_RowMapTable_DataRow

// map<string, .DataValue> columnValues = 1;
inline int QueryTableResponse_RowMapTable_DataRow::_internal_columnvalues_size() const {
  return _internal_columnvalues().size();
}
inline int QueryTableResponse_RowMapTable_DataRow::columnvalues_size() const {
  return _internal_columnvalues_size();
}
inline const ::google::protobuf::Map<std::string, ::DataValue>& QueryTableResponse_RowMapTable_DataRow::_internal_columnvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.columnvalues_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::DataValue>& QueryTableResponse_RowMapTable_DataRow::columnvalues() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:dp.service.query.QueryTableResponse.RowMapTable.DataRow.columnValues)
  return _internal_columnvalues();
}
inline ::google::protobuf::Map<std::string, ::DataValue>* QueryTableResponse_RowMapTable_DataRow::_internal_mutable_columnvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.columnvalues_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::DataValue>* QueryTableResponse_RowMapTable_DataRow::mutable_columnvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:dp.service.query.QueryTableResponse.RowMapTable.DataRow.columnValues)
  return _internal_mutable_columnvalues();
}

// -------------------------------------------------------------------

// QueryTableResponse_RowMapTable

// repeated string columnNames = 1;
inline int QueryTableResponse_RowMapTable::_internal_columnnames_size() const {
  return _internal_columnnames().size();
}
inline int QueryTableResponse_RowMapTable::columnnames_size() const {
  return _internal_columnnames_size();
}
inline void QueryTableResponse_RowMapTable::clear_columnnames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.columnnames_.Clear();
}
inline std::string* QueryTableResponse_RowMapTable::add_columnnames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_columnnames()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
  return _s;
}
inline const std::string& QueryTableResponse_RowMapTable::columnnames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
  return _internal_columnnames().Get(index);
}
inline std::string* QueryTableResponse_RowMapTable::mutable_columnnames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
  return _internal_mutable_columnnames()->Mutable(index);
}
inline void QueryTableResponse_RowMapTable::set_columnnames(int index, const std::string& value) {
  _internal_mutable_columnnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::set_columnnames(int index, std::string&& value) {
  _internal_mutable_columnnames()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::set_columnnames(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_columnnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::set_columnnames(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_columnnames()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::set_columnnames(int index, absl::string_view value) {
  _internal_mutable_columnnames()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::add_columnnames(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_columnnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::add_columnnames(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_columnnames()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::add_columnnames(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_columnnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::add_columnnames(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_columnnames()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline void QueryTableResponse_RowMapTable::add_columnnames(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_columnnames()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryTableResponse_RowMapTable::columnnames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
  return _internal_columnnames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryTableResponse_RowMapTable::mutable_columnnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryTableResponse.RowMapTable.columnNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_columnnames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryTableResponse_RowMapTable::_internal_columnnames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.columnnames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryTableResponse_RowMapTable::_internal_mutable_columnnames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.columnnames_;
}

// repeated .dp.service.query.QueryTableResponse.RowMapTable.DataRow rows = 2;
inline int QueryTableResponse_RowMapTable::_internal_rows_size() const {
  return _internal_rows().size();
}
inline int QueryTableResponse_RowMapTable::rows_size() const {
  return _internal_rows_size();
}
inline void QueryTableResponse_RowMapTable::clear_rows() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rows_.Clear();
}
inline ::dp::service::query::QueryTableResponse_RowMapTable_DataRow* QueryTableResponse_RowMapTable::mutable_rows(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.RowMapTable.rows)
  return _internal_mutable_rows()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>* QueryTableResponse_RowMapTable::mutable_rows()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryTableResponse.RowMapTable.rows)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rows();
}
inline const ::dp::service::query::QueryTableResponse_RowMapTable_DataRow& QueryTableResponse_RowMapTable::rows(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.RowMapTable.rows)
  return _internal_rows().Get(index);
}
inline ::dp::service::query::QueryTableResponse_RowMapTable_DataRow* QueryTableResponse_RowMapTable::add_rows() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::query::QueryTableResponse_RowMapTable_DataRow* _add = _internal_mutable_rows()->Add();
  // @@protoc_insertion_point(field_add:dp.service.query.QueryTableResponse.RowMapTable.rows)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>& QueryTableResponse_RowMapTable::rows() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryTableResponse.RowMapTable.rows)
  return _internal_rows();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>&
QueryTableResponse_RowMapTable::_internal_rows() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rows_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryTableResponse_RowMapTable_DataRow>*
QueryTableResponse_RowMapTable::_internal_mutable_rows() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rows_;
}

// -------------------------------------------------------------------

// QueryTableResponse

// .Timestamp responseTime = 1;
inline bool QueryTableResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryTableResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryTableResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryTableResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.responseTime)
}
inline ::Timestamp* QueryTableResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryTableResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryTableResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryTableResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.responseTime)
  return _msg;
}
inline void QueryTableResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryTableResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryTableResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryTableResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryTableResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryTableResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryTableResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryTableResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryTableResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryTableResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryTableResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.exceptionalResult)
  return _msg;
}

// .dp.service.query.QueryTableResponse.TableResult tableResult = 11;
inline bool QueryTableResponse::has_tableresult() const {
  return result_case() == kTableResult;
}
inline bool QueryTableResponse::_internal_has_tableresult() const {
  return result_case() == kTableResult;
}
inline void QueryTableResponse::set_has_tableresult() {
  _impl_._oneof_case_[0] = kTableResult;
}
inline void QueryTableResponse::clear_tableresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kTableResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.tableresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.tableresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::query::QueryTableResponse_TableResult* QueryTableResponse::release_tableresult() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryTableResponse.tableResult)
  if (result_case() == kTableResult) {
    clear_has_result();
    auto* temp = _impl_.result_.tableresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.tableresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryTableResponse_TableResult& QueryTableResponse::_internal_tableresult() const {
  return result_case() == kTableResult ? *_impl_.result_.tableresult_ : reinterpret_cast<::dp::service::query::QueryTableResponse_TableResult&>(::dp::service::query::_QueryTableResponse_TableResult_default_instance_);
}
inline const ::dp::service::query::QueryTableResponse_TableResult& QueryTableResponse::tableresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryTableResponse.tableResult)
  return _internal_tableresult();
}
inline ::dp::service::query::QueryTableResponse_TableResult* QueryTableResponse::unsafe_arena_release_tableresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryTableResponse.tableResult)
  if (result_case() == kTableResult) {
    clear_has_result();
    auto* temp = _impl_.result_.tableresult_;
    _impl_.result_.tableresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryTableResponse::unsafe_arena_set_allocated_tableresult(::dp::service::query::QueryTableResponse_TableResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_tableresult();
    _impl_.result_.tableresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryTableResponse.tableResult)
}
inline ::dp::service::query::QueryTableResponse_TableResult* QueryTableResponse::_internal_mutable_tableresult() {
  if (result_case() != kTableResult) {
    clear_result();
    set_has_tableresult();
    _impl_.result_.tableresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryTableResponse_TableResult>(GetArena());
  }
  return _impl_.result_.tableresult_;
}
inline ::dp::service::query::QueryTableResponse_TableResult* QueryTableResponse::mutable_tableresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryTableResponse_TableResult* _msg = _internal_mutable_tableresult();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryTableResponse.tableResult)
  return _msg;
}

inline bool QueryTableResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryTableResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryTableResponse::ResultCase QueryTableResponse::result_case() const {
  return QueryTableResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryMetadataRequest

// .dp.service.query.PvNameList pvNameList = 1;
inline bool QueryMetadataRequest::has_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList;
}
inline bool QueryMetadataRequest::_internal_has_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList;
}
inline void QueryMetadataRequest::set_has_pvnamelist() {
  _impl_._oneof_case_[0] = kPvNameList;
}
inline void QueryMetadataRequest::clear_pvnamelist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pvNameSpec_case() == kPvNameList) {
    if (GetArena() == nullptr) {
      delete _impl_.pvNameSpec_.pvnamelist_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pvNameSpec_.pvnamelist_);
    }
    clear_has_pvNameSpec();
  }
}
inline ::dp::service::query::PvNameList* QueryMetadataRequest::release_pvnamelist() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataRequest.pvNameList)
  if (pvNameSpec_case() == kPvNameList) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamelist_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.pvNameSpec_.pvnamelist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::PvNameList& QueryMetadataRequest::_internal_pvnamelist() const {
  return pvNameSpec_case() == kPvNameList ? *_impl_.pvNameSpec_.pvnamelist_ : reinterpret_cast<::dp::service::query::PvNameList&>(::dp::service::query::_PvNameList_default_instance_);
}
inline const ::dp::service::query::PvNameList& QueryMetadataRequest::pvnamelist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataRequest.pvNameList)
  return _internal_pvnamelist();
}
inline ::dp::service::query::PvNameList* QueryMetadataRequest::unsafe_arena_release_pvnamelist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryMetadataRequest.pvNameList)
  if (pvNameSpec_case() == kPvNameList) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamelist_;
    _impl_.pvNameSpec_.pvnamelist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryMetadataRequest::unsafe_arena_set_allocated_pvnamelist(::dp::service::query::PvNameList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_pvNameSpec();
  if (value) {
    set_has_pvnamelist();
    _impl_.pvNameSpec_.pvnamelist_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataRequest.pvNameList)
}
inline ::dp::service::query::PvNameList* QueryMetadataRequest::_internal_mutable_pvnamelist() {
  if (pvNameSpec_case() != kPvNameList) {
    clear_pvNameSpec();
    set_has_pvnamelist();
    _impl_.pvNameSpec_.pvnamelist_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::PvNameList>(GetArena());
  }
  return _impl_.pvNameSpec_.pvnamelist_;
}
inline ::dp::service::query::PvNameList* QueryMetadataRequest::mutable_pvnamelist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::PvNameList* _msg = _internal_mutable_pvnamelist();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataRequest.pvNameList)
  return _msg;
}

// .dp.service.query.PvNamePattern pvNamePattern = 2;
inline bool QueryMetadataRequest::has_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern;
}
inline bool QueryMetadataRequest::_internal_has_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern;
}
inline void QueryMetadataRequest::set_has_pvnamepattern() {
  _impl_._oneof_case_[0] = kPvNamePattern;
}
inline void QueryMetadataRequest::clear_pvnamepattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (pvNameSpec_case() == kPvNamePattern) {
    if (GetArena() == nullptr) {
      delete _impl_.pvNameSpec_.pvnamepattern_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pvNameSpec_.pvnamepattern_);
    }
    clear_has_pvNameSpec();
  }
}
inline ::dp::service::query::PvNamePattern* QueryMetadataRequest::release_pvnamepattern() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataRequest.pvNamePattern)
  if (pvNameSpec_case() == kPvNamePattern) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamepattern_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.pvNameSpec_.pvnamepattern_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::PvNamePattern& QueryMetadataRequest::_internal_pvnamepattern() const {
  return pvNameSpec_case() == kPvNamePattern ? *_impl_.pvNameSpec_.pvnamepattern_ : reinterpret_cast<::dp::service::query::PvNamePattern&>(::dp::service::query::_PvNamePattern_default_instance_);
}
inline const ::dp::service::query::PvNamePattern& QueryMetadataRequest::pvnamepattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataRequest.pvNamePattern)
  return _internal_pvnamepattern();
}
inline ::dp::service::query::PvNamePattern* QueryMetadataRequest::unsafe_arena_release_pvnamepattern() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryMetadataRequest.pvNamePattern)
  if (pvNameSpec_case() == kPvNamePattern) {
    clear_has_pvNameSpec();
    auto* temp = _impl_.pvNameSpec_.pvnamepattern_;
    _impl_.pvNameSpec_.pvnamepattern_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryMetadataRequest::unsafe_arena_set_allocated_pvnamepattern(::dp::service::query::PvNamePattern* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_pvNameSpec();
  if (value) {
    set_has_pvnamepattern();
    _impl_.pvNameSpec_.pvnamepattern_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataRequest.pvNamePattern)
}
inline ::dp::service::query::PvNamePattern* QueryMetadataRequest::_internal_mutable_pvnamepattern() {
  if (pvNameSpec_case() != kPvNamePattern) {
    clear_pvNameSpec();
    set_has_pvnamepattern();
    _impl_.pvNameSpec_.pvnamepattern_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::PvNamePattern>(GetArena());
  }
  return _impl_.pvNameSpec_.pvnamepattern_;
}
inline ::dp::service::query::PvNamePattern* QueryMetadataRequest::mutable_pvnamepattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::PvNamePattern* _msg = _internal_mutable_pvnamepattern();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataRequest.pvNamePattern)
  return _msg;
}

inline bool QueryMetadataRequest::has_pvNameSpec() const {
  return pvNameSpec_case() != PVNAMESPEC_NOT_SET;
}
inline void QueryMetadataRequest::clear_has_pvNameSpec() {
  _impl_._oneof_case_[0] = PVNAMESPEC_NOT_SET;
}
inline QueryMetadataRequest::PvNameSpecCase QueryMetadataRequest::pvNameSpec_case() const {
  return QueryMetadataRequest::PvNameSpecCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryMetadataResponse_MetadataResult_PvInfo

// string pvName = 1;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_pvname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvname_.ClearToEmpty();
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::pvname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.pvName)
  return _internal_pvname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMetadataResponse_MetadataResult_PvInfo::set_pvname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.pvName)
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::mutable_pvname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pvname();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.pvName)
  return _s;
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::_internal_pvname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pvname_.Get();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_pvname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvname_.Set(value, GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_pvname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pvname_.Mutable( GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::release_pvname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.pvName)
  return _impl_.pvname_.Release();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_pvname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pvname_.IsDefault()) {
          _impl_.pvname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.pvName)
}

// string lastBucketId = 2;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketid_.ClearToEmpty();
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::lastbucketid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketId)
  return _internal_lastbucketid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketId)
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::mutable_lastbucketid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastbucketid();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketId)
  return _s;
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketid_.Get();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketid_.Set(value, GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_lastbucketid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastbucketid_.Mutable( GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::release_lastbucketid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketId)
  return _impl_.lastbucketid_.Release();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_lastbucketid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastbucketid_.IsDefault()) {
          _impl_.lastbucketid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketId)
}

// int32 lastBucketDataTypeCase = 3;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketdatatypecase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatypecase_ = 0;
}
inline ::int32_t QueryMetadataResponse_MetadataResult_PvInfo::lastbucketdatatypecase() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTypeCase)
  return _internal_lastbucketdatatypecase();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketdatatypecase(::int32_t value) {
  _internal_set_lastbucketdatatypecase(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTypeCase)
}
inline ::int32_t QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketdatatypecase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketdatatypecase_;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketdatatypecase(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatypecase_ = value;
}

// string lastBucketDataType = 4;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketdatatype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatype_.ClearToEmpty();
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::lastbucketdatatype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataType)
  return _internal_lastbucketdatatype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketdatatype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataType)
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::mutable_lastbucketdatatype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastbucketdatatype();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataType)
  return _s;
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketdatatype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketdatatype_.Get();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketdatatype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatype_.Set(value, GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_lastbucketdatatype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastbucketdatatype_.Mutable( GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::release_lastbucketdatatype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataType)
  return _impl_.lastbucketdatatype_.Release();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_lastbucketdatatype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastbucketdatatype_.IsDefault()) {
          _impl_.lastbucketdatatype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataType)
}

// int32 lastBucketDataTimestampsCase = 5;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketdatatimestampscase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampscase_ = 0;
}
inline ::int32_t QueryMetadataResponse_MetadataResult_PvInfo::lastbucketdatatimestampscase() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsCase)
  return _internal_lastbucketdatatimestampscase();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketdatatimestampscase(::int32_t value) {
  _internal_set_lastbucketdatatimestampscase(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsCase)
}
inline ::int32_t QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketdatatimestampscase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketdatatimestampscase_;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketdatatimestampscase(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampscase_ = value;
}

// string lastBucketDataTimestampsType = 6;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketdatatimestampstype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampstype_.ClearToEmpty();
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::lastbucketdatatimestampstype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsType)
  return _internal_lastbucketdatatimestampstype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketdatatimestampstype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampstype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsType)
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::mutable_lastbucketdatatimestampstype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastbucketdatatimestampstype();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsType)
  return _s;
}
inline const std::string& QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketdatatimestampstype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketdatatimestampstype_.Get();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketdatatimestampstype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampstype_.Set(value, GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_lastbucketdatatimestampstype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastbucketdatatimestampstype_.Mutable( GetArena());
}
inline std::string* QueryMetadataResponse_MetadataResult_PvInfo::release_lastbucketdatatimestampstype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsType)
  return _impl_.lastbucketdatatimestampstype_.Release();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_lastbucketdatatimestampstype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketdatatimestampstype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lastbucketdatatimestampstype_.IsDefault()) {
          _impl_.lastbucketdatatimestampstype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketDataTimestampsType)
}

// uint32 lastBucketSampleCount = 8;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketsamplecount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketsamplecount_ = 0u;
}
inline ::uint32_t QueryMetadataResponse_MetadataResult_PvInfo::lastbucketsamplecount() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketSampleCount)
  return _internal_lastbucketsamplecount();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketsamplecount(::uint32_t value) {
  _internal_set_lastbucketsamplecount(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketSampleCount)
}
inline ::uint32_t QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketsamplecount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketsamplecount_;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketsamplecount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketsamplecount_ = value;
}

// uint64 lastBucketSamplePeriod = 9;
inline void QueryMetadataResponse_MetadataResult_PvInfo::clear_lastbucketsampleperiod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketsampleperiod_ = ::uint64_t{0u};
}
inline ::uint64_t QueryMetadataResponse_MetadataResult_PvInfo::lastbucketsampleperiod() const {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketSamplePeriod)
  return _internal_lastbucketsampleperiod();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_lastbucketsampleperiod(::uint64_t value) {
  _internal_set_lastbucketsampleperiod(value);
  // @@protoc_insertion_point(field_set:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastBucketSamplePeriod)
}
inline ::uint64_t QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastbucketsampleperiod() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastbucketsampleperiod_;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::_internal_set_lastbucketsampleperiod(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastbucketsampleperiod_ = value;
}

// .Timestamp firstDataTimestamp = 10;
inline bool QueryMetadataResponse_MetadataResult_PvInfo::has_firstdatatimestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.firstdatatimestamp_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryMetadataResponse_MetadataResult_PvInfo::_internal_firstdatatimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.firstdatatimestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryMetadataResponse_MetadataResult_PvInfo::firstdatatimestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.firstDataTimestamp)
  return _internal_firstdatatimestamp();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::unsafe_arena_set_allocated_firstdatatimestamp(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.firstdatatimestamp_);
  }
  _impl_.firstdatatimestamp_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.firstDataTimestamp)
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::release_firstdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.firstdatatimestamp_;
  _impl_.firstdatatimestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::unsafe_arena_release_firstdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.firstDataTimestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.firstdatatimestamp_;
  _impl_.firstdatatimestamp_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_firstdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.firstdatatimestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.firstdatatimestamp_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.firstdatatimestamp_;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::mutable_firstdatatimestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_firstdatatimestamp();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.firstDataTimestamp)
  return _msg;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_firstdatatimestamp(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.firstdatatimestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.firstdatatimestamp_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.firstDataTimestamp)
}

// .Timestamp lastDataTimestamp = 11;
inline bool QueryMetadataResponse_MetadataResult_PvInfo::has_lastdatatimestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lastdatatimestamp_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryMetadataResponse_MetadataResult_PvInfo::_internal_lastdatatimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.lastdatatimestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryMetadataResponse_MetadataResult_PvInfo::lastdatatimestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastDataTimestamp)
  return _internal_lastdatatimestamp();
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::unsafe_arena_set_allocated_lastdatatimestamp(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lastdatatimestamp_);
  }
  _impl_.lastdatatimestamp_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastDataTimestamp)
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::release_lastdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* released = _impl_.lastdatatimestamp_;
  _impl_.lastdatatimestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::unsafe_arena_release_lastdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastDataTimestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* temp = _impl_.lastdatatimestamp_;
  _impl_.lastdatatimestamp_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::_internal_mutable_lastdatatimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lastdatatimestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.lastdatatimestamp_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.lastdatatimestamp_;
}
inline ::Timestamp* QueryMetadataResponse_MetadataResult_PvInfo::mutable_lastdatatimestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Timestamp* _msg = _internal_mutable_lastdatatimestamp();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastDataTimestamp)
  return _msg;
}
inline void QueryMetadataResponse_MetadataResult_PvInfo::set_allocated_lastdatatimestamp(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lastdatatimestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.lastdatatimestamp_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo.lastDataTimestamp)
}

// -------------------------------------------------------------------

// QueryMetadataResponse_MetadataResult

// repeated .dp.service.query.QueryMetadataResponse.MetadataResult.PvInfo pvInfos = 1;
inline int QueryMetadataResponse_MetadataResult::_internal_pvinfos_size() const {
  return _internal_pvinfos().size();
}
inline int QueryMetadataResponse_MetadataResult::pvinfos_size() const {
  return _internal_pvinfos_size();
}
inline void QueryMetadataResponse_MetadataResult::clear_pvinfos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvinfos_.Clear();
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo* QueryMetadataResponse_MetadataResult::mutable_pvinfos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.MetadataResult.pvInfos)
  return _internal_mutable_pvinfos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>* QueryMetadataResponse_MetadataResult::mutable_pvinfos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.QueryMetadataResponse.MetadataResult.pvInfos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pvinfos();
}
inline const ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo& QueryMetadataResponse_MetadataResult::pvinfos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.MetadataResult.pvInfos)
  return _internal_pvinfos().Get(index);
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo* QueryMetadataResponse_MetadataResult::add_pvinfos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo* _add = _internal_mutable_pvinfos()->Add();
  // @@protoc_insertion_point(field_add:dp.service.query.QueryMetadataResponse.MetadataResult.pvInfos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>& QueryMetadataResponse_MetadataResult::pvinfos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.QueryMetadataResponse.MetadataResult.pvInfos)
  return _internal_pvinfos();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>&
QueryMetadataResponse_MetadataResult::_internal_pvinfos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pvinfos_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::query::QueryMetadataResponse_MetadataResult_PvInfo>*
QueryMetadataResponse_MetadataResult::_internal_mutable_pvinfos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pvinfos_;
}

// -------------------------------------------------------------------

// QueryMetadataResponse

// .Timestamp responseTime = 1;
inline bool QueryMetadataResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryMetadataResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryMetadataResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryMetadataResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataResponse.responseTime)
}
inline ::Timestamp* QueryMetadataResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryMetadataResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryMetadataResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryMetadataResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.responseTime)
  return _msg;
}
inline void QueryMetadataResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.QueryMetadataResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryMetadataResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryMetadataResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryMetadataResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryMetadataResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryMetadataResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryMetadataResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryMetadataResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryMetadataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryMetadataResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryMetadataResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryMetadataResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.exceptionalResult)
  return _msg;
}

// .dp.service.query.QueryMetadataResponse.MetadataResult metadataResult = 11;
inline bool QueryMetadataResponse::has_metadataresult() const {
  return result_case() == kMetadataResult;
}
inline bool QueryMetadataResponse::_internal_has_metadataresult() const {
  return result_case() == kMetadataResult;
}
inline void QueryMetadataResponse::set_has_metadataresult() {
  _impl_._oneof_case_[0] = kMetadataResult;
}
inline void QueryMetadataResponse::clear_metadataresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kMetadataResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.metadataresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.metadataresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult* QueryMetadataResponse::release_metadataresult() {
  // @@protoc_insertion_point(field_release:dp.service.query.QueryMetadataResponse.metadataResult)
  if (result_case() == kMetadataResult) {
    clear_has_result();
    auto* temp = _impl_.result_.metadataresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.metadataresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::query::QueryMetadataResponse_MetadataResult& QueryMetadataResponse::_internal_metadataresult() const {
  return result_case() == kMetadataResult ? *_impl_.result_.metadataresult_ : reinterpret_cast<::dp::service::query::QueryMetadataResponse_MetadataResult&>(::dp::service::query::_QueryMetadataResponse_MetadataResult_default_instance_);
}
inline const ::dp::service::query::QueryMetadataResponse_MetadataResult& QueryMetadataResponse::metadataresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.QueryMetadataResponse.metadataResult)
  return _internal_metadataresult();
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult* QueryMetadataResponse::unsafe_arena_release_metadataresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.query.QueryMetadataResponse.metadataResult)
  if (result_case() == kMetadataResult) {
    clear_has_result();
    auto* temp = _impl_.result_.metadataresult_;
    _impl_.result_.metadataresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryMetadataResponse::unsafe_arena_set_allocated_metadataresult(::dp::service::query::QueryMetadataResponse_MetadataResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_metadataresult();
    _impl_.result_.metadataresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.query.QueryMetadataResponse.metadataResult)
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult* QueryMetadataResponse::_internal_mutable_metadataresult() {
  if (result_case() != kMetadataResult) {
    clear_result();
    set_has_metadataresult();
    _impl_.result_.metadataresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::query::QueryMetadataResponse_MetadataResult>(GetArena());
  }
  return _impl_.result_.metadataresult_;
}
inline ::dp::service::query::QueryMetadataResponse_MetadataResult* QueryMetadataResponse::mutable_metadataresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::query::QueryMetadataResponse_MetadataResult* _msg = _internal_mutable_metadataresult();
  // @@protoc_insertion_point(field_mutable:dp.service.query.QueryMetadataResponse.metadataResult)
  return _msg;
}

inline bool QueryMetadataResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryMetadataResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryMetadataResponse::ResultCase QueryMetadataResponse::result_case() const {
  return QueryMetadataResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// PvNameList

// repeated string pvNames = 1;
inline int PvNameList::_internal_pvnames_size() const {
  return _internal_pvnames().size();
}
inline int PvNameList::pvnames_size() const {
  return _internal_pvnames_size();
}
inline void PvNameList::clear_pvnames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvnames_.Clear();
}
inline std::string* PvNameList::add_pvnames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pvnames()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.query.PvNameList.pvNames)
  return _s;
}
inline const std::string& PvNameList::pvnames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.PvNameList.pvNames)
  return _internal_pvnames().Get(index);
}
inline std::string* PvNameList::mutable_pvnames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.query.PvNameList.pvNames)
  return _internal_mutable_pvnames()->Mutable(index);
}
inline void PvNameList::set_pvnames(int index, const std::string& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::set_pvnames(int index, std::string&& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::set_pvnames(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::set_pvnames(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::set_pvnames(int index, absl::string_view value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::add_pvnames(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::add_pvnames(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::add_pvnames(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::add_pvnames(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.query.PvNameList.pvNames)
}
inline void PvNameList::add_pvnames(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.query.PvNameList.pvNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PvNameList::pvnames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.query.PvNameList.pvNames)
  return _internal_pvnames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PvNameList::mutable_pvnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.query.PvNameList.pvNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pvnames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PvNameList::_internal_pvnames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pvnames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PvNameList::_internal_mutable_pvnames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pvnames_;
}

// -------------------------------------------------------------------

// PvNamePattern

// string pattern = 1;
inline void PvNamePattern::clear_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.ClearToEmpty();
}
inline const std::string& PvNamePattern::pattern() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.query.PvNamePattern.pattern)
  return _internal_pattern();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PvNamePattern::set_pattern(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.query.PvNamePattern.pattern)
}
inline std::string* PvNamePattern::mutable_pattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pattern();
  // @@protoc_insertion_point(field_mutable:dp.service.query.PvNamePattern.pattern)
  return _s;
}
inline const std::string& PvNamePattern::_internal_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_.Get();
}
inline void PvNamePattern::_internal_set_pattern(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.Set(value, GetArena());
}
inline std::string* PvNamePattern::_internal_mutable_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pattern_.Mutable( GetArena());
}
inline std::string* PvNamePattern::release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.query.PvNamePattern.pattern)
  return _impl_.pattern_.Release();
}
inline void PvNamePattern::set_allocated_pattern(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pattern_.IsDefault()) {
          _impl_.pattern_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.query.PvNamePattern.pattern)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace query
}  // namespace service
}  // namespace dp


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType>() {
  return ::dp::service::query::QueryDataRequest_CursorOperation_CursorOperationType_descriptor();
}
template <>
struct is_proto_enum<::dp::service::query::QueryTableRequest_TableResultFormat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dp::service::query::QueryTableRequest_TableResultFormat>() {
  return ::dp::service::query::QueryTableRequest_TableResultFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_query_2eproto_2epb_2eh
