// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ingestion.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_ingestion_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ingestion_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ingestion_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ingestion_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ingestion_2eproto;
namespace dp {
namespace service {
namespace ingestion {
class IngestDataRequest;
struct IngestDataRequestDefaultTypeInternal;
extern IngestDataRequestDefaultTypeInternal _IngestDataRequest_default_instance_;
class IngestDataRequest_IngestionDataFrame;
struct IngestDataRequest_IngestionDataFrameDefaultTypeInternal;
extern IngestDataRequest_IngestionDataFrameDefaultTypeInternal _IngestDataRequest_IngestionDataFrame_default_instance_;
class IngestDataResponse;
struct IngestDataResponseDefaultTypeInternal;
extern IngestDataResponseDefaultTypeInternal _IngestDataResponse_default_instance_;
class IngestDataResponse_AckResult;
struct IngestDataResponse_AckResultDefaultTypeInternal;
extern IngestDataResponse_AckResultDefaultTypeInternal _IngestDataResponse_AckResult_default_instance_;
class IngestDataStreamResponse;
struct IngestDataStreamResponseDefaultTypeInternal;
extern IngestDataStreamResponseDefaultTypeInternal _IngestDataStreamResponse_default_instance_;
class IngestDataStreamResponse_IngestDataStreamResult;
struct IngestDataStreamResponse_IngestDataStreamResultDefaultTypeInternal;
extern IngestDataStreamResponse_IngestDataStreamResultDefaultTypeInternal _IngestDataStreamResponse_IngestDataStreamResult_default_instance_;
class QueryRequestStatusRequest;
struct QueryRequestStatusRequestDefaultTypeInternal;
extern QueryRequestStatusRequestDefaultTypeInternal _QueryRequestStatusRequest_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion_default_instance_;
class QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion;
struct QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterionDefaultTypeInternal;
extern QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterionDefaultTypeInternal _QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion_default_instance_;
class QueryRequestStatusResponse;
struct QueryRequestStatusResponseDefaultTypeInternal;
extern QueryRequestStatusResponseDefaultTypeInternal _QueryRequestStatusResponse_default_instance_;
class QueryRequestStatusResponse_RequestStatusResult;
struct QueryRequestStatusResponse_RequestStatusResultDefaultTypeInternal;
extern QueryRequestStatusResponse_RequestStatusResultDefaultTypeInternal _QueryRequestStatusResponse_RequestStatusResult_default_instance_;
class QueryRequestStatusResponse_RequestStatusResult_RequestStatus;
struct QueryRequestStatusResponse_RequestStatusResult_RequestStatusDefaultTypeInternal;
extern QueryRequestStatusResponse_RequestStatusResult_RequestStatusDefaultTypeInternal _QueryRequestStatusResponse_RequestStatusResult_RequestStatus_default_instance_;
class RegisterProviderRequest;
struct RegisterProviderRequestDefaultTypeInternal;
extern RegisterProviderRequestDefaultTypeInternal _RegisterProviderRequest_default_instance_;
class RegisterProviderResponse;
struct RegisterProviderResponseDefaultTypeInternal;
extern RegisterProviderResponseDefaultTypeInternal _RegisterProviderResponse_default_instance_;
class RegisterProviderResponse_RegistrationResult;
struct RegisterProviderResponse_RegistrationResultDefaultTypeInternal;
extern RegisterProviderResponse_RegistrationResultDefaultTypeInternal _RegisterProviderResponse_RegistrationResult_default_instance_;
}  // namespace ingestion
}  // namespace service
}  // namespace dp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dp {
namespace service {
namespace ingestion {
enum IngestionRequestStatus : int {
  INGESTION_REQUEST_STATUS_SUCCESS = 0,
  INGESTION_REQUEST_STATUS_REJECTED = 1,
  INGESTION_REQUEST_STATUS_ERROR = 2,
  IngestionRequestStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  IngestionRequestStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool IngestionRequestStatus_IsValid(int value);
extern const uint32_t IngestionRequestStatus_internal_data_[];
constexpr IngestionRequestStatus IngestionRequestStatus_MIN = static_cast<IngestionRequestStatus>(0);
constexpr IngestionRequestStatus IngestionRequestStatus_MAX = static_cast<IngestionRequestStatus>(2);
constexpr int IngestionRequestStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
IngestionRequestStatus_descriptor();
template <typename T>
const std::string& IngestionRequestStatus_Name(T value) {
  static_assert(std::is_same<T, IngestionRequestStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IngestionRequestStatus_Name().");
  return IngestionRequestStatus_Name(static_cast<IngestionRequestStatus>(value));
}
template <>
inline const std::string& IngestionRequestStatus_Name(IngestionRequestStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<IngestionRequestStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool IngestionRequestStatus_Parse(absl::string_view name, IngestionRequestStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IngestionRequestStatus>(
      IngestionRequestStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RegisterProviderResponse_RegistrationResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.RegisterProviderResponse.RegistrationResult) */ {
 public:
  inline RegisterProviderResponse_RegistrationResult() : RegisterProviderResponse_RegistrationResult(nullptr) {}
  ~RegisterProviderResponse_RegistrationResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterProviderResponse_RegistrationResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterProviderResponse_RegistrationResult(const RegisterProviderResponse_RegistrationResult& from) : RegisterProviderResponse_RegistrationResult(nullptr, from) {}
  inline RegisterProviderResponse_RegistrationResult(RegisterProviderResponse_RegistrationResult&& from) noexcept
      : RegisterProviderResponse_RegistrationResult(nullptr, std::move(from)) {}
  inline RegisterProviderResponse_RegistrationResult& operator=(const RegisterProviderResponse_RegistrationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterProviderResponse_RegistrationResult& operator=(RegisterProviderResponse_RegistrationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterProviderResponse_RegistrationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterProviderResponse_RegistrationResult* internal_default_instance() {
    return reinterpret_cast<const RegisterProviderResponse_RegistrationResult*>(
        &_RegisterProviderResponse_RegistrationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RegisterProviderResponse_RegistrationResult& a, RegisterProviderResponse_RegistrationResult& b) { a.Swap(&b); }
  inline void Swap(RegisterProviderResponse_RegistrationResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterProviderResponse_RegistrationResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterProviderResponse_RegistrationResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RegisterProviderResponse_RegistrationResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterProviderResponse_RegistrationResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterProviderResponse_RegistrationResult& from) { RegisterProviderResponse_RegistrationResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterProviderResponse_RegistrationResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.RegisterProviderResponse.RegistrationResult"; }

 protected:
  explicit RegisterProviderResponse_RegistrationResult(::google::protobuf::Arena* arena);
  RegisterProviderResponse_RegistrationResult(::google::protobuf::Arena* arena, const RegisterProviderResponse_RegistrationResult& from);
  RegisterProviderResponse_RegistrationResult(::google::protobuf::Arena* arena, RegisterProviderResponse_RegistrationResult&& from) noexcept
      : RegisterProviderResponse_RegistrationResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProviderIdFieldNumber = 1,
    kProviderNameFieldNumber = 2,
    kIsNewProviderFieldNumber = 3,
  };
  // string providerId = 1;
  void clear_providerid() ;
  const std::string& providerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providerid(Arg_&& arg, Args_... args);
  std::string* mutable_providerid();
  PROTOBUF_NODISCARD std::string* release_providerid();
  void set_allocated_providerid(std::string* value);

  private:
  const std::string& _internal_providerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providerid(
      const std::string& value);
  std::string* _internal_mutable_providerid();

  public:
  // string providerName = 2;
  void clear_providername() ;
  const std::string& providername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providername(Arg_&& arg, Args_... args);
  std::string* mutable_providername();
  PROTOBUF_NODISCARD std::string* release_providername();
  void set_allocated_providername(std::string* value);

  private:
  const std::string& _internal_providername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providername(
      const std::string& value);
  std::string* _internal_mutable_providername();

  public:
  // bool isNewProvider = 3;
  void clear_isnewprovider() ;
  bool isnewprovider() const;
  void set_isnewprovider(bool value);

  private:
  bool _internal_isnewprovider() const;
  void _internal_set_isnewprovider(bool value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      95, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RegisterProviderResponse_RegistrationResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterProviderResponse_RegistrationResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr providerid_;
    ::google::protobuf::internal::ArenaStringPtr providername_;
    bool isnewprovider_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // repeated .dp.service.ingestion.IngestionRequestStatus status = 1;
  int status_size() const;
  private:
  int _internal_status_size() const;

  public:
  void clear_status() ;
  public:
  ::dp::service::ingestion::IngestionRequestStatus status(int index) const;
  void set_status(int index, ::dp::service::ingestion::IngestionRequestStatus value);
  void add_status(::dp::service::ingestion::IngestionRequestStatus value);
  const ::google::protobuf::RepeatedField<int>& status() const;
  ::google::protobuf::RepeatedField<int>* mutable_status();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_status() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& from_msg);
    ::google::protobuf::RepeatedField<int> status_;
    mutable ::google::protobuf::internal::CachedSize _status_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestIdFieldNumber = 1,
  };
  // string requestId = 1;
  void clear_requestid() ;
  const std::string& requestid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requestid(Arg_&& arg, Args_... args);
  std::string* mutable_requestid();
  PROTOBUF_NODISCARD std::string* release_requestid();
  void set_allocated_requestid(std::string* value);

  private:
  const std::string& _internal_requestid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requestid(
      const std::string& value);
  std::string* _internal_mutable_requestid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      111, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr requestid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProviderNameFieldNumber = 1,
  };
  // string providerName = 1;
  void clear_providername() ;
  const std::string& providername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providername(Arg_&& arg, Args_... args);
  std::string* mutable_providername();
  PROTOBUF_NODISCARD std::string* release_providername();
  void set_allocated_providername(std::string* value);

  private:
  const std::string& _internal_providername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providername(
      const std::string& value);
  std::string* _internal_mutable_providername();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      117, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr providername_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProviderIdFieldNumber = 1,
  };
  // string providerId = 1;
  void clear_providerid() ;
  const std::string& providerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providerid(Arg_&& arg, Args_... args);
  std::string* mutable_providerid();
  PROTOBUF_NODISCARD std::string* release_providerid();
  void set_allocated_providerid(std::string* value);

  private:
  const std::string& _internal_providerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providerid(
      const std::string& value);
  std::string* _internal_mutable_providerid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      113, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr providerid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataStreamResponse_IngestDataStreamResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult) */ {
 public:
  inline IngestDataStreamResponse_IngestDataStreamResult() : IngestDataStreamResponse_IngestDataStreamResult(nullptr) {}
  ~IngestDataStreamResponse_IngestDataStreamResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataStreamResponse_IngestDataStreamResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataStreamResponse_IngestDataStreamResult(const IngestDataStreamResponse_IngestDataStreamResult& from) : IngestDataStreamResponse_IngestDataStreamResult(nullptr, from) {}
  inline IngestDataStreamResponse_IngestDataStreamResult(IngestDataStreamResponse_IngestDataStreamResult&& from) noexcept
      : IngestDataStreamResponse_IngestDataStreamResult(nullptr, std::move(from)) {}
  inline IngestDataStreamResponse_IngestDataStreamResult& operator=(const IngestDataStreamResponse_IngestDataStreamResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataStreamResponse_IngestDataStreamResult& operator=(IngestDataStreamResponse_IngestDataStreamResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataStreamResponse_IngestDataStreamResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const IngestDataStreamResponse_IngestDataStreamResult* internal_default_instance() {
    return reinterpret_cast<const IngestDataStreamResponse_IngestDataStreamResult*>(
        &_IngestDataStreamResponse_IngestDataStreamResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(IngestDataStreamResponse_IngestDataStreamResult& a, IngestDataStreamResponse_IngestDataStreamResult& b) { a.Swap(&b); }
  inline void Swap(IngestDataStreamResponse_IngestDataStreamResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataStreamResponse_IngestDataStreamResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataStreamResponse_IngestDataStreamResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataStreamResponse_IngestDataStreamResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataStreamResponse_IngestDataStreamResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataStreamResponse_IngestDataStreamResult& from) { IngestDataStreamResponse_IngestDataStreamResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataStreamResponse_IngestDataStreamResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult"; }

 protected:
  explicit IngestDataStreamResponse_IngestDataStreamResult(::google::protobuf::Arena* arena);
  IngestDataStreamResponse_IngestDataStreamResult(::google::protobuf::Arena* arena, const IngestDataStreamResponse_IngestDataStreamResult& from);
  IngestDataStreamResponse_IngestDataStreamResult(::google::protobuf::Arena* arena, IngestDataStreamResponse_IngestDataStreamResult&& from) noexcept
      : IngestDataStreamResponse_IngestDataStreamResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumRequestsFieldNumber = 1,
  };
  // uint32 numRequests = 1;
  void clear_numrequests() ;
  ::uint32_t numrequests() const;
  void set_numrequests(::uint32_t value);

  private:
  ::uint32_t _internal_numrequests() const;
  void _internal_set_numrequests(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataStreamResponse_IngestDataStreamResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataStreamResponse_IngestDataStreamResult& from_msg);
    ::uint32_t numrequests_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataResponse_AckResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataResponse.AckResult) */ {
 public:
  inline IngestDataResponse_AckResult() : IngestDataResponse_AckResult(nullptr) {}
  ~IngestDataResponse_AckResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataResponse_AckResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataResponse_AckResult(const IngestDataResponse_AckResult& from) : IngestDataResponse_AckResult(nullptr, from) {}
  inline IngestDataResponse_AckResult(IngestDataResponse_AckResult&& from) noexcept
      : IngestDataResponse_AckResult(nullptr, std::move(from)) {}
  inline IngestDataResponse_AckResult& operator=(const IngestDataResponse_AckResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataResponse_AckResult& operator=(IngestDataResponse_AckResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataResponse_AckResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const IngestDataResponse_AckResult* internal_default_instance() {
    return reinterpret_cast<const IngestDataResponse_AckResult*>(
        &_IngestDataResponse_AckResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(IngestDataResponse_AckResult& a, IngestDataResponse_AckResult& b) { a.Swap(&b); }
  inline void Swap(IngestDataResponse_AckResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataResponse_AckResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataResponse_AckResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataResponse_AckResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataResponse_AckResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataResponse_AckResult& from) { IngestDataResponse_AckResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataResponse_AckResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataResponse.AckResult"; }

 protected:
  explicit IngestDataResponse_AckResult(::google::protobuf::Arena* arena);
  IngestDataResponse_AckResult(::google::protobuf::Arena* arena, const IngestDataResponse_AckResult& from);
  IngestDataResponse_AckResult(::google::protobuf::Arena* arena, IngestDataResponse_AckResult&& from) noexcept
      : IngestDataResponse_AckResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumRowsFieldNumber = 1,
    kNumColumnsFieldNumber = 2,
  };
  // uint32 numRows = 1;
  void clear_numrows() ;
  ::uint32_t numrows() const;
  void set_numrows(::uint32_t value);

  private:
  ::uint32_t _internal_numrows() const;
  void _internal_set_numrows(::uint32_t value);

  public:
  // uint32 numColumns = 2;
  void clear_numcolumns() ;
  ::uint32_t numcolumns() const;
  void set_numcolumns(::uint32_t value);

  private:
  ::uint32_t _internal_numcolumns() const;
  void _internal_set_numcolumns(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataResponse.AckResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataResponse_AckResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataResponse_AckResult& from_msg);
    ::uint32_t numrows_;
    ::uint32_t numcolumns_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class RegisterProviderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.RegisterProviderResponse) */ {
 public:
  inline RegisterProviderResponse() : RegisterProviderResponse(nullptr) {}
  ~RegisterProviderResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterProviderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterProviderResponse(const RegisterProviderResponse& from) : RegisterProviderResponse(nullptr, from) {}
  inline RegisterProviderResponse(RegisterProviderResponse&& from) noexcept
      : RegisterProviderResponse(nullptr, std::move(from)) {}
  inline RegisterProviderResponse& operator=(const RegisterProviderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterProviderResponse& operator=(RegisterProviderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterProviderResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kRegistrationResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const RegisterProviderResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterProviderResponse*>(
        &_RegisterProviderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RegisterProviderResponse& a, RegisterProviderResponse& b) { a.Swap(&b); }
  inline void Swap(RegisterProviderResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterProviderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterProviderResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RegisterProviderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterProviderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterProviderResponse& from) { RegisterProviderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterProviderResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.RegisterProviderResponse"; }

 protected:
  explicit RegisterProviderResponse(::google::protobuf::Arena* arena);
  RegisterProviderResponse(::google::protobuf::Arena* arena, const RegisterProviderResponse& from);
  RegisterProviderResponse(::google::protobuf::Arena* arena, RegisterProviderResponse&& from) noexcept
      : RegisterProviderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RegistrationResult = RegisterProviderResponse_RegistrationResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kRegistrationResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.ingestion.RegisterProviderResponse.RegistrationResult registrationResult = 11;
  bool has_registrationresult() const;
  private:
  bool _internal_has_registrationresult() const;

  public:
  void clear_registrationresult() ;
  const ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult& registrationresult() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* release_registrationresult();
  ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* mutable_registrationresult();
  void set_allocated_registrationresult(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* value);
  void unsafe_arena_set_allocated_registrationresult(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* value);
  ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* unsafe_arena_release_registrationresult();

  private:
  const ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult& _internal_registrationresult() const;
  ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* _internal_mutable_registrationresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.RegisterProviderResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_registrationresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RegisterProviderResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterProviderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* registrationresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class RegisterProviderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.RegisterProviderRequest) */ {
 public:
  inline RegisterProviderRequest() : RegisterProviderRequest(nullptr) {}
  ~RegisterProviderRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterProviderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterProviderRequest(const RegisterProviderRequest& from) : RegisterProviderRequest(nullptr, from) {}
  inline RegisterProviderRequest(RegisterProviderRequest&& from) noexcept
      : RegisterProviderRequest(nullptr, std::move(from)) {}
  inline RegisterProviderRequest& operator=(const RegisterProviderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterProviderRequest& operator=(RegisterProviderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterProviderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterProviderRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterProviderRequest*>(
        &_RegisterProviderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RegisterProviderRequest& a, RegisterProviderRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterProviderRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterProviderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterProviderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RegisterProviderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterProviderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterProviderRequest& from) { RegisterProviderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterProviderRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.RegisterProviderRequest"; }

 protected:
  explicit RegisterProviderRequest(::google::protobuf::Arena* arena);
  RegisterProviderRequest(::google::protobuf::Arena* arena, const RegisterProviderRequest& from);
  RegisterProviderRequest(::google::protobuf::Arena* arena, RegisterProviderRequest&& from) noexcept
      : RegisterProviderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 2,
    kProviderNameFieldNumber = 1,
  };
  // repeated .Attribute attributes = 2;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  ::Attribute* mutable_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::Attribute>* mutable_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::Attribute>& _internal_attributes() const;
  ::google::protobuf::RepeatedPtrField<::Attribute>* _internal_mutable_attributes();
  public:
  const ::Attribute& attributes(int index) const;
  ::Attribute* add_attributes();
  const ::google::protobuf::RepeatedPtrField<::Attribute>& attributes() const;
  // string providerName = 1;
  void clear_providername() ;
  const std::string& providername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providername(Arg_&& arg, Args_... args);
  std::string* mutable_providername();
  PROTOBUF_NODISCARD std::string* release_providername();
  void set_allocated_providername(std::string* value);

  private:
  const std::string& _internal_providername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providername(
      const std::string& value);
  std::string* _internal_mutable_providername();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.RegisterProviderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RegisterProviderRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterProviderRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Attribute > attributes_;
    ::google::protobuf::internal::ArenaStringPtr providername_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusResponse_RequestStatusResult_RequestStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus) */ {
 public:
  inline QueryRequestStatusResponse_RequestStatusResult_RequestStatus() : QueryRequestStatusResponse_RequestStatusResult_RequestStatus(nullptr) {}
  ~QueryRequestStatusResponse_RequestStatusResult_RequestStatus() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusResponse_RequestStatusResult_RequestStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusResponse_RequestStatusResult_RequestStatus(const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from) : QueryRequestStatusResponse_RequestStatusResult_RequestStatus(nullptr, from) {}
  inline QueryRequestStatusResponse_RequestStatusResult_RequestStatus(QueryRequestStatusResponse_RequestStatusResult_RequestStatus&& from) noexcept
      : QueryRequestStatusResponse_RequestStatusResult_RequestStatus(nullptr, std::move(from)) {}
  inline QueryRequestStatusResponse_RequestStatusResult_RequestStatus& operator=(const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusResponse_RequestStatusResult_RequestStatus& operator=(QueryRequestStatusResponse_RequestStatusResult_RequestStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusResponse_RequestStatusResult_RequestStatus* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusResponse_RequestStatusResult_RequestStatus*>(
        &_QueryRequestStatusResponse_RequestStatusResult_RequestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryRequestStatusResponse_RequestStatusResult_RequestStatus& a, QueryRequestStatusResponse_RequestStatusResult_RequestStatus& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusResponse_RequestStatusResult_RequestStatus* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusResponse_RequestStatusResult_RequestStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusResponse_RequestStatusResult_RequestStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusResponse_RequestStatusResult_RequestStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from) { QueryRequestStatusResponse_RequestStatusResult_RequestStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusResponse_RequestStatusResult_RequestStatus* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus"; }

 protected:
  explicit QueryRequestStatusResponse_RequestStatusResult_RequestStatus(::google::protobuf::Arena* arena);
  QueryRequestStatusResponse_RequestStatusResult_RequestStatus(::google::protobuf::Arena* arena, const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from);
  QueryRequestStatusResponse_RequestStatusResult_RequestStatus(::google::protobuf::Arena* arena, QueryRequestStatusResponse_RequestStatusResult_RequestStatus&& from) noexcept
      : QueryRequestStatusResponse_RequestStatusResult_RequestStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsCreatedFieldNumber = 7,
    kRequestStatusIdFieldNumber = 1,
    kProviderIdFieldNumber = 2,
    kProviderNameFieldNumber = 3,
    kRequestIdFieldNumber = 4,
    kStatusMessageFieldNumber = 6,
    kUpdateTimeFieldNumber = 8,
    kIngestionRequestStatusFieldNumber = 5,
  };
  // repeated string idsCreated = 7;
  int idscreated_size() const;
  private:
  int _internal_idscreated_size() const;

  public:
  void clear_idscreated() ;
  const std::string& idscreated(int index) const;
  std::string* mutable_idscreated(int index);
  void set_idscreated(int index, const std::string& value);
  void set_idscreated(int index, std::string&& value);
  void set_idscreated(int index, const char* value);
  void set_idscreated(int index, const char* value, std::size_t size);
  void set_idscreated(int index, absl::string_view value);
  std::string* add_idscreated();
  void add_idscreated(const std::string& value);
  void add_idscreated(std::string&& value);
  void add_idscreated(const char* value);
  void add_idscreated(const char* value, std::size_t size);
  void add_idscreated(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& idscreated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_idscreated();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_idscreated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_idscreated();

  public:
  // string requestStatusId = 1;
  void clear_requeststatusid() ;
  const std::string& requeststatusid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requeststatusid(Arg_&& arg, Args_... args);
  std::string* mutable_requeststatusid();
  PROTOBUF_NODISCARD std::string* release_requeststatusid();
  void set_allocated_requeststatusid(std::string* value);

  private:
  const std::string& _internal_requeststatusid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requeststatusid(
      const std::string& value);
  std::string* _internal_mutable_requeststatusid();

  public:
  // string providerId = 2;
  void clear_providerid() ;
  const std::string& providerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providerid(Arg_&& arg, Args_... args);
  std::string* mutable_providerid();
  PROTOBUF_NODISCARD std::string* release_providerid();
  void set_allocated_providerid(std::string* value);

  private:
  const std::string& _internal_providerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providerid(
      const std::string& value);
  std::string* _internal_mutable_providerid();

  public:
  // string providerName = 3;
  void clear_providername() ;
  const std::string& providername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providername(Arg_&& arg, Args_... args);
  std::string* mutable_providername();
  PROTOBUF_NODISCARD std::string* release_providername();
  void set_allocated_providername(std::string* value);

  private:
  const std::string& _internal_providername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providername(
      const std::string& value);
  std::string* _internal_mutable_providername();

  public:
  // string requestId = 4;
  void clear_requestid() ;
  const std::string& requestid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requestid(Arg_&& arg, Args_... args);
  std::string* mutable_requestid();
  PROTOBUF_NODISCARD std::string* release_requestid();
  void set_allocated_requestid(std::string* value);

  private:
  const std::string& _internal_requestid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requestid(
      const std::string& value);
  std::string* _internal_mutable_requestid();

  public:
  // string statusMessage = 6;
  void clear_statusmessage() ;
  const std::string& statusmessage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_statusmessage(Arg_&& arg, Args_... args);
  std::string* mutable_statusmessage();
  PROTOBUF_NODISCARD std::string* release_statusmessage();
  void set_allocated_statusmessage(std::string* value);

  private:
  const std::string& _internal_statusmessage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_statusmessage(
      const std::string& value);
  std::string* _internal_mutable_statusmessage();

  public:
  // .Timestamp updateTime = 8;
  bool has_updatetime() const;
  void clear_updatetime() ;
  const ::Timestamp& updatetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_updatetime();
  ::Timestamp* mutable_updatetime();
  void set_allocated_updatetime(::Timestamp* value);
  void unsafe_arena_set_allocated_updatetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_updatetime();

  private:
  const ::Timestamp& _internal_updatetime() const;
  ::Timestamp* _internal_mutable_updatetime();

  public:
  // .dp.service.ingestion.IngestionRequestStatus ingestionRequestStatus = 5;
  void clear_ingestionrequeststatus() ;
  ::dp::service::ingestion::IngestionRequestStatus ingestionrequeststatus() const;
  void set_ingestionrequeststatus(::dp::service::ingestion::IngestionRequestStatus value);

  private:
  ::dp::service::ingestion::IngestionRequestStatus _internal_ingestionrequeststatus() const;
  void _internal_set_ingestionrequeststatus(::dp::service::ingestion::IngestionRequestStatus value);

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      167, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusResponse_RequestStatusResult_RequestStatus_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusResponse_RequestStatusResult_RequestStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> idscreated_;
    ::google::protobuf::internal::ArenaStringPtr requeststatusid_;
    ::google::protobuf::internal::ArenaStringPtr providerid_;
    ::google::protobuf::internal::ArenaStringPtr providername_;
    ::google::protobuf::internal::ArenaStringPtr requestid_;
    ::google::protobuf::internal::ArenaStringPtr statusmessage_;
    ::Timestamp* updatetime_;
    int ingestionrequeststatus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBeginTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
  };
  // .Timestamp beginTime = 1;
  bool has_begintime() const;
  void clear_begintime() ;
  const ::Timestamp& begintime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_begintime();
  ::Timestamp* mutable_begintime();
  void set_allocated_begintime(::Timestamp* value);
  void unsafe_arena_set_allocated_begintime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_begintime();

  private:
  const ::Timestamp& _internal_begintime() const;
  ::Timestamp* _internal_mutable_begintime();

  public:
  // .Timestamp endTime = 2;
  bool has_endtime() const;
  void clear_endtime() ;
  const ::Timestamp& endtime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_endtime();
  ::Timestamp* mutable_endtime();
  void set_allocated_endtime(::Timestamp* value);
  void unsafe_arena_set_allocated_endtime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_endtime();

  private:
  const ::Timestamp& _internal_endtime() const;
  ::Timestamp* _internal_mutable_endtime();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* begintime_;
    ::Timestamp* endtime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataStreamResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataStreamResponse) */ {
 public:
  inline IngestDataStreamResponse() : IngestDataStreamResponse(nullptr) {}
  ~IngestDataStreamResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataStreamResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataStreamResponse(const IngestDataStreamResponse& from) : IngestDataStreamResponse(nullptr, from) {}
  inline IngestDataStreamResponse(IngestDataStreamResponse&& from) noexcept
      : IngestDataStreamResponse(nullptr, std::move(from)) {}
  inline IngestDataStreamResponse& operator=(const IngestDataStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataStreamResponse& operator=(IngestDataStreamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataStreamResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kIngestDataStreamResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const IngestDataStreamResponse* internal_default_instance() {
    return reinterpret_cast<const IngestDataStreamResponse*>(
        &_IngestDataStreamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(IngestDataStreamResponse& a, IngestDataStreamResponse& b) { a.Swap(&b); }
  inline void Swap(IngestDataStreamResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataStreamResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataStreamResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataStreamResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataStreamResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataStreamResponse& from) { IngestDataStreamResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataStreamResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataStreamResponse"; }

 protected:
  explicit IngestDataStreamResponse(::google::protobuf::Arena* arena);
  IngestDataStreamResponse(::google::protobuf::Arena* arena, const IngestDataStreamResponse& from);
  IngestDataStreamResponse(::google::protobuf::Arena* arena, IngestDataStreamResponse&& from) noexcept
      : IngestDataStreamResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using IngestDataStreamResult = IngestDataStreamResponse_IngestDataStreamResult;

  // accessors -------------------------------------------------------
  enum : int {
    kClientRequestIdsFieldNumber = 2,
    kRejectedRequestIdsFieldNumber = 3,
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kIngestDataStreamResultFieldNumber = 11,
  };
  // repeated string clientRequestIds = 2;
  int clientrequestids_size() const;
  private:
  int _internal_clientrequestids_size() const;

  public:
  void clear_clientrequestids() ;
  const std::string& clientrequestids(int index) const;
  std::string* mutable_clientrequestids(int index);
  void set_clientrequestids(int index, const std::string& value);
  void set_clientrequestids(int index, std::string&& value);
  void set_clientrequestids(int index, const char* value);
  void set_clientrequestids(int index, const char* value, std::size_t size);
  void set_clientrequestids(int index, absl::string_view value);
  std::string* add_clientrequestids();
  void add_clientrequestids(const std::string& value);
  void add_clientrequestids(std::string&& value);
  void add_clientrequestids(const char* value);
  void add_clientrequestids(const char* value, std::size_t size);
  void add_clientrequestids(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& clientrequestids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_clientrequestids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_clientrequestids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_clientrequestids();

  public:
  // repeated string rejectedRequestIds = 3;
  int rejectedrequestids_size() const;
  private:
  int _internal_rejectedrequestids_size() const;

  public:
  void clear_rejectedrequestids() ;
  const std::string& rejectedrequestids(int index) const;
  std::string* mutable_rejectedrequestids(int index);
  void set_rejectedrequestids(int index, const std::string& value);
  void set_rejectedrequestids(int index, std::string&& value);
  void set_rejectedrequestids(int index, const char* value);
  void set_rejectedrequestids(int index, const char* value, std::size_t size);
  void set_rejectedrequestids(int index, absl::string_view value);
  std::string* add_rejectedrequestids();
  void add_rejectedrequestids(const std::string& value);
  void add_rejectedrequestids(std::string&& value);
  void add_rejectedrequestids(const char* value);
  void add_rejectedrequestids(const char* value, std::size_t size);
  void add_rejectedrequestids(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& rejectedrequestids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_rejectedrequestids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_rejectedrequestids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_rejectedrequestids();

  public:
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult ingestDataStreamResult = 11;
  bool has_ingestdatastreamresult() const;
  private:
  bool _internal_has_ingestdatastreamresult() const;

  public:
  void clear_ingestdatastreamresult() ;
  const ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult& ingestdatastreamresult() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* release_ingestdatastreamresult();
  ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* mutable_ingestdatastreamresult();
  void set_allocated_ingestdatastreamresult(::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* value);
  void unsafe_arena_set_allocated_ingestdatastreamresult(::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* value);
  ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* unsafe_arena_release_ingestdatastreamresult();

  private:
  const ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult& _internal_ingestdatastreamresult() const;
  ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* _internal_mutable_ingestdatastreamresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataStreamResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_ingestdatastreamresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 3,
      88, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataStreamResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataStreamResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> clientrequestids_;
    ::google::protobuf::RepeatedPtrField<std::string> rejectedrequestids_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* ingestdatastreamresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataResponse) */ {
 public:
  inline IngestDataResponse() : IngestDataResponse(nullptr) {}
  ~IngestDataResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataResponse(const IngestDataResponse& from) : IngestDataResponse(nullptr, from) {}
  inline IngestDataResponse(IngestDataResponse&& from) noexcept
      : IngestDataResponse(nullptr, std::move(from)) {}
  inline IngestDataResponse& operator=(const IngestDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataResponse& operator=(IngestDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kAckResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const IngestDataResponse* internal_default_instance() {
    return reinterpret_cast<const IngestDataResponse*>(
        &_IngestDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(IngestDataResponse& a, IngestDataResponse& b) { a.Swap(&b); }
  inline void Swap(IngestDataResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataResponse& from) { IngestDataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataResponse"; }

 protected:
  explicit IngestDataResponse(::google::protobuf::Arena* arena);
  IngestDataResponse(::google::protobuf::Arena* arena, const IngestDataResponse& from);
  IngestDataResponse(::google::protobuf::Arena* arena, IngestDataResponse&& from) noexcept
      : IngestDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AckResult = IngestDataResponse_AckResult;

  // accessors -------------------------------------------------------
  enum : int {
    kProviderIdFieldNumber = 1,
    kClientRequestIdFieldNumber = 2,
    kResponseTimeFieldNumber = 3,
    kExceptionalResultFieldNumber = 10,
    kAckResultFieldNumber = 11,
  };
  // string providerId = 1;
  void clear_providerid() ;
  const std::string& providerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providerid(Arg_&& arg, Args_... args);
  std::string* mutable_providerid();
  PROTOBUF_NODISCARD std::string* release_providerid();
  void set_allocated_providerid(std::string* value);

  private:
  const std::string& _internal_providerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providerid(
      const std::string& value);
  std::string* _internal_mutable_providerid();

  public:
  // string clientRequestId = 2;
  void clear_clientrequestid() ;
  const std::string& clientrequestid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_clientrequestid(Arg_&& arg, Args_... args);
  std::string* mutable_clientrequestid();
  PROTOBUF_NODISCARD std::string* release_clientrequestid();
  void set_allocated_clientrequestid(std::string* value);

  private:
  const std::string& _internal_clientrequestid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_clientrequestid(
      const std::string& value);
  std::string* _internal_mutable_clientrequestid();

  public:
  // .Timestamp responseTime = 3;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.ingestion.IngestDataResponse.AckResult ackResult = 11;
  bool has_ackresult() const;
  private:
  bool _internal_has_ackresult() const;

  public:
  void clear_ackresult() ;
  const ::dp::service::ingestion::IngestDataResponse_AckResult& ackresult() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::IngestDataResponse_AckResult* release_ackresult();
  ::dp::service::ingestion::IngestDataResponse_AckResult* mutable_ackresult();
  void set_allocated_ackresult(::dp::service::ingestion::IngestDataResponse_AckResult* value);
  void unsafe_arena_set_allocated_ackresult(::dp::service::ingestion::IngestDataResponse_AckResult* value);
  ::dp::service::ingestion::IngestDataResponse_AckResult* unsafe_arena_release_ackresult();

  private:
  const ::dp::service::ingestion::IngestDataResponse_AckResult& _internal_ackresult() const;
  ::dp::service::ingestion::IngestDataResponse_AckResult* _internal_mutable_ackresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_ackresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 3,
      73, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr providerid_;
    ::google::protobuf::internal::ArenaStringPtr clientrequestid_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::ingestion::IngestDataResponse_AckResult* ackresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusResponse_RequestStatusResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult) */ {
 public:
  inline QueryRequestStatusResponse_RequestStatusResult() : QueryRequestStatusResponse_RequestStatusResult(nullptr) {}
  ~QueryRequestStatusResponse_RequestStatusResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusResponse_RequestStatusResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusResponse_RequestStatusResult(const QueryRequestStatusResponse_RequestStatusResult& from) : QueryRequestStatusResponse_RequestStatusResult(nullptr, from) {}
  inline QueryRequestStatusResponse_RequestStatusResult(QueryRequestStatusResponse_RequestStatusResult&& from) noexcept
      : QueryRequestStatusResponse_RequestStatusResult(nullptr, std::move(from)) {}
  inline QueryRequestStatusResponse_RequestStatusResult& operator=(const QueryRequestStatusResponse_RequestStatusResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusResponse_RequestStatusResult& operator=(QueryRequestStatusResponse_RequestStatusResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusResponse_RequestStatusResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusResponse_RequestStatusResult* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusResponse_RequestStatusResult*>(
        &_QueryRequestStatusResponse_RequestStatusResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryRequestStatusResponse_RequestStatusResult& a, QueryRequestStatusResponse_RequestStatusResult& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusResponse_RequestStatusResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusResponse_RequestStatusResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusResponse_RequestStatusResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusResponse_RequestStatusResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusResponse_RequestStatusResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusResponse_RequestStatusResult& from) { QueryRequestStatusResponse_RequestStatusResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusResponse_RequestStatusResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult"; }

 protected:
  explicit QueryRequestStatusResponse_RequestStatusResult(::google::protobuf::Arena* arena);
  QueryRequestStatusResponse_RequestStatusResult(::google::protobuf::Arena* arena, const QueryRequestStatusResponse_RequestStatusResult& from);
  QueryRequestStatusResponse_RequestStatusResult(::google::protobuf::Arena* arena, QueryRequestStatusResponse_RequestStatusResult&& from) noexcept
      : QueryRequestStatusResponse_RequestStatusResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RequestStatus = QueryRequestStatusResponse_RequestStatusResult_RequestStatus;

  // accessors -------------------------------------------------------
  enum : int {
    kRequestStatusFieldNumber = 1,
  };
  // repeated .dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus requestStatus = 1;
  int requeststatus_size() const;
  private:
  int _internal_requeststatus_size() const;

  public:
  void clear_requeststatus() ;
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus* mutable_requeststatus(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>* mutable_requeststatus();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>& _internal_requeststatus() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>* _internal_mutable_requeststatus();
  public:
  const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus& requeststatus(int index) const;
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus* add_requeststatus();
  const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>& requeststatus() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusResponse_RequestStatusResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusResponse_RequestStatusResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus > requeststatus_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest_QueryRequestStatusCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion) */ {
 public:
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion() : QueryRequestStatusRequest_QueryRequestStatusCriterion(nullptr) {}
  ~QueryRequestStatusRequest_QueryRequestStatusCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest_QueryRequestStatusCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest_QueryRequestStatusCriterion(const QueryRequestStatusRequest_QueryRequestStatusCriterion& from) : QueryRequestStatusRequest_QueryRequestStatusCriterion(nullptr, from) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion(QueryRequestStatusRequest_QueryRequestStatusCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion& operator=(const QueryRequestStatusRequest_QueryRequestStatusCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest_QueryRequestStatusCriterion& operator=(QueryRequestStatusRequest_QueryRequestStatusCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest_QueryRequestStatusCriterion& default_instance() {
    return *internal_default_instance();
  }
  enum CriterionCase {
    kProviderIdCriterion = 10,
    kProviderNameCriterion = 11,
    kRequestIdCriterion = 12,
    kStatusCriterion = 13,
    kTimeRangeCriterion = 14,
    CRITERION_NOT_SET = 0,
  };
  static inline const QueryRequestStatusRequest_QueryRequestStatusCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest_QueryRequestStatusCriterion*>(
        &_QueryRequestStatusRequest_QueryRequestStatusCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryRequestStatusRequest_QueryRequestStatusCriterion& a, QueryRequestStatusRequest_QueryRequestStatusCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest_QueryRequestStatusCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest_QueryRequestStatusCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest_QueryRequestStatusCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest_QueryRequestStatusCriterion& from) { QueryRequestStatusRequest_QueryRequestStatusCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest_QueryRequestStatusCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion"; }

 protected:
  explicit QueryRequestStatusRequest_QueryRequestStatusCriterion(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest_QueryRequestStatusCriterion(::google::protobuf::Arena* arena, const QueryRequestStatusRequest_QueryRequestStatusCriterion& from);
  QueryRequestStatusRequest_QueryRequestStatusCriterion(::google::protobuf::Arena* arena, QueryRequestStatusRequest_QueryRequestStatusCriterion&& from) noexcept
      : QueryRequestStatusRequest_QueryRequestStatusCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ProviderIdCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion;
  using ProviderNameCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion;
  using RequestIdCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion;
  using StatusCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion;
  using TimeRangeCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kProviderIdCriterionFieldNumber = 10,
    kProviderNameCriterionFieldNumber = 11,
    kRequestIdCriterionFieldNumber = 12,
    kStatusCriterionFieldNumber = 13,
    kTimeRangeCriterionFieldNumber = 14,
  };
  // .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion providerIdCriterion = 10;
  bool has_provideridcriterion() const;
  private:
  bool _internal_has_provideridcriterion() const;

  public:
  void clear_provideridcriterion() ;
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& provideridcriterion() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* release_provideridcriterion();
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* mutable_provideridcriterion();
  void set_allocated_provideridcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* value);
  void unsafe_arena_set_allocated_provideridcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* value);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* unsafe_arena_release_provideridcriterion();

  private:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& _internal_provideridcriterion() const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* _internal_mutable_provideridcriterion();

  public:
  // .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion providerNameCriterion = 11;
  bool has_providernamecriterion() const;
  private:
  bool _internal_has_providernamecriterion() const;

  public:
  void clear_providernamecriterion() ;
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& providernamecriterion() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* release_providernamecriterion();
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* mutable_providernamecriterion();
  void set_allocated_providernamecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* value);
  void unsafe_arena_set_allocated_providernamecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* value);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* unsafe_arena_release_providernamecriterion();

  private:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& _internal_providernamecriterion() const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* _internal_mutable_providernamecriterion();

  public:
  // .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion requestIdCriterion = 12;
  bool has_requestidcriterion() const;
  private:
  bool _internal_has_requestidcriterion() const;

  public:
  void clear_requestidcriterion() ;
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& requestidcriterion() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* release_requestidcriterion();
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* mutable_requestidcriterion();
  void set_allocated_requestidcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* value);
  void unsafe_arena_set_allocated_requestidcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* value);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* unsafe_arena_release_requestidcriterion();

  private:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& _internal_requestidcriterion() const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* _internal_mutable_requestidcriterion();

  public:
  // .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion statusCriterion = 13;
  bool has_statuscriterion() const;
  private:
  bool _internal_has_statuscriterion() const;

  public:
  void clear_statuscriterion() ;
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& statuscriterion() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* release_statuscriterion();
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* mutable_statuscriterion();
  void set_allocated_statuscriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* value);
  void unsafe_arena_set_allocated_statuscriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* value);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* unsafe_arena_release_statuscriterion();

  private:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& _internal_statuscriterion() const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* _internal_mutable_statuscriterion();

  public:
  // .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion timeRangeCriterion = 14;
  bool has_timerangecriterion() const;
  private:
  bool _internal_has_timerangecriterion() const;

  public:
  void clear_timerangecriterion() ;
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& timerangecriterion() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* release_timerangecriterion();
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* mutable_timerangecriterion();
  void set_allocated_timerangecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* value);
  void unsafe_arena_set_allocated_timerangecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* value);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* unsafe_arena_release_timerangecriterion();

  private:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& _internal_timerangecriterion() const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* _internal_mutable_timerangecriterion();

  public:
  void clear_criterion();
  CriterionCase criterion_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion)
 private:
  class _Internal;
  void set_has_provideridcriterion();
  void set_has_providernamecriterion();
  void set_has_requestidcriterion();
  void set_has_statuscriterion();
  void set_has_timerangecriterion();
  inline bool has_criterion() const;
  inline void clear_has_criterion();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_QueryRequestStatusCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest_QueryRequestStatusCriterion& from_msg);
    union CriterionUnion {
      constexpr CriterionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* provideridcriterion_;
      ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* providernamecriterion_;
      ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* requestidcriterion_;
      ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* statuscriterion_;
      ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* timerangecriterion_;
    } criterion_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusResponse) */ {
 public:
  inline QueryRequestStatusResponse() : QueryRequestStatusResponse(nullptr) {}
  ~QueryRequestStatusResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusResponse(const QueryRequestStatusResponse& from) : QueryRequestStatusResponse(nullptr, from) {}
  inline QueryRequestStatusResponse(QueryRequestStatusResponse&& from) noexcept
      : QueryRequestStatusResponse(nullptr, std::move(from)) {}
  inline QueryRequestStatusResponse& operator=(const QueryRequestStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusResponse& operator=(QueryRequestStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kRequestStatusResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryRequestStatusResponse* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusResponse*>(
        &_QueryRequestStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(QueryRequestStatusResponse& a, QueryRequestStatusResponse& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusResponse& from) { QueryRequestStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusResponse"; }

 protected:
  explicit QueryRequestStatusResponse(::google::protobuf::Arena* arena);
  QueryRequestStatusResponse(::google::protobuf::Arena* arena, const QueryRequestStatusResponse& from);
  QueryRequestStatusResponse(::google::protobuf::Arena* arena, QueryRequestStatusResponse&& from) noexcept
      : QueryRequestStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using RequestStatusResult = QueryRequestStatusResponse_RequestStatusResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kRequestStatusResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult requestStatusResult = 11;
  bool has_requeststatusresult() const;
  private:
  bool _internal_has_requeststatusresult() const;

  public:
  void clear_requeststatusresult() ;
  const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult& requeststatusresult() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* release_requeststatusresult();
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* mutable_requeststatusresult();
  void set_allocated_requeststatusresult(::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* value);
  void unsafe_arena_set_allocated_requeststatusresult(::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* value);
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* unsafe_arena_release_requeststatusresult();

  private:
  const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult& _internal_requeststatusresult() const;
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* _internal_mutable_requeststatusresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_requeststatusresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* requeststatusresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class QueryRequestStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.QueryRequestStatusRequest) */ {
 public:
  inline QueryRequestStatusRequest() : QueryRequestStatusRequest(nullptr) {}
  ~QueryRequestStatusRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRequestStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRequestStatusRequest(const QueryRequestStatusRequest& from) : QueryRequestStatusRequest(nullptr, from) {}
  inline QueryRequestStatusRequest(QueryRequestStatusRequest&& from) noexcept
      : QueryRequestStatusRequest(nullptr, std::move(from)) {}
  inline QueryRequestStatusRequest& operator=(const QueryRequestStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRequestStatusRequest& operator=(QueryRequestStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRequestStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRequestStatusRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRequestStatusRequest*>(
        &_QueryRequestStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(QueryRequestStatusRequest& a, QueryRequestStatusRequest& b) { a.Swap(&b); }
  inline void Swap(QueryRequestStatusRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRequestStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRequestStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryRequestStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRequestStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRequestStatusRequest& from) { QueryRequestStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRequestStatusRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.QueryRequestStatusRequest"; }

 protected:
  explicit QueryRequestStatusRequest(::google::protobuf::Arena* arena);
  QueryRequestStatusRequest(::google::protobuf::Arena* arena, const QueryRequestStatusRequest& from);
  QueryRequestStatusRequest(::google::protobuf::Arena* arena, QueryRequestStatusRequest&& from) noexcept
      : QueryRequestStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QueryRequestStatusCriterion = QueryRequestStatusRequest_QueryRequestStatusCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kCriteriaFieldNumber = 1,
  };
  // repeated .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion criteria = 1;
  int criteria_size() const;
  private:
  int _internal_criteria_size() const;

  public:
  void clear_criteria() ;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion* mutable_criteria(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>* mutable_criteria();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>& _internal_criteria() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>* _internal_mutable_criteria();
  public:
  const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion& criteria(int index) const;
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion* add_criteria();
  const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>& criteria() const;
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.QueryRequestStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRequestStatusRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRequestStatusRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion > criteria_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataRequest_IngestionDataFrame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataRequest.IngestionDataFrame) */ {
 public:
  inline IngestDataRequest_IngestionDataFrame() : IngestDataRequest_IngestionDataFrame(nullptr) {}
  ~IngestDataRequest_IngestionDataFrame() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataRequest_IngestionDataFrame(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataRequest_IngestionDataFrame(const IngestDataRequest_IngestionDataFrame& from) : IngestDataRequest_IngestionDataFrame(nullptr, from) {}
  inline IngestDataRequest_IngestionDataFrame(IngestDataRequest_IngestionDataFrame&& from) noexcept
      : IngestDataRequest_IngestionDataFrame(nullptr, std::move(from)) {}
  inline IngestDataRequest_IngestionDataFrame& operator=(const IngestDataRequest_IngestionDataFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataRequest_IngestionDataFrame& operator=(IngestDataRequest_IngestionDataFrame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataRequest_IngestionDataFrame& default_instance() {
    return *internal_default_instance();
  }
  static inline const IngestDataRequest_IngestionDataFrame* internal_default_instance() {
    return reinterpret_cast<const IngestDataRequest_IngestionDataFrame*>(
        &_IngestDataRequest_IngestionDataFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(IngestDataRequest_IngestionDataFrame& a, IngestDataRequest_IngestionDataFrame& b) { a.Swap(&b); }
  inline void Swap(IngestDataRequest_IngestionDataFrame* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataRequest_IngestionDataFrame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataRequest_IngestionDataFrame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataRequest_IngestionDataFrame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataRequest_IngestionDataFrame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataRequest_IngestionDataFrame& from) { IngestDataRequest_IngestionDataFrame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataRequest_IngestionDataFrame* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataRequest.IngestionDataFrame"; }

 protected:
  explicit IngestDataRequest_IngestionDataFrame(::google::protobuf::Arena* arena);
  IngestDataRequest_IngestionDataFrame(::google::protobuf::Arena* arena, const IngestDataRequest_IngestionDataFrame& from);
  IngestDataRequest_IngestionDataFrame(::google::protobuf::Arena* arena, IngestDataRequest_IngestionDataFrame&& from) noexcept
      : IngestDataRequest_IngestionDataFrame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataColumnsFieldNumber = 2,
    kDataTimestampsFieldNumber = 1,
  };
  // repeated .DataColumn dataColumns = 2;
  int datacolumns_size() const;
  private:
  int _internal_datacolumns_size() const;

  public:
  void clear_datacolumns() ;
  ::DataColumn* mutable_datacolumns(int index);
  ::google::protobuf::RepeatedPtrField<::DataColumn>* mutable_datacolumns();

  private:
  const ::google::protobuf::RepeatedPtrField<::DataColumn>& _internal_datacolumns() const;
  ::google::protobuf::RepeatedPtrField<::DataColumn>* _internal_mutable_datacolumns();
  public:
  const ::DataColumn& datacolumns(int index) const;
  ::DataColumn* add_datacolumns();
  const ::google::protobuf::RepeatedPtrField<::DataColumn>& datacolumns() const;
  // .DataTimestamps dataTimestamps = 1;
  bool has_datatimestamps() const;
  void clear_datatimestamps() ;
  const ::DataTimestamps& datatimestamps() const;
  PROTOBUF_NODISCARD ::DataTimestamps* release_datatimestamps();
  ::DataTimestamps* mutable_datatimestamps();
  void set_allocated_datatimestamps(::DataTimestamps* value);
  void unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value);
  ::DataTimestamps* unsafe_arena_release_datatimestamps();

  private:
  const ::DataTimestamps& _internal_datatimestamps() const;
  ::DataTimestamps* _internal_mutable_datatimestamps();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataRequest_IngestionDataFrame_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataRequest_IngestionDataFrame& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::DataColumn > datacolumns_;
    ::DataTimestamps* datatimestamps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};
// -------------------------------------------------------------------

class IngestDataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.ingestion.IngestDataRequest) */ {
 public:
  inline IngestDataRequest() : IngestDataRequest(nullptr) {}
  ~IngestDataRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IngestDataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline IngestDataRequest(const IngestDataRequest& from) : IngestDataRequest(nullptr, from) {}
  inline IngestDataRequest(IngestDataRequest&& from) noexcept
      : IngestDataRequest(nullptr, std::move(from)) {}
  inline IngestDataRequest& operator=(const IngestDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IngestDataRequest& operator=(IngestDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IngestDataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IngestDataRequest* internal_default_instance() {
    return reinterpret_cast<const IngestDataRequest*>(
        &_IngestDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(IngestDataRequest& a, IngestDataRequest& b) { a.Swap(&b); }
  inline void Swap(IngestDataRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IngestDataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IngestDataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IngestDataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IngestDataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IngestDataRequest& from) { IngestDataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IngestDataRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.ingestion.IngestDataRequest"; }

 protected:
  explicit IngestDataRequest(::google::protobuf::Arena* arena);
  IngestDataRequest(::google::protobuf::Arena* arena, const IngestDataRequest& from);
  IngestDataRequest(::google::protobuf::Arena* arena, IngestDataRequest&& from) noexcept
      : IngestDataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using IngestionDataFrame = IngestDataRequest_IngestionDataFrame;

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 3,
    kProviderIdFieldNumber = 1,
    kClientRequestIdFieldNumber = 2,
    kEventMetadataFieldNumber = 4,
    kIngestionDataFrameFieldNumber = 5,
  };
  // repeated .Attribute attributes = 3;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  ::Attribute* mutable_attributes(int index);
  ::google::protobuf::RepeatedPtrField<::Attribute>* mutable_attributes();

  private:
  const ::google::protobuf::RepeatedPtrField<::Attribute>& _internal_attributes() const;
  ::google::protobuf::RepeatedPtrField<::Attribute>* _internal_mutable_attributes();
  public:
  const ::Attribute& attributes(int index) const;
  ::Attribute* add_attributes();
  const ::google::protobuf::RepeatedPtrField<::Attribute>& attributes() const;
  // string providerId = 1;
  void clear_providerid() ;
  const std::string& providerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providerid(Arg_&& arg, Args_... args);
  std::string* mutable_providerid();
  PROTOBUF_NODISCARD std::string* release_providerid();
  void set_allocated_providerid(std::string* value);

  private:
  const std::string& _internal_providerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_providerid(
      const std::string& value);
  std::string* _internal_mutable_providerid();

  public:
  // string clientRequestId = 2;
  void clear_clientrequestid() ;
  const std::string& clientrequestid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_clientrequestid(Arg_&& arg, Args_... args);
  std::string* mutable_clientrequestid();
  PROTOBUF_NODISCARD std::string* release_clientrequestid();
  void set_allocated_clientrequestid(std::string* value);

  private:
  const std::string& _internal_clientrequestid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_clientrequestid(
      const std::string& value);
  std::string* _internal_mutable_clientrequestid();

  public:
  // .EventMetadata eventMetadata = 4;
  bool has_eventmetadata() const;
  void clear_eventmetadata() ;
  const ::EventMetadata& eventmetadata() const;
  PROTOBUF_NODISCARD ::EventMetadata* release_eventmetadata();
  ::EventMetadata* mutable_eventmetadata();
  void set_allocated_eventmetadata(::EventMetadata* value);
  void unsafe_arena_set_allocated_eventmetadata(::EventMetadata* value);
  ::EventMetadata* unsafe_arena_release_eventmetadata();

  private:
  const ::EventMetadata& _internal_eventmetadata() const;
  ::EventMetadata* _internal_mutable_eventmetadata();

  public:
  // .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 5;
  bool has_ingestiondataframe() const;
  void clear_ingestiondataframe() ;
  const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame& ingestiondataframe() const;
  PROTOBUF_NODISCARD ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* release_ingestiondataframe();
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* mutable_ingestiondataframe();
  void set_allocated_ingestiondataframe(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* value);
  void unsafe_arena_set_allocated_ingestiondataframe(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* value);
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* unsafe_arena_release_ingestiondataframe();

  private:
  const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame& _internal_ingestiondataframe() const;
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* _internal_mutable_ingestiondataframe();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.ingestion.IngestDataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IngestDataRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IngestDataRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Attribute > attributes_;
    ::google::protobuf::internal::ArenaStringPtr providerid_;
    ::google::protobuf::internal::ArenaStringPtr clientrequestid_;
    ::EventMetadata* eventmetadata_;
    ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* ingestiondataframe_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ingestion_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RegisterProviderRequest

// string providerName = 1;
inline void RegisterProviderRequest::clear_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.ClearToEmpty();
}
inline const std::string& RegisterProviderRequest::providername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderRequest.providerName)
  return _internal_providername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterProviderRequest::set_providername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.RegisterProviderRequest.providerName)
}
inline std::string* RegisterProviderRequest::mutable_providername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providername();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderRequest.providerName)
  return _s;
}
inline const std::string& RegisterProviderRequest::_internal_providername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providername_.Get();
}
inline void RegisterProviderRequest::_internal_set_providername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(value, GetArena());
}
inline std::string* RegisterProviderRequest::_internal_mutable_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providername_.Mutable( GetArena());
}
inline std::string* RegisterProviderRequest::release_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderRequest.providerName)
  return _impl_.providername_.Release();
}
inline void RegisterProviderRequest::set_allocated_providername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providername_.IsDefault()) {
          _impl_.providername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderRequest.providerName)
}

// repeated .Attribute attributes = 2;
inline int RegisterProviderRequest::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int RegisterProviderRequest::attributes_size() const {
  return _internal_attributes_size();
}
inline ::Attribute* RegisterProviderRequest::mutable_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderRequest.attributes)
  return _internal_mutable_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>* RegisterProviderRequest::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.RegisterProviderRequest.attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributes();
}
inline const ::Attribute& RegisterProviderRequest::attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderRequest.attributes)
  return _internal_attributes().Get(index);
}
inline ::Attribute* RegisterProviderRequest::add_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Attribute* _add = _internal_mutable_attributes()->Add();
  // @@protoc_insertion_point(field_add:dp.service.ingestion.RegisterProviderRequest.attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>& RegisterProviderRequest::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.RegisterProviderRequest.attributes)
  return _internal_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>&
RegisterProviderRequest::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>*
RegisterProviderRequest::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributes_;
}

// -------------------------------------------------------------------

// RegisterProviderResponse_RegistrationResult

// string providerId = 1;
inline void RegisterProviderResponse_RegistrationResult::clear_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.ClearToEmpty();
}
inline const std::string& RegisterProviderResponse_RegistrationResult::providerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerId)
  return _internal_providerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterProviderResponse_RegistrationResult::set_providerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerId)
}
inline std::string* RegisterProviderResponse_RegistrationResult::mutable_providerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providerid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerId)
  return _s;
}
inline const std::string& RegisterProviderResponse_RegistrationResult::_internal_providerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providerid_.Get();
}
inline void RegisterProviderResponse_RegistrationResult::_internal_set_providerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(value, GetArena());
}
inline std::string* RegisterProviderResponse_RegistrationResult::_internal_mutable_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providerid_.Mutable( GetArena());
}
inline std::string* RegisterProviderResponse_RegistrationResult::release_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerId)
  return _impl_.providerid_.Release();
}
inline void RegisterProviderResponse_RegistrationResult::set_allocated_providerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providerid_.IsDefault()) {
          _impl_.providerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerId)
}

// string providerName = 2;
inline void RegisterProviderResponse_RegistrationResult::clear_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.ClearToEmpty();
}
inline const std::string& RegisterProviderResponse_RegistrationResult::providername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerName)
  return _internal_providername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterProviderResponse_RegistrationResult::set_providername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerName)
}
inline std::string* RegisterProviderResponse_RegistrationResult::mutable_providername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providername();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerName)
  return _s;
}
inline const std::string& RegisterProviderResponse_RegistrationResult::_internal_providername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providername_.Get();
}
inline void RegisterProviderResponse_RegistrationResult::_internal_set_providername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(value, GetArena());
}
inline std::string* RegisterProviderResponse_RegistrationResult::_internal_mutable_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providername_.Mutable( GetArena());
}
inline std::string* RegisterProviderResponse_RegistrationResult::release_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerName)
  return _impl_.providername_.Release();
}
inline void RegisterProviderResponse_RegistrationResult::set_allocated_providername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providername_.IsDefault()) {
          _impl_.providername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.providerName)
}

// bool isNewProvider = 3;
inline void RegisterProviderResponse_RegistrationResult::clear_isnewprovider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isnewprovider_ = false;
}
inline bool RegisterProviderResponse_RegistrationResult::isnewprovider() const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.isNewProvider)
  return _internal_isnewprovider();
}
inline void RegisterProviderResponse_RegistrationResult::set_isnewprovider(bool value) {
  _internal_set_isnewprovider(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.RegisterProviderResponse.RegistrationResult.isNewProvider)
}
inline bool RegisterProviderResponse_RegistrationResult::_internal_isnewprovider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isnewprovider_;
}
inline void RegisterProviderResponse_RegistrationResult::_internal_set_isnewprovider(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isnewprovider_ = value;
}

// -------------------------------------------------------------------

// RegisterProviderResponse

// .Timestamp responseTime = 1;
inline bool RegisterProviderResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& RegisterProviderResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& RegisterProviderResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.responseTime)
  return _internal_responsetime();
}
inline void RegisterProviderResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.RegisterProviderResponse.responseTime)
}
inline ::Timestamp* RegisterProviderResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* RegisterProviderResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* RegisterProviderResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* RegisterProviderResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderResponse.responseTime)
  return _msg;
}
inline void RegisterProviderResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool RegisterProviderResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool RegisterProviderResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void RegisterProviderResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* RegisterProviderResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& RegisterProviderResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& RegisterProviderResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* RegisterProviderResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RegisterProviderResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
}
inline ::ExceptionalResult* RegisterProviderResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* RegisterProviderResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
  return _msg;
}

// .dp.service.ingestion.RegisterProviderResponse.RegistrationResult registrationResult = 11;
inline bool RegisterProviderResponse::has_registrationresult() const {
  return result_case() == kRegistrationResult;
}
inline bool RegisterProviderResponse::_internal_has_registrationresult() const {
  return result_case() == kRegistrationResult;
}
inline void RegisterProviderResponse::set_has_registrationresult() {
  _impl_._oneof_case_[0] = kRegistrationResult;
}
inline void RegisterProviderResponse::clear_registrationresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kRegistrationResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.registrationresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.registrationresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* RegisterProviderResponse::release_registrationresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.RegisterProviderResponse.registrationResult)
  if (result_case() == kRegistrationResult) {
    clear_has_result();
    auto* temp = _impl_.result_.registrationresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.registrationresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult& RegisterProviderResponse::_internal_registrationresult() const {
  return result_case() == kRegistrationResult ? *_impl_.result_.registrationresult_ : reinterpret_cast<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult&>(::dp::service::ingestion::_RegisterProviderResponse_RegistrationResult_default_instance_);
}
inline const ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult& RegisterProviderResponse::registrationresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.RegisterProviderResponse.registrationResult)
  return _internal_registrationresult();
}
inline ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* RegisterProviderResponse::unsafe_arena_release_registrationresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.RegisterProviderResponse.registrationResult)
  if (result_case() == kRegistrationResult) {
    clear_has_result();
    auto* temp = _impl_.result_.registrationresult_;
    _impl_.result_.registrationresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RegisterProviderResponse::unsafe_arena_set_allocated_registrationresult(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_registrationresult();
    _impl_.result_.registrationresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.RegisterProviderResponse.registrationResult)
}
inline ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* RegisterProviderResponse::_internal_mutable_registrationresult() {
  if (result_case() != kRegistrationResult) {
    clear_result();
    set_has_registrationresult();
    _impl_.result_.registrationresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult>(GetArena());
  }
  return _impl_.result_.registrationresult_;
}
inline ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* RegisterProviderResponse::mutable_registrationresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* _msg = _internal_mutable_registrationresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.RegisterProviderResponse.registrationResult)
  return _msg;
}

inline bool RegisterProviderResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void RegisterProviderResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline RegisterProviderResponse::ResultCase RegisterProviderResponse::result_case() const {
  return RegisterProviderResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// IngestDataRequest_IngestionDataFrame

// .DataTimestamps dataTimestamps = 1;
inline bool IngestDataRequest_IngestionDataFrame::has_datatimestamps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.datatimestamps_ != nullptr);
  return value;
}
inline const ::DataTimestamps& IngestDataRequest_IngestionDataFrame::_internal_datatimestamps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::DataTimestamps* p = _impl_.datatimestamps_;
  return p != nullptr ? *p : reinterpret_cast<const ::DataTimestamps&>(::_DataTimestamps_default_instance_);
}
inline const ::DataTimestamps& IngestDataRequest_IngestionDataFrame::datatimestamps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataTimestamps)
  return _internal_datatimestamps();
}
inline void IngestDataRequest_IngestionDataFrame::unsafe_arena_set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }
  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataTimestamps)
}
inline ::DataTimestamps* IngestDataRequest_IngestionDataFrame::release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* released = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::DataTimestamps* IngestDataRequest_IngestionDataFrame::unsafe_arena_release_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataTimestamps)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::DataTimestamps* temp = _impl_.datatimestamps_;
  _impl_.datatimestamps_ = nullptr;
  return temp;
}
inline ::DataTimestamps* IngestDataRequest_IngestionDataFrame::_internal_mutable_datatimestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datatimestamps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::DataTimestamps>(GetArena());
    _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(p);
  }
  return _impl_.datatimestamps_;
}
inline ::DataTimestamps* IngestDataRequest_IngestionDataFrame::mutable_datatimestamps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::DataTimestamps* _msg = _internal_mutable_datatimestamps();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataTimestamps)
  return _msg;
}
inline void IngestDataRequest_IngestionDataFrame::set_allocated_datatimestamps(::DataTimestamps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datatimestamps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.datatimestamps_ = reinterpret_cast<::DataTimestamps*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataTimestamps)
}

// repeated .DataColumn dataColumns = 2;
inline int IngestDataRequest_IngestionDataFrame::_internal_datacolumns_size() const {
  return _internal_datacolumns().size();
}
inline int IngestDataRequest_IngestionDataFrame::datacolumns_size() const {
  return _internal_datacolumns_size();
}
inline ::DataColumn* IngestDataRequest_IngestionDataFrame::mutable_datacolumns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataColumns)
  return _internal_mutable_datacolumns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::DataColumn>* IngestDataRequest_IngestionDataFrame::mutable_datacolumns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataColumns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_datacolumns();
}
inline const ::DataColumn& IngestDataRequest_IngestionDataFrame::datacolumns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataColumns)
  return _internal_datacolumns().Get(index);
}
inline ::DataColumn* IngestDataRequest_IngestionDataFrame::add_datacolumns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::DataColumn* _add = _internal_mutable_datacolumns()->Add();
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataColumns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::DataColumn>& IngestDataRequest_IngestionDataFrame::datacolumns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.IngestDataRequest.IngestionDataFrame.dataColumns)
  return _internal_datacolumns();
}
inline const ::google::protobuf::RepeatedPtrField<::DataColumn>&
IngestDataRequest_IngestionDataFrame::_internal_datacolumns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datacolumns_;
}
inline ::google::protobuf::RepeatedPtrField<::DataColumn>*
IngestDataRequest_IngestionDataFrame::_internal_mutable_datacolumns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.datacolumns_;
}

// -------------------------------------------------------------------

// IngestDataRequest

// string providerId = 1;
inline void IngestDataRequest::clear_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.ClearToEmpty();
}
inline const std::string& IngestDataRequest::providerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.providerId)
  return _internal_providerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IngestDataRequest::set_providerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataRequest.providerId)
}
inline std::string* IngestDataRequest::mutable_providerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providerid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.providerId)
  return _s;
}
inline const std::string& IngestDataRequest::_internal_providerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providerid_.Get();
}
inline void IngestDataRequest::_internal_set_providerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(value, GetArena());
}
inline std::string* IngestDataRequest::_internal_mutable_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providerid_.Mutable( GetArena());
}
inline std::string* IngestDataRequest::release_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataRequest.providerId)
  return _impl_.providerid_.Release();
}
inline void IngestDataRequest::set_allocated_providerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providerid_.IsDefault()) {
          _impl_.providerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataRequest.providerId)
}

// string clientRequestId = 2;
inline void IngestDataRequest::clear_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.ClearToEmpty();
}
inline const std::string& IngestDataRequest::clientrequestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.clientRequestId)
  return _internal_clientrequestid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IngestDataRequest::set_clientrequestid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataRequest.clientRequestId)
}
inline std::string* IngestDataRequest::mutable_clientrequestid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_clientrequestid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.clientRequestId)
  return _s;
}
inline const std::string& IngestDataRequest::_internal_clientrequestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clientrequestid_.Get();
}
inline void IngestDataRequest::_internal_set_clientrequestid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.Set(value, GetArena());
}
inline std::string* IngestDataRequest::_internal_mutable_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.clientrequestid_.Mutable( GetArena());
}
inline std::string* IngestDataRequest::release_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataRequest.clientRequestId)
  return _impl_.clientrequestid_.Release();
}
inline void IngestDataRequest::set_allocated_clientrequestid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.clientrequestid_.IsDefault()) {
          _impl_.clientrequestid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataRequest.clientRequestId)
}

// repeated .Attribute attributes = 3;
inline int IngestDataRequest::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int IngestDataRequest::attributes_size() const {
  return _internal_attributes_size();
}
inline ::Attribute* IngestDataRequest::mutable_attributes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.attributes)
  return _internal_mutable_attributes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>* IngestDataRequest::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.IngestDataRequest.attributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributes();
}
inline const ::Attribute& IngestDataRequest::attributes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.attributes)
  return _internal_attributes().Get(index);
}
inline ::Attribute* IngestDataRequest::add_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Attribute* _add = _internal_mutable_attributes()->Add();
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataRequest.attributes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>& IngestDataRequest::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.IngestDataRequest.attributes)
  return _internal_attributes();
}
inline const ::google::protobuf::RepeatedPtrField<::Attribute>&
IngestDataRequest::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_;
}
inline ::google::protobuf::RepeatedPtrField<::Attribute>*
IngestDataRequest::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributes_;
}

// .EventMetadata eventMetadata = 4;
inline bool IngestDataRequest::has_eventmetadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.eventmetadata_ != nullptr);
  return value;
}
inline const ::EventMetadata& IngestDataRequest::_internal_eventmetadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::EventMetadata* p = _impl_.eventmetadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::EventMetadata&>(::_EventMetadata_default_instance_);
}
inline const ::EventMetadata& IngestDataRequest::eventmetadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.eventMetadata)
  return _internal_eventmetadata();
}
inline void IngestDataRequest::unsafe_arena_set_allocated_eventmetadata(::EventMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmetadata_);
  }
  _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataRequest.eventMetadata)
}
inline ::EventMetadata* IngestDataRequest::release_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EventMetadata* released = _impl_.eventmetadata_;
  _impl_.eventmetadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::EventMetadata* IngestDataRequest::unsafe_arena_release_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataRequest.eventMetadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EventMetadata* temp = _impl_.eventmetadata_;
  _impl_.eventmetadata_ = nullptr;
  return temp;
}
inline ::EventMetadata* IngestDataRequest::_internal_mutable_eventmetadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.eventmetadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::EventMetadata>(GetArena());
    _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(p);
  }
  return _impl_.eventmetadata_;
}
inline ::EventMetadata* IngestDataRequest::mutable_eventmetadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::EventMetadata* _msg = _internal_mutable_eventmetadata();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.eventMetadata)
  return _msg;
}
inline void IngestDataRequest::set_allocated_eventmetadata(::EventMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.eventmetadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.eventmetadata_ = reinterpret_cast<::EventMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataRequest.eventMetadata)
}

// .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 5;
inline bool IngestDataRequest::has_ingestiondataframe() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ingestiondataframe_ != nullptr);
  return value;
}
inline void IngestDataRequest::clear_ingestiondataframe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ingestiondataframe_ != nullptr) _impl_.ingestiondataframe_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame& IngestDataRequest::_internal_ingestiondataframe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* p = _impl_.ingestiondataframe_;
  return p != nullptr ? *p : reinterpret_cast<const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame&>(::dp::service::ingestion::_IngestDataRequest_IngestionDataFrame_default_instance_);
}
inline const ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame& IngestDataRequest::ingestiondataframe() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataRequest.ingestionDataFrame)
  return _internal_ingestiondataframe();
}
inline void IngestDataRequest::unsafe_arena_set_allocated_ingestiondataframe(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ingestiondataframe_);
  }
  _impl_.ingestiondataframe_ = reinterpret_cast<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataRequest.ingestionDataFrame)
}
inline ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* IngestDataRequest::release_ingestiondataframe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* released = _impl_.ingestiondataframe_;
  _impl_.ingestiondataframe_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* IngestDataRequest::unsafe_arena_release_ingestiondataframe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataRequest.ingestionDataFrame)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* temp = _impl_.ingestiondataframe_;
  _impl_.ingestiondataframe_ = nullptr;
  return temp;
}
inline ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* IngestDataRequest::_internal_mutable_ingestiondataframe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ingestiondataframe_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame>(GetArena());
    _impl_.ingestiondataframe_ = reinterpret_cast<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame*>(p);
  }
  return _impl_.ingestiondataframe_;
}
inline ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* IngestDataRequest::mutable_ingestiondataframe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* _msg = _internal_mutable_ingestiondataframe();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataRequest.ingestionDataFrame)
  return _msg;
}
inline void IngestDataRequest::set_allocated_ingestiondataframe(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ingestiondataframe_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ingestiondataframe_ = reinterpret_cast<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataRequest.ingestionDataFrame)
}

// -------------------------------------------------------------------

// IngestDataResponse_AckResult

// uint32 numRows = 1;
inline void IngestDataResponse_AckResult::clear_numrows() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numrows_ = 0u;
}
inline ::uint32_t IngestDataResponse_AckResult::numrows() const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.AckResult.numRows)
  return _internal_numrows();
}
inline void IngestDataResponse_AckResult::set_numrows(::uint32_t value) {
  _internal_set_numrows(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataResponse.AckResult.numRows)
}
inline ::uint32_t IngestDataResponse_AckResult::_internal_numrows() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numrows_;
}
inline void IngestDataResponse_AckResult::_internal_set_numrows(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numrows_ = value;
}

// uint32 numColumns = 2;
inline void IngestDataResponse_AckResult::clear_numcolumns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numcolumns_ = 0u;
}
inline ::uint32_t IngestDataResponse_AckResult::numcolumns() const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.AckResult.numColumns)
  return _internal_numcolumns();
}
inline void IngestDataResponse_AckResult::set_numcolumns(::uint32_t value) {
  _internal_set_numcolumns(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataResponse.AckResult.numColumns)
}
inline ::uint32_t IngestDataResponse_AckResult::_internal_numcolumns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numcolumns_;
}
inline void IngestDataResponse_AckResult::_internal_set_numcolumns(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numcolumns_ = value;
}

// -------------------------------------------------------------------

// IngestDataResponse

// string providerId = 1;
inline void IngestDataResponse::clear_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.ClearToEmpty();
}
inline const std::string& IngestDataResponse::providerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.providerId)
  return _internal_providerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IngestDataResponse::set_providerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataResponse.providerId)
}
inline std::string* IngestDataResponse::mutable_providerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providerid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataResponse.providerId)
  return _s;
}
inline const std::string& IngestDataResponse::_internal_providerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providerid_.Get();
}
inline void IngestDataResponse::_internal_set_providerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(value, GetArena());
}
inline std::string* IngestDataResponse::_internal_mutable_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providerid_.Mutable( GetArena());
}
inline std::string* IngestDataResponse::release_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataResponse.providerId)
  return _impl_.providerid_.Release();
}
inline void IngestDataResponse::set_allocated_providerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providerid_.IsDefault()) {
          _impl_.providerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataResponse.providerId)
}

// string clientRequestId = 2;
inline void IngestDataResponse::clear_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.ClearToEmpty();
}
inline const std::string& IngestDataResponse::clientrequestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.clientRequestId)
  return _internal_clientrequestid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IngestDataResponse::set_clientrequestid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataResponse.clientRequestId)
}
inline std::string* IngestDataResponse::mutable_clientrequestid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_clientrequestid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataResponse.clientRequestId)
  return _s;
}
inline const std::string& IngestDataResponse::_internal_clientrequestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clientrequestid_.Get();
}
inline void IngestDataResponse::_internal_set_clientrequestid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.Set(value, GetArena());
}
inline std::string* IngestDataResponse::_internal_mutable_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.clientrequestid_.Mutable( GetArena());
}
inline std::string* IngestDataResponse::release_clientrequestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataResponse.clientRequestId)
  return _impl_.clientrequestid_.Release();
}
inline void IngestDataResponse::set_allocated_clientrequestid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.clientrequestid_.IsDefault()) {
          _impl_.clientrequestid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataResponse.clientRequestId)
}

// .Timestamp responseTime = 3;
inline bool IngestDataResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& IngestDataResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& IngestDataResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.responseTime)
  return _internal_responsetime();
}
inline void IngestDataResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataResponse.responseTime)
}
inline ::Timestamp* IngestDataResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* IngestDataResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* IngestDataResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* IngestDataResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataResponse.responseTime)
  return _msg;
}
inline void IngestDataResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool IngestDataResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool IngestDataResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void IngestDataResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* IngestDataResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& IngestDataResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& IngestDataResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* IngestDataResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.IngestDataResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void IngestDataResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataResponse.exceptionalResult)
}
inline ::ExceptionalResult* IngestDataResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* IngestDataResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataResponse.exceptionalResult)
  return _msg;
}

// .dp.service.ingestion.IngestDataResponse.AckResult ackResult = 11;
inline bool IngestDataResponse::has_ackresult() const {
  return result_case() == kAckResult;
}
inline bool IngestDataResponse::_internal_has_ackresult() const {
  return result_case() == kAckResult;
}
inline void IngestDataResponse::set_has_ackresult() {
  _impl_._oneof_case_[0] = kAckResult;
}
inline void IngestDataResponse::clear_ackresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kAckResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.ackresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.ackresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::ingestion::IngestDataResponse_AckResult* IngestDataResponse::release_ackresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataResponse.ackResult)
  if (result_case() == kAckResult) {
    clear_has_result();
    auto* temp = _impl_.result_.ackresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.ackresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::IngestDataResponse_AckResult& IngestDataResponse::_internal_ackresult() const {
  return result_case() == kAckResult ? *_impl_.result_.ackresult_ : reinterpret_cast<::dp::service::ingestion::IngestDataResponse_AckResult&>(::dp::service::ingestion::_IngestDataResponse_AckResult_default_instance_);
}
inline const ::dp::service::ingestion::IngestDataResponse_AckResult& IngestDataResponse::ackresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataResponse.ackResult)
  return _internal_ackresult();
}
inline ::dp::service::ingestion::IngestDataResponse_AckResult* IngestDataResponse::unsafe_arena_release_ackresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.IngestDataResponse.ackResult)
  if (result_case() == kAckResult) {
    clear_has_result();
    auto* temp = _impl_.result_.ackresult_;
    _impl_.result_.ackresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void IngestDataResponse::unsafe_arena_set_allocated_ackresult(::dp::service::ingestion::IngestDataResponse_AckResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_ackresult();
    _impl_.result_.ackresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataResponse.ackResult)
}
inline ::dp::service::ingestion::IngestDataResponse_AckResult* IngestDataResponse::_internal_mutable_ackresult() {
  if (result_case() != kAckResult) {
    clear_result();
    set_has_ackresult();
    _impl_.result_.ackresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::IngestDataResponse_AckResult>(GetArena());
  }
  return _impl_.result_.ackresult_;
}
inline ::dp::service::ingestion::IngestDataResponse_AckResult* IngestDataResponse::mutable_ackresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::IngestDataResponse_AckResult* _msg = _internal_mutable_ackresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataResponse.ackResult)
  return _msg;
}

inline bool IngestDataResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void IngestDataResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline IngestDataResponse::ResultCase IngestDataResponse::result_case() const {
  return IngestDataResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// IngestDataStreamResponse_IngestDataStreamResult

// uint32 numRequests = 1;
inline void IngestDataStreamResponse_IngestDataStreamResult::clear_numrequests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numrequests_ = 0u;
}
inline ::uint32_t IngestDataStreamResponse_IngestDataStreamResult::numrequests() const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult.numRequests)
  return _internal_numrequests();
}
inline void IngestDataStreamResponse_IngestDataStreamResult::set_numrequests(::uint32_t value) {
  _internal_set_numrequests(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult.numRequests)
}
inline ::uint32_t IngestDataStreamResponse_IngestDataStreamResult::_internal_numrequests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numrequests_;
}
inline void IngestDataStreamResponse_IngestDataStreamResult::_internal_set_numrequests(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numrequests_ = value;
}

// -------------------------------------------------------------------

// IngestDataStreamResponse

// .Timestamp responseTime = 1;
inline bool IngestDataStreamResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& IngestDataStreamResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& IngestDataStreamResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.responseTime)
  return _internal_responsetime();
}
inline void IngestDataStreamResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataStreamResponse.responseTime)
}
inline ::Timestamp* IngestDataStreamResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* IngestDataStreamResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataStreamResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* IngestDataStreamResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* IngestDataStreamResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataStreamResponse.responseTime)
  return _msg;
}
inline void IngestDataStreamResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataStreamResponse.responseTime)
}

// repeated string clientRequestIds = 2;
inline int IngestDataStreamResponse::_internal_clientrequestids_size() const {
  return _internal_clientrequestids().size();
}
inline int IngestDataStreamResponse::clientrequestids_size() const {
  return _internal_clientrequestids_size();
}
inline void IngestDataStreamResponse::clear_clientrequestids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientrequestids_.Clear();
}
inline std::string* IngestDataStreamResponse::add_clientrequestids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_clientrequestids()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
  return _s;
}
inline const std::string& IngestDataStreamResponse::clientrequestids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
  return _internal_clientrequestids().Get(index);
}
inline std::string* IngestDataStreamResponse::mutable_clientrequestids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
  return _internal_mutable_clientrequestids()->Mutable(index);
}
inline void IngestDataStreamResponse::set_clientrequestids(int index, const std::string& value) {
  _internal_mutable_clientrequestids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::set_clientrequestids(int index, std::string&& value) {
  _internal_mutable_clientrequestids()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::set_clientrequestids(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_clientrequestids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::set_clientrequestids(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_clientrequestids()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::set_clientrequestids(int index, absl::string_view value) {
  _internal_mutable_clientrequestids()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::add_clientrequestids(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_clientrequestids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::add_clientrequestids(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_clientrequestids()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::add_clientrequestids(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_clientrequestids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::add_clientrequestids(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_clientrequestids()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline void IngestDataStreamResponse::add_clientrequestids(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_clientrequestids()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IngestDataStreamResponse::clientrequestids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
  return _internal_clientrequestids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IngestDataStreamResponse::mutable_clientrequestids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.IngestDataStreamResponse.clientRequestIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_clientrequestids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IngestDataStreamResponse::_internal_clientrequestids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clientrequestids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IngestDataStreamResponse::_internal_mutable_clientrequestids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.clientrequestids_;
}

// repeated string rejectedRequestIds = 3;
inline int IngestDataStreamResponse::_internal_rejectedrequestids_size() const {
  return _internal_rejectedrequestids().size();
}
inline int IngestDataStreamResponse::rejectedrequestids_size() const {
  return _internal_rejectedrequestids_size();
}
inline void IngestDataStreamResponse::clear_rejectedrequestids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rejectedrequestids_.Clear();
}
inline std::string* IngestDataStreamResponse::add_rejectedrequestids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_rejectedrequestids()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
  return _s;
}
inline const std::string& IngestDataStreamResponse::rejectedrequestids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
  return _internal_rejectedrequestids().Get(index);
}
inline std::string* IngestDataStreamResponse::mutable_rejectedrequestids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
  return _internal_mutable_rejectedrequestids()->Mutable(index);
}
inline void IngestDataStreamResponse::set_rejectedrequestids(int index, const std::string& value) {
  _internal_mutable_rejectedrequestids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::set_rejectedrequestids(int index, std::string&& value) {
  _internal_mutable_rejectedrequestids()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::set_rejectedrequestids(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_rejectedrequestids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::set_rejectedrequestids(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_rejectedrequestids()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::set_rejectedrequestids(int index, absl::string_view value) {
  _internal_mutable_rejectedrequestids()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::add_rejectedrequestids(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rejectedrequestids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::add_rejectedrequestids(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rejectedrequestids()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::add_rejectedrequestids(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rejectedrequestids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::add_rejectedrequestids(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rejectedrequestids()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline void IngestDataStreamResponse::add_rejectedrequestids(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_rejectedrequestids()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IngestDataStreamResponse::rejectedrequestids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
  return _internal_rejectedrequestids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IngestDataStreamResponse::mutable_rejectedrequestids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.IngestDataStreamResponse.rejectedRequestIds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rejectedrequestids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IngestDataStreamResponse::_internal_rejectedrequestids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rejectedrequestids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IngestDataStreamResponse::_internal_mutable_rejectedrequestids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rejectedrequestids_;
}

// .ExceptionalResult exceptionalResult = 10;
inline bool IngestDataStreamResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool IngestDataStreamResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void IngestDataStreamResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* IngestDataStreamResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataStreamResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& IngestDataStreamResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& IngestDataStreamResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* IngestDataStreamResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.IngestDataStreamResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void IngestDataStreamResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataStreamResponse.exceptionalResult)
}
inline ::ExceptionalResult* IngestDataStreamResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* IngestDataStreamResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataStreamResponse.exceptionalResult)
  return _msg;
}

// .dp.service.ingestion.IngestDataStreamResponse.IngestDataStreamResult ingestDataStreamResult = 11;
inline bool IngestDataStreamResponse::has_ingestdatastreamresult() const {
  return result_case() == kIngestDataStreamResult;
}
inline bool IngestDataStreamResponse::_internal_has_ingestdatastreamresult() const {
  return result_case() == kIngestDataStreamResult;
}
inline void IngestDataStreamResponse::set_has_ingestdatastreamresult() {
  _impl_._oneof_case_[0] = kIngestDataStreamResult;
}
inline void IngestDataStreamResponse::clear_ingestdatastreamresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kIngestDataStreamResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.ingestdatastreamresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.ingestdatastreamresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* IngestDataStreamResponse::release_ingestdatastreamresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.IngestDataStreamResponse.ingestDataStreamResult)
  if (result_case() == kIngestDataStreamResult) {
    clear_has_result();
    auto* temp = _impl_.result_.ingestdatastreamresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.ingestdatastreamresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult& IngestDataStreamResponse::_internal_ingestdatastreamresult() const {
  return result_case() == kIngestDataStreamResult ? *_impl_.result_.ingestdatastreamresult_ : reinterpret_cast<::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult&>(::dp::service::ingestion::_IngestDataStreamResponse_IngestDataStreamResult_default_instance_);
}
inline const ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult& IngestDataStreamResponse::ingestdatastreamresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.IngestDataStreamResponse.ingestDataStreamResult)
  return _internal_ingestdatastreamresult();
}
inline ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* IngestDataStreamResponse::unsafe_arena_release_ingestdatastreamresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.IngestDataStreamResponse.ingestDataStreamResult)
  if (result_case() == kIngestDataStreamResult) {
    clear_has_result();
    auto* temp = _impl_.result_.ingestdatastreamresult_;
    _impl_.result_.ingestdatastreamresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void IngestDataStreamResponse::unsafe_arena_set_allocated_ingestdatastreamresult(::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_ingestdatastreamresult();
    _impl_.result_.ingestdatastreamresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.IngestDataStreamResponse.ingestDataStreamResult)
}
inline ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* IngestDataStreamResponse::_internal_mutable_ingestdatastreamresult() {
  if (result_case() != kIngestDataStreamResult) {
    clear_result();
    set_has_ingestdatastreamresult();
    _impl_.result_.ingestdatastreamresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult>(GetArena());
  }
  return _impl_.result_.ingestdatastreamresult_;
}
inline ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* IngestDataStreamResponse::mutable_ingestdatastreamresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::IngestDataStreamResponse_IngestDataStreamResult* _msg = _internal_mutable_ingestdatastreamresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.IngestDataStreamResponse.ingestDataStreamResult)
  return _msg;
}

inline bool IngestDataStreamResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void IngestDataStreamResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline IngestDataStreamResponse::ResultCase IngestDataStreamResponse::result_case() const {
  return IngestDataStreamResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion

// string providerId = 1;
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::clear_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::providerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion.providerId)
  return _internal_providerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::set_providerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion.providerId)
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::mutable_providerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providerid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion.providerId)
  return _s;
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::_internal_providerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providerid_.Get();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::_internal_set_providerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::_internal_mutable_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providerid_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::release_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion.providerId)
  return _impl_.providerid_.Release();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion::set_allocated_providerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providerid_.IsDefault()) {
          _impl_.providerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion.providerId)
}

// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion

// string providerName = 1;
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::clear_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::providername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion.providerName)
  return _internal_providername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::set_providername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion.providerName)
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::mutable_providername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providername();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion.providerName)
  return _s;
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::_internal_providername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providername_.Get();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::_internal_set_providername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::_internal_mutable_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providername_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::release_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion.providerName)
  return _impl_.providername_.Release();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion::set_allocated_providername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providername_.IsDefault()) {
          _impl_.providername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion.providerName)
}

// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion

// string requestId = 1;
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::clear_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::requestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion.requestId)
  return _internal_requestid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::set_requestid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion.requestId)
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::mutable_requestid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requestid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion.requestId)
  return _s;
}
inline const std::string& QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::_internal_requestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestid_.Get();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::_internal_set_requestid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::_internal_mutable_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requestid_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::release_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion.requestId)
  return _impl_.requestid_.Release();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion::set_allocated_requestid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requestid_.IsDefault()) {
          _impl_.requestid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion.requestId)
}

// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion

// repeated .dp.service.ingestion.IngestionRequestStatus status = 1;
inline int QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::_internal_status_size() const {
  return _internal_status().size();
}
inline int QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::status_size() const {
  return _internal_status_size();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Clear();
}
inline ::dp::service::ingestion::IngestionRequestStatus QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::status(int index) const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion.status)
  return static_cast<::dp::service::ingestion::IngestionRequestStatus>(_internal_status().Get(index));
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::set_status(int index, ::dp::service::ingestion::IngestionRequestStatus value) {
  _internal_mutable_status()->Set(index, value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion.status)
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::add_status(::dp::service::ingestion::IngestionRequestStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_status()->Add(value);
  // @@protoc_insertion_point(field_add:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion.status)
}
inline const ::google::protobuf::RepeatedField<int>& QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion.status)
  return _internal_status();
}
inline ::google::protobuf::RepeatedField<int>* QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion.status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_status();
}
inline const ::google::protobuf::RepeatedField<int>& QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::_internal_status()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline ::google::protobuf::RepeatedField<int>* QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion::_internal_mutable_status() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.status_;
}

// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion

// .Timestamp beginTime = 1;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::has_begintime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.begintime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.begintime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::begintime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.beginTime)
  return _internal_begintime();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::unsafe_arena_set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }
  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.beginTime)
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::unsafe_arena_release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.beginTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.begintime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.begintime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.begintime_;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.beginTime)
  return _msg;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.beginTime)
}

// .Timestamp endTime = 2;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::has_endtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endtime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.endtime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::endtime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.endTime)
  return _internal_endtime();
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::unsafe_arena_set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }
  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.endTime)
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* released = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::unsafe_arena_release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.endTime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* temp = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endtime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.endtime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.endtime_;
}
inline ::Timestamp* QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Timestamp* _msg = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.endTime)
  return _msg;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion::set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion.endTime)
}

// -------------------------------------------------------------------

// QueryRequestStatusRequest_QueryRequestStatusCriterion

// .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderIdCriterion providerIdCriterion = 10;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_provideridcriterion() const {
  return criterion_case() == kProviderIdCriterion;
}
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_has_provideridcriterion() const {
  return criterion_case() == kProviderIdCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::set_has_provideridcriterion() {
  _impl_._oneof_case_[0] = kProviderIdCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_provideridcriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kProviderIdCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.provideridcriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.provideridcriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::release_provideridcriterion() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerIdCriterion)
  if (criterion_case() == kProviderIdCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.provideridcriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.provideridcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_provideridcriterion() const {
  return criterion_case() == kProviderIdCriterion ? *_impl_.criterion_.provideridcriterion_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion&>(::dp::service::ingestion::_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::provideridcriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerIdCriterion)
  return _internal_provideridcriterion();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_release_provideridcriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerIdCriterion)
  if (criterion_case() == kProviderIdCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.provideridcriterion_;
    _impl_.criterion_.provideridcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_set_allocated_provideridcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_provideridcriterion();
    _impl_.criterion_.provideridcriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerIdCriterion)
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_mutable_provideridcriterion() {
  if (criterion_case() != kProviderIdCriterion) {
    clear_criterion();
    set_has_provideridcriterion();
    _impl_.criterion_.provideridcriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion>(GetArena());
  }
  return _impl_.criterion_.provideridcriterion_;
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::mutable_provideridcriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderIdCriterion* _msg = _internal_mutable_provideridcriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerIdCriterion)
  return _msg;
}

// .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.ProviderNameCriterion providerNameCriterion = 11;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_providernamecriterion() const {
  return criterion_case() == kProviderNameCriterion;
}
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_has_providernamecriterion() const {
  return criterion_case() == kProviderNameCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::set_has_providernamecriterion() {
  _impl_._oneof_case_[0] = kProviderNameCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_providernamecriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kProviderNameCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.providernamecriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.providernamecriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::release_providernamecriterion() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerNameCriterion)
  if (criterion_case() == kProviderNameCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.providernamecriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.providernamecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_providernamecriterion() const {
  return criterion_case() == kProviderNameCriterion ? *_impl_.criterion_.providernamecriterion_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion&>(::dp::service::ingestion::_QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::providernamecriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerNameCriterion)
  return _internal_providernamecriterion();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_release_providernamecriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerNameCriterion)
  if (criterion_case() == kProviderNameCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.providernamecriterion_;
    _impl_.criterion_.providernamecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_set_allocated_providernamecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_providernamecriterion();
    _impl_.criterion_.providernamecriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerNameCriterion)
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_mutable_providernamecriterion() {
  if (criterion_case() != kProviderNameCriterion) {
    clear_criterion();
    set_has_providernamecriterion();
    _impl_.criterion_.providernamecriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion>(GetArena());
  }
  return _impl_.criterion_.providernamecriterion_;
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::mutable_providernamecriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_ProviderNameCriterion* _msg = _internal_mutable_providernamecriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.providerNameCriterion)
  return _msg;
}

// .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.RequestIdCriterion requestIdCriterion = 12;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_requestidcriterion() const {
  return criterion_case() == kRequestIdCriterion;
}
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_has_requestidcriterion() const {
  return criterion_case() == kRequestIdCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::set_has_requestidcriterion() {
  _impl_._oneof_case_[0] = kRequestIdCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_requestidcriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kRequestIdCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.requestidcriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.requestidcriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::release_requestidcriterion() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.requestIdCriterion)
  if (criterion_case() == kRequestIdCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.requestidcriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.requestidcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_requestidcriterion() const {
  return criterion_case() == kRequestIdCriterion ? *_impl_.criterion_.requestidcriterion_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion&>(::dp::service::ingestion::_QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::requestidcriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.requestIdCriterion)
  return _internal_requestidcriterion();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_release_requestidcriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.requestIdCriterion)
  if (criterion_case() == kRequestIdCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.requestidcriterion_;
    _impl_.criterion_.requestidcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_set_allocated_requestidcriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_requestidcriterion();
    _impl_.criterion_.requestidcriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.requestIdCriterion)
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_mutable_requestidcriterion() {
  if (criterion_case() != kRequestIdCriterion) {
    clear_criterion();
    set_has_requestidcriterion();
    _impl_.criterion_.requestidcriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion>(GetArena());
  }
  return _impl_.criterion_.requestidcriterion_;
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::mutable_requestidcriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_RequestIdCriterion* _msg = _internal_mutable_requestidcriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.requestIdCriterion)
  return _msg;
}

// .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.StatusCriterion statusCriterion = 13;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_statuscriterion() const {
  return criterion_case() == kStatusCriterion;
}
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_has_statuscriterion() const {
  return criterion_case() == kStatusCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::set_has_statuscriterion() {
  _impl_._oneof_case_[0] = kStatusCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_statuscriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kStatusCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.statuscriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.statuscriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::release_statuscriterion() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.statusCriterion)
  if (criterion_case() == kStatusCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.statuscriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.statuscriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_statuscriterion() const {
  return criterion_case() == kStatusCriterion ? *_impl_.criterion_.statuscriterion_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion&>(::dp::service::ingestion::_QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::statuscriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.statusCriterion)
  return _internal_statuscriterion();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_release_statuscriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.statusCriterion)
  if (criterion_case() == kStatusCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.statuscriterion_;
    _impl_.criterion_.statuscriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_set_allocated_statuscriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_statuscriterion();
    _impl_.criterion_.statuscriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.statusCriterion)
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_mutable_statuscriterion() {
  if (criterion_case() != kStatusCriterion) {
    clear_criterion();
    set_has_statuscriterion();
    _impl_.criterion_.statuscriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion>(GetArena());
  }
  return _impl_.criterion_.statuscriterion_;
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::mutable_statuscriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_StatusCriterion* _msg = _internal_mutable_statuscriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.statusCriterion)
  return _msg;
}

// .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.TimeRangeCriterion timeRangeCriterion = 14;
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_timerangecriterion() const {
  return criterion_case() == kTimeRangeCriterion;
}
inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_has_timerangecriterion() const {
  return criterion_case() == kTimeRangeCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::set_has_timerangecriterion() {
  _impl_._oneof_case_[0] = kTimeRangeCriterion;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_timerangecriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kTimeRangeCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.timerangecriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.timerangecriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::release_timerangecriterion() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.timeRangeCriterion)
  if (criterion_case() == kTimeRangeCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.timerangecriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.timerangecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_timerangecriterion() const {
  return criterion_case() == kTimeRangeCriterion ? *_impl_.criterion_.timerangecriterion_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion&>(::dp::service::ingestion::_QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion& QueryRequestStatusRequest_QueryRequestStatusCriterion::timerangecriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.timeRangeCriterion)
  return _internal_timerangecriterion();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_release_timerangecriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.timeRangeCriterion)
  if (criterion_case() == kTimeRangeCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.timerangecriterion_;
    _impl_.criterion_.timerangecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::unsafe_arena_set_allocated_timerangecriterion(::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_timerangecriterion();
    _impl_.criterion_.timerangecriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.timeRangeCriterion)
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::_internal_mutable_timerangecriterion() {
  if (criterion_case() != kTimeRangeCriterion) {
    clear_criterion();
    set_has_timerangecriterion();
    _impl_.criterion_.timerangecriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion>(GetArena());
  }
  return _impl_.criterion_.timerangecriterion_;
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* QueryRequestStatusRequest_QueryRequestStatusCriterion::mutable_timerangecriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion_TimeRangeCriterion* _msg = _internal_mutable_timerangecriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion.timeRangeCriterion)
  return _msg;
}

inline bool QueryRequestStatusRequest_QueryRequestStatusCriterion::has_criterion() const {
  return criterion_case() != CRITERION_NOT_SET;
}
inline void QueryRequestStatusRequest_QueryRequestStatusCriterion::clear_has_criterion() {
  _impl_._oneof_case_[0] = CRITERION_NOT_SET;
}
inline QueryRequestStatusRequest_QueryRequestStatusCriterion::CriterionCase QueryRequestStatusRequest_QueryRequestStatusCriterion::criterion_case() const {
  return QueryRequestStatusRequest_QueryRequestStatusCriterion::CriterionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryRequestStatusRequest

// repeated .dp.service.ingestion.QueryRequestStatusRequest.QueryRequestStatusCriterion criteria = 1;
inline int QueryRequestStatusRequest::_internal_criteria_size() const {
  return _internal_criteria().size();
}
inline int QueryRequestStatusRequest::criteria_size() const {
  return _internal_criteria_size();
}
inline void QueryRequestStatusRequest::clear_criteria() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.criteria_.Clear();
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion* QueryRequestStatusRequest::mutable_criteria(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusRequest.criteria)
  return _internal_mutable_criteria()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>* QueryRequestStatusRequest::mutable_criteria()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.QueryRequestStatusRequest.criteria)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_criteria();
}
inline const ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion& QueryRequestStatusRequest::criteria(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusRequest.criteria)
  return _internal_criteria().Get(index);
}
inline ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion* QueryRequestStatusRequest::add_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion* _add = _internal_mutable_criteria()->Add();
  // @@protoc_insertion_point(field_add:dp.service.ingestion.QueryRequestStatusRequest.criteria)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>& QueryRequestStatusRequest::criteria() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.QueryRequestStatusRequest.criteria)
  return _internal_criteria();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>&
QueryRequestStatusRequest::_internal_criteria() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.criteria_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusRequest_QueryRequestStatusCriterion>*
QueryRequestStatusRequest::_internal_mutable_criteria() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.criteria_;
}

// -------------------------------------------------------------------

// QueryRequestStatusResponse_RequestStatusResult_RequestStatus

// string requestStatusId = 1;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_requeststatusid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requeststatusid_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::requeststatusid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestStatusId)
  return _internal_requeststatusid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_requeststatusid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requeststatusid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestStatusId)
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_requeststatusid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requeststatusid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestStatusId)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_requeststatusid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requeststatusid_.Get();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_requeststatusid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requeststatusid_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_requeststatusid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requeststatusid_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_requeststatusid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestStatusId)
  return _impl_.requeststatusid_.Release();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_requeststatusid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requeststatusid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requeststatusid_.IsDefault()) {
          _impl_.requeststatusid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestStatusId)
}

// string providerId = 2;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::providerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerId)
  return _internal_providerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_providerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerId)
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_providerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providerid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerId)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_providerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providerid_.Get();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_providerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providerid_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_providerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerId)
  return _impl_.providerid_.Release();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_providerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providerid_.IsDefault()) {
          _impl_.providerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerId)
}

// string providerName = 3;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::providername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerName)
  return _internal_providername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_providername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerName)
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_providername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_providername();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerName)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_providername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providername_.Get();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_providername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.providername_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_providername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerName)
  return _impl_.providername_.Release();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_providername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.providername_.IsDefault()) {
          _impl_.providername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.providerName)
}

// string requestId = 4;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::requestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestId)
  return _internal_requestid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_requestid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestId)
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_requestid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requestid();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestId)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_requestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestid_.Get();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_requestid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.requestid_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestId)
  return _impl_.requestid_.Release();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_requestid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requestid_.IsDefault()) {
          _impl_.requestid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.requestId)
}

// .dp.service.ingestion.IngestionRequestStatus ingestionRequestStatus = 5;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_ingestionrequeststatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ingestionrequeststatus_ = 0;
}
inline ::dp::service::ingestion::IngestionRequestStatus QueryRequestStatusResponse_RequestStatusResult_RequestStatus::ingestionrequeststatus() const {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.ingestionRequestStatus)
  return _internal_ingestionrequeststatus();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_ingestionrequeststatus(::dp::service::ingestion::IngestionRequestStatus value) {
  _internal_set_ingestionrequeststatus(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.ingestionRequestStatus)
}
inline ::dp::service::ingestion::IngestionRequestStatus QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_ingestionrequeststatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::dp::service::ingestion::IngestionRequestStatus>(_impl_.ingestionrequeststatus_);
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_ingestionrequeststatus(::dp::service::ingestion::IngestionRequestStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ingestionrequeststatus_ = value;
}

// string statusMessage = 6;
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_statusmessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statusmessage_.ClearToEmpty();
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::statusmessage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.statusMessage)
  return _internal_statusmessage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_statusmessage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statusmessage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.statusMessage)
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_statusmessage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_statusmessage();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.statusMessage)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_statusmessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.statusmessage_.Get();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_set_statusmessage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statusmessage_.Set(value, GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_statusmessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.statusmessage_.Mutable( GetArena());
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_statusmessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.statusMessage)
  return _impl_.statusmessage_.Release();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_statusmessage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statusmessage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.statusmessage_.IsDefault()) {
          _impl_.statusmessage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.statusMessage)
}

// repeated string idsCreated = 7;
inline int QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_idscreated_size() const {
  return _internal_idscreated().size();
}
inline int QueryRequestStatusResponse_RequestStatusResult_RequestStatus::idscreated_size() const {
  return _internal_idscreated_size();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::clear_idscreated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idscreated_.Clear();
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_idscreated()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
  return _s;
}
inline const std::string& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::idscreated(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
  return _internal_idscreated().Get(index);
}
inline std::string* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_idscreated(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
  return _internal_mutable_idscreated()->Mutable(index);
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_idscreated(int index, const std::string& value) {
  _internal_mutable_idscreated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_idscreated(int index, std::string&& value) {
  _internal_mutable_idscreated()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_idscreated(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_idscreated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_idscreated(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_idscreated()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_idscreated(int index, absl::string_view value) {
  _internal_mutable_idscreated()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_idscreated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_idscreated()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_idscreated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_idscreated()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::add_idscreated(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_idscreated()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryRequestStatusResponse_RequestStatusResult_RequestStatus::idscreated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
  return _internal_idscreated();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_idscreated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.idsCreated)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_idscreated();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_idscreated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.idscreated_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_idscreated() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.idscreated_;
}

// .Timestamp updateTime = 8;
inline bool QueryRequestStatusResponse_RequestStatusResult_RequestStatus::has_updatetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updatetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_updatetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.updatetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryRequestStatusResponse_RequestStatusResult_RequestStatus::updatetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.updateTime)
  return _internal_updatetime();
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::unsafe_arena_set_allocated_updatetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updatetime_);
  }
  _impl_.updatetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.updateTime)
}
inline ::Timestamp* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::release_updatetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.updatetime_;
  _impl_.updatetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::unsafe_arena_release_updatetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.updateTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.updatetime_;
  _impl_.updatetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::_internal_mutable_updatetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updatetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.updatetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.updatetime_;
}
inline ::Timestamp* QueryRequestStatusResponse_RequestStatusResult_RequestStatus::mutable_updatetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_updatetime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.updateTime)
  return _msg;
}
inline void QueryRequestStatusResponse_RequestStatusResult_RequestStatus::set_allocated_updatetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updatetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updatetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus.updateTime)
}

// -------------------------------------------------------------------

// QueryRequestStatusResponse_RequestStatusResult

// repeated .dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.RequestStatus requestStatus = 1;
inline int QueryRequestStatusResponse_RequestStatusResult::_internal_requeststatus_size() const {
  return _internal_requeststatus().size();
}
inline int QueryRequestStatusResponse_RequestStatusResult::requeststatus_size() const {
  return _internal_requeststatus_size();
}
inline void QueryRequestStatusResponse_RequestStatusResult::clear_requeststatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requeststatus_.Clear();
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus* QueryRequestStatusResponse_RequestStatusResult::mutable_requeststatus(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.requestStatus)
  return _internal_mutable_requeststatus()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>* QueryRequestStatusResponse_RequestStatusResult::mutable_requeststatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.requestStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requeststatus();
}
inline const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus& QueryRequestStatusResponse_RequestStatusResult::requeststatus(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.requestStatus)
  return _internal_requeststatus().Get(index);
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus* QueryRequestStatusResponse_RequestStatusResult::add_requeststatus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus* _add = _internal_mutable_requeststatus()->Add();
  // @@protoc_insertion_point(field_add:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.requestStatus)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>& QueryRequestStatusResponse_RequestStatusResult::requeststatus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult.requestStatus)
  return _internal_requeststatus();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>&
QueryRequestStatusResponse_RequestStatusResult::_internal_requeststatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requeststatus_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult_RequestStatus>*
QueryRequestStatusResponse_RequestStatusResult::_internal_mutable_requeststatus() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requeststatus_;
}

// -------------------------------------------------------------------

// QueryRequestStatusResponse

// .Timestamp responseTime = 1;
inline bool QueryRequestStatusResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryRequestStatusResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryRequestStatusResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryRequestStatusResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.responseTime)
}
inline ::Timestamp* QueryRequestStatusResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryRequestStatusResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryRequestStatusResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryRequestStatusResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.responseTime)
  return _msg;
}
inline void QueryRequestStatusResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryRequestStatusResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryRequestStatusResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryRequestStatusResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryRequestStatusResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryRequestStatusResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryRequestStatusResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryRequestStatusResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryRequestStatusResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryRequestStatusResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.exceptionalResult)
  return _msg;
}

// .dp.service.ingestion.QueryRequestStatusResponse.RequestStatusResult requestStatusResult = 11;
inline bool QueryRequestStatusResponse::has_requeststatusresult() const {
  return result_case() == kRequestStatusResult;
}
inline bool QueryRequestStatusResponse::_internal_has_requeststatusresult() const {
  return result_case() == kRequestStatusResult;
}
inline void QueryRequestStatusResponse::set_has_requeststatusresult() {
  _impl_._oneof_case_[0] = kRequestStatusResult;
}
inline void QueryRequestStatusResponse::clear_requeststatusresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kRequestStatusResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.requeststatusresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.requeststatusresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* QueryRequestStatusResponse::release_requeststatusresult() {
  // @@protoc_insertion_point(field_release:dp.service.ingestion.QueryRequestStatusResponse.requestStatusResult)
  if (result_case() == kRequestStatusResult) {
    clear_has_result();
    auto* temp = _impl_.result_.requeststatusresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.requeststatusresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult& QueryRequestStatusResponse::_internal_requeststatusresult() const {
  return result_case() == kRequestStatusResult ? *_impl_.result_.requeststatusresult_ : reinterpret_cast<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult&>(::dp::service::ingestion::_QueryRequestStatusResponse_RequestStatusResult_default_instance_);
}
inline const ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult& QueryRequestStatusResponse::requeststatusresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.ingestion.QueryRequestStatusResponse.requestStatusResult)
  return _internal_requeststatusresult();
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* QueryRequestStatusResponse::unsafe_arena_release_requeststatusresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.ingestion.QueryRequestStatusResponse.requestStatusResult)
  if (result_case() == kRequestStatusResult) {
    clear_has_result();
    auto* temp = _impl_.result_.requeststatusresult_;
    _impl_.result_.requeststatusresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryRequestStatusResponse::unsafe_arena_set_allocated_requeststatusresult(::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_requeststatusresult();
    _impl_.result_.requeststatusresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.ingestion.QueryRequestStatusResponse.requestStatusResult)
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* QueryRequestStatusResponse::_internal_mutable_requeststatusresult() {
  if (result_case() != kRequestStatusResult) {
    clear_result();
    set_has_requeststatusresult();
    _impl_.result_.requeststatusresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult>(GetArena());
  }
  return _impl_.result_.requeststatusresult_;
}
inline ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* QueryRequestStatusResponse::mutable_requeststatusresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::ingestion::QueryRequestStatusResponse_RequestStatusResult* _msg = _internal_mutable_requeststatusresult();
  // @@protoc_insertion_point(field_mutable:dp.service.ingestion.QueryRequestStatusResponse.requestStatusResult)
  return _msg;
}

inline bool QueryRequestStatusResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryRequestStatusResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryRequestStatusResponse::ResultCase QueryRequestStatusResponse::result_case() const {
  return QueryRequestStatusResponse::ResultCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ingestion
}  // namespace service
}  // namespace dp


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::dp::service::ingestion::IngestionRequestStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::dp::service::ingestion::IngestionRequestStatus>() {
  return ::dp::service::ingestion::IngestionRequestStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ingestion_2eproto_2epb_2eh
