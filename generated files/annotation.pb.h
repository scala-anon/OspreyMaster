// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: annotation.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_annotation_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_annotation_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_annotation_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_annotation_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_annotation_2eproto;
namespace dp {
namespace service {
namespace annotation {
class CommentAnnotation;
struct CommentAnnotationDefaultTypeInternal;
extern CommentAnnotationDefaultTypeInternal _CommentAnnotation_default_instance_;
class CreateAnnotationRequest;
struct CreateAnnotationRequestDefaultTypeInternal;
extern CreateAnnotationRequestDefaultTypeInternal _CreateAnnotationRequest_default_instance_;
class CreateAnnotationResponse;
struct CreateAnnotationResponseDefaultTypeInternal;
extern CreateAnnotationResponseDefaultTypeInternal _CreateAnnotationResponse_default_instance_;
class CreateAnnotationResponse_CreateAnnotationResult;
struct CreateAnnotationResponse_CreateAnnotationResultDefaultTypeInternal;
extern CreateAnnotationResponse_CreateAnnotationResultDefaultTypeInternal _CreateAnnotationResponse_CreateAnnotationResult_default_instance_;
class CreateDataSetRequest;
struct CreateDataSetRequestDefaultTypeInternal;
extern CreateDataSetRequestDefaultTypeInternal _CreateDataSetRequest_default_instance_;
class CreateDataSetResponse;
struct CreateDataSetResponseDefaultTypeInternal;
extern CreateDataSetResponseDefaultTypeInternal _CreateDataSetResponse_default_instance_;
class CreateDataSetResponse_CreateDataSetResult;
struct CreateDataSetResponse_CreateDataSetResultDefaultTypeInternal;
extern CreateDataSetResponse_CreateDataSetResultDefaultTypeInternal _CreateDataSetResponse_CreateDataSetResult_default_instance_;
class DataBlock;
struct DataBlockDefaultTypeInternal;
extern DataBlockDefaultTypeInternal _DataBlock_default_instance_;
class DataSet;
struct DataSetDefaultTypeInternal;
extern DataSetDefaultTypeInternal _DataSet_default_instance_;
class QueryAnnotationsRequest;
struct QueryAnnotationsRequestDefaultTypeInternal;
extern QueryAnnotationsRequestDefaultTypeInternal _QueryAnnotationsRequest_default_instance_;
class QueryAnnotationsRequest_QueryAnnotationsCriterion;
struct QueryAnnotationsRequest_QueryAnnotationsCriterionDefaultTypeInternal;
extern QueryAnnotationsRequest_QueryAnnotationsCriterionDefaultTypeInternal _QueryAnnotationsRequest_QueryAnnotationsCriterion_default_instance_;
class QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion;
struct QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterionDefaultTypeInternal;
extern QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterionDefaultTypeInternal _QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion_default_instance_;
class QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion;
struct QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterionDefaultTypeInternal;
extern QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterionDefaultTypeInternal _QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion_default_instance_;
class QueryAnnotationsResponse;
struct QueryAnnotationsResponseDefaultTypeInternal;
extern QueryAnnotationsResponseDefaultTypeInternal _QueryAnnotationsResponse_default_instance_;
class QueryAnnotationsResponse_AnnotationsResult;
struct QueryAnnotationsResponse_AnnotationsResultDefaultTypeInternal;
extern QueryAnnotationsResponse_AnnotationsResultDefaultTypeInternal _QueryAnnotationsResponse_AnnotationsResult_default_instance_;
class QueryAnnotationsResponse_AnnotationsResult_Annotation;
struct QueryAnnotationsResponse_AnnotationsResult_AnnotationDefaultTypeInternal;
extern QueryAnnotationsResponse_AnnotationsResult_AnnotationDefaultTypeInternal _QueryAnnotationsResponse_AnnotationsResult_Annotation_default_instance_;
class QueryDataSetsRequest;
struct QueryDataSetsRequestDefaultTypeInternal;
extern QueryDataSetsRequestDefaultTypeInternal _QueryDataSetsRequest_default_instance_;
class QueryDataSetsRequest_QueryDataSetsCriterion;
struct QueryDataSetsRequest_QueryDataSetsCriterionDefaultTypeInternal;
extern QueryDataSetsRequest_QueryDataSetsCriterionDefaultTypeInternal _QueryDataSetsRequest_QueryDataSetsCriterion_default_instance_;
class QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion;
struct QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterionDefaultTypeInternal;
extern QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterionDefaultTypeInternal _QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion_default_instance_;
class QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion;
struct QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterionDefaultTypeInternal;
extern QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterionDefaultTypeInternal _QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion_default_instance_;
class QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion;
struct QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterionDefaultTypeInternal;
extern QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterionDefaultTypeInternal _QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion_default_instance_;
class QueryDataSetsResponse;
struct QueryDataSetsResponseDefaultTypeInternal;
extern QueryDataSetsResponseDefaultTypeInternal _QueryDataSetsResponse_default_instance_;
class QueryDataSetsResponse_DataSetsResult;
struct QueryDataSetsResponse_DataSetsResultDefaultTypeInternal;
extern QueryDataSetsResponse_DataSetsResultDefaultTypeInternal _QueryDataSetsResponse_DataSetsResult_default_instance_;
}  // namespace annotation
}  // namespace service
}  // namespace dp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dp {
namespace service {
namespace annotation {

// ===================================================================


// -------------------------------------------------------------------

class QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion) */ {
 public:
  inline QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion() : QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(nullptr) {}
  ~QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from) : QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(nullptr, from) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(nullptr, std::move(from)) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& operator=(const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& operator=(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion*>(
        &_QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& a, QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from) { QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion"; }

 protected:
  explicit QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(::google::protobuf::Arena* arena);
  QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(::google::protobuf::Arena* arena, const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from);
  QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(::google::protobuf::Arena* arena, QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerIdFieldNumber = 1,
  };
  // string ownerId = 1;
  void clear_ownerid() ;
  const std::string& ownerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerid(Arg_&& arg, Args_... args);
  std::string* mutable_ownerid();
  PROTOBUF_NODISCARD std::string* release_ownerid();
  void set_allocated_ownerid(std::string* value);

  private:
  const std::string& _internal_ownerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ownerid(
      const std::string& value);
  std::string* _internal_mutable_ownerid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      96, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ownerid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion) */ {
 public:
  inline QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion() : QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(nullptr) {}
  ~QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from) : QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(nullptr, from) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(nullptr, std::move(from)) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& operator=(const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& operator=(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion*>(
        &_QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& a, QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from) { QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion"; }

 protected:
  explicit QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(::google::protobuf::Arena* arena);
  QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(::google::protobuf::Arena* arena, const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from);
  QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(::google::protobuf::Arena* arena, QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamePatternFieldNumber = 1,
  };
  // string namePattern = 1;
  void clear_namepattern() ;
  const std::string& namepattern() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_namepattern(Arg_&& arg, Args_... args);
  std::string* mutable_namepattern();
  PROTOBUF_NODISCARD std::string* release_namepattern();
  void set_allocated_namepattern(std::string* value);

  private:
  const std::string& _internal_namepattern() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_namepattern(
      const std::string& value);
  std::string* _internal_mutable_namepattern();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      99, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr namepattern_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion) */ {
 public:
  inline QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion() : QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(nullptr) {}
  ~QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from) : QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(nullptr, from) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(nullptr, std::move(from)) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& operator=(const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& operator=(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion*>(
        &_QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& a, QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from) { QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion"; }

 protected:
  explicit QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(::google::protobuf::Arena* arena);
  QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(::google::protobuf::Arena* arena, const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from);
  QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(::google::protobuf::Arena* arena, QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionTextFieldNumber = 1,
  };
  // string descriptionText = 1;
  void clear_descriptiontext() ;
  const std::string& descriptiontext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_descriptiontext(Arg_&& arg, Args_... args);
  std::string* mutable_descriptiontext();
  PROTOBUF_NODISCARD std::string* release_descriptiontext();
  void set_allocated_descriptiontext(std::string* value);

  private:
  const std::string& _internal_descriptiontext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_descriptiontext(
      const std::string& value);
  std::string* _internal_mutable_descriptiontext();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      110, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr descriptiontext_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion) */ {
 public:
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion() : QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(nullptr) {}
  ~QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from) : QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(nullptr, from) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(nullptr, std::move(from)) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& operator=(const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& operator=(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion*>(
        &_QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& a, QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from) { QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion"; }

 protected:
  explicit QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(::google::protobuf::Arena* arena);
  QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(::google::protobuf::Arena* arena, const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from);
  QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(::google::protobuf::Arena* arena, QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerIdFieldNumber = 1,
  };
  // string ownerId = 1;
  void clear_ownerid() ;
  const std::string& ownerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerid(Arg_&& arg, Args_... args);
  std::string* mutable_ownerid();
  PROTOBUF_NODISCARD std::string* release_ownerid();
  void set_allocated_ownerid(std::string* value);

  private:
  const std::string& _internal_ownerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ownerid(
      const std::string& value);
  std::string* _internal_mutable_ownerid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      102, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ownerid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion) */ {
 public:
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion() : QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(nullptr) {}
  ~QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from) : QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(nullptr, from) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(nullptr, std::move(from)) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& operator=(const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& operator=(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion*>(
        &_QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& a, QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from) { QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion"; }

 protected:
  explicit QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(::google::protobuf::Arena* arena);
  QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(::google::protobuf::Arena* arena, const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from);
  QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(::google::protobuf::Arena* arena, QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommentTextFieldNumber = 1,
  };
  // string commentText = 1;
  void clear_commenttext() ;
  const std::string& commenttext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_commenttext(Arg_&& arg, Args_... args);
  std::string* mutable_commenttext();
  PROTOBUF_NODISCARD std::string* release_commenttext();
  void set_allocated_commenttext(std::string* value);

  private:
  const std::string& _internal_commenttext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commenttext(
      const std::string& value);
  std::string* _internal_mutable_commenttext();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      108, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& from_msg);
    ::google::protobuf::internal::ArenaStringPtr commenttext_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateDataSetResponse_CreateDataSetResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult) */ {
 public:
  inline CreateDataSetResponse_CreateDataSetResult() : CreateDataSetResponse_CreateDataSetResult(nullptr) {}
  ~CreateDataSetResponse_CreateDataSetResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDataSetResponse_CreateDataSetResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDataSetResponse_CreateDataSetResult(const CreateDataSetResponse_CreateDataSetResult& from) : CreateDataSetResponse_CreateDataSetResult(nullptr, from) {}
  inline CreateDataSetResponse_CreateDataSetResult(CreateDataSetResponse_CreateDataSetResult&& from) noexcept
      : CreateDataSetResponse_CreateDataSetResult(nullptr, std::move(from)) {}
  inline CreateDataSetResponse_CreateDataSetResult& operator=(const CreateDataSetResponse_CreateDataSetResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDataSetResponse_CreateDataSetResult& operator=(CreateDataSetResponse_CreateDataSetResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDataSetResponse_CreateDataSetResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDataSetResponse_CreateDataSetResult* internal_default_instance() {
    return reinterpret_cast<const CreateDataSetResponse_CreateDataSetResult*>(
        &_CreateDataSetResponse_CreateDataSetResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CreateDataSetResponse_CreateDataSetResult& a, CreateDataSetResponse_CreateDataSetResult& b) { a.Swap(&b); }
  inline void Swap(CreateDataSetResponse_CreateDataSetResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDataSetResponse_CreateDataSetResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDataSetResponse_CreateDataSetResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateDataSetResponse_CreateDataSetResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDataSetResponse_CreateDataSetResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDataSetResponse_CreateDataSetResult& from) { CreateDataSetResponse_CreateDataSetResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateDataSetResponse_CreateDataSetResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateDataSetResponse.CreateDataSetResult"; }

 protected:
  explicit CreateDataSetResponse_CreateDataSetResult(::google::protobuf::Arena* arena);
  CreateDataSetResponse_CreateDataSetResult(::google::protobuf::Arena* arena, const CreateDataSetResponse_CreateDataSetResult& from);
  CreateDataSetResponse_CreateDataSetResult(::google::protobuf::Arena* arena, CreateDataSetResponse_CreateDataSetResult&& from) noexcept
      : CreateDataSetResponse_CreateDataSetResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataSetIdFieldNumber = 1,
  };
  // string dataSetId = 1;
  void clear_datasetid() ;
  const std::string& datasetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_datasetid(Arg_&& arg, Args_... args);
  std::string* mutable_datasetid();
  PROTOBUF_NODISCARD std::string* release_datasetid();
  void set_allocated_datasetid(std::string* value);

  private:
  const std::string& _internal_datasetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_datasetid(
      const std::string& value);
  std::string* _internal_mutable_datasetid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      81, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateDataSetResponse_CreateDataSetResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDataSetResponse_CreateDataSetResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr datasetid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateAnnotationResponse_CreateAnnotationResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult) */ {
 public:
  inline CreateAnnotationResponse_CreateAnnotationResult() : CreateAnnotationResponse_CreateAnnotationResult(nullptr) {}
  ~CreateAnnotationResponse_CreateAnnotationResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAnnotationResponse_CreateAnnotationResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAnnotationResponse_CreateAnnotationResult(const CreateAnnotationResponse_CreateAnnotationResult& from) : CreateAnnotationResponse_CreateAnnotationResult(nullptr, from) {}
  inline CreateAnnotationResponse_CreateAnnotationResult(CreateAnnotationResponse_CreateAnnotationResult&& from) noexcept
      : CreateAnnotationResponse_CreateAnnotationResult(nullptr, std::move(from)) {}
  inline CreateAnnotationResponse_CreateAnnotationResult& operator=(const CreateAnnotationResponse_CreateAnnotationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAnnotationResponse_CreateAnnotationResult& operator=(CreateAnnotationResponse_CreateAnnotationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAnnotationResponse_CreateAnnotationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAnnotationResponse_CreateAnnotationResult* internal_default_instance() {
    return reinterpret_cast<const CreateAnnotationResponse_CreateAnnotationResult*>(
        &_CreateAnnotationResponse_CreateAnnotationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CreateAnnotationResponse_CreateAnnotationResult& a, CreateAnnotationResponse_CreateAnnotationResult& b) { a.Swap(&b); }
  inline void Swap(CreateAnnotationResponse_CreateAnnotationResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAnnotationResponse_CreateAnnotationResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAnnotationResponse_CreateAnnotationResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateAnnotationResponse_CreateAnnotationResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAnnotationResponse_CreateAnnotationResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAnnotationResponse_CreateAnnotationResult& from) { CreateAnnotationResponse_CreateAnnotationResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateAnnotationResponse_CreateAnnotationResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult"; }

 protected:
  explicit CreateAnnotationResponse_CreateAnnotationResult(::google::protobuf::Arena* arena);
  CreateAnnotationResponse_CreateAnnotationResult(::google::protobuf::Arena* arena, const CreateAnnotationResponse_CreateAnnotationResult& from);
  CreateAnnotationResponse_CreateAnnotationResult(::google::protobuf::Arena* arena, CreateAnnotationResponse_CreateAnnotationResult&& from) noexcept
      : CreateAnnotationResponse_CreateAnnotationResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnotationIdFieldNumber = 1,
  };
  // string annotationId = 1;
  void clear_annotationid() ;
  const std::string& annotationid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_annotationid(Arg_&& arg, Args_... args);
  std::string* mutable_annotationid();
  PROTOBUF_NODISCARD std::string* release_annotationid();
  void set_allocated_annotationid(std::string* value);

  private:
  const std::string& _internal_annotationid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_annotationid(
      const std::string& value);
  std::string* _internal_mutable_annotationid();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      90, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateAnnotationResponse_CreateAnnotationResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAnnotationResponse_CreateAnnotationResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr annotationid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CommentAnnotation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CommentAnnotation) */ {
 public:
  inline CommentAnnotation() : CommentAnnotation(nullptr) {}
  ~CommentAnnotation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CommentAnnotation(
      ::google::protobuf::internal::ConstantInitialized);

  inline CommentAnnotation(const CommentAnnotation& from) : CommentAnnotation(nullptr, from) {}
  inline CommentAnnotation(CommentAnnotation&& from) noexcept
      : CommentAnnotation(nullptr, std::move(from)) {}
  inline CommentAnnotation& operator=(const CommentAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommentAnnotation& operator=(CommentAnnotation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommentAnnotation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommentAnnotation* internal_default_instance() {
    return reinterpret_cast<const CommentAnnotation*>(
        &_CommentAnnotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CommentAnnotation& a, CommentAnnotation& b) { a.Swap(&b); }
  inline void Swap(CommentAnnotation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommentAnnotation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommentAnnotation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CommentAnnotation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommentAnnotation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CommentAnnotation& from) { CommentAnnotation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CommentAnnotation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CommentAnnotation"; }

 protected:
  explicit CommentAnnotation(::google::protobuf::Arena* arena);
  CommentAnnotation(::google::protobuf::Arena* arena, const CommentAnnotation& from);
  CommentAnnotation(::google::protobuf::Arena* arena, CommentAnnotation&& from) noexcept
      : CommentAnnotation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommentFieldNumber = 1,
  };
  // string comment = 1;
  void clear_comment() ;
  const std::string& comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comment(Arg_&& arg, Args_... args);
  std::string* mutable_comment();
  PROTOBUF_NODISCARD std::string* release_comment();
  void set_allocated_comment(std::string* value);

  private:
  const std::string& _internal_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_comment(
      const std::string& value);
  std::string* _internal_mutable_comment();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CommentAnnotation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CommentAnnotation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CommentAnnotation& from_msg);
    ::google::protobuf::internal::ArenaStringPtr comment_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsRequest_QueryDataSetsCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion) */ {
 public:
  inline QueryDataSetsRequest_QueryDataSetsCriterion() : QueryDataSetsRequest_QueryDataSetsCriterion(nullptr) {}
  ~QueryDataSetsRequest_QueryDataSetsCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsRequest_QueryDataSetsCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsRequest_QueryDataSetsCriterion(const QueryDataSetsRequest_QueryDataSetsCriterion& from) : QueryDataSetsRequest_QueryDataSetsCriterion(nullptr, from) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion(QueryDataSetsRequest_QueryDataSetsCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion(nullptr, std::move(from)) {}
  inline QueryDataSetsRequest_QueryDataSetsCriterion& operator=(const QueryDataSetsRequest_QueryDataSetsCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsRequest_QueryDataSetsCriterion& operator=(QueryDataSetsRequest_QueryDataSetsCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsRequest_QueryDataSetsCriterion& default_instance() {
    return *internal_default_instance();
  }
  enum CriterionCase {
    kOwnerCriterion = 10,
    kNameCriterion = 11,
    kDescriptionCriterion = 12,
    CRITERION_NOT_SET = 0,
  };
  static inline const QueryDataSetsRequest_QueryDataSetsCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsRequest_QueryDataSetsCriterion*>(
        &_QueryDataSetsRequest_QueryDataSetsCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryDataSetsRequest_QueryDataSetsCriterion& a, QueryDataSetsRequest_QueryDataSetsCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsRequest_QueryDataSetsCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsRequest_QueryDataSetsCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsRequest_QueryDataSetsCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsRequest_QueryDataSetsCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsRequest_QueryDataSetsCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsRequest_QueryDataSetsCriterion& from) { QueryDataSetsRequest_QueryDataSetsCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsRequest_QueryDataSetsCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion"; }

 protected:
  explicit QueryDataSetsRequest_QueryDataSetsCriterion(::google::protobuf::Arena* arena);
  QueryDataSetsRequest_QueryDataSetsCriterion(::google::protobuf::Arena* arena, const QueryDataSetsRequest_QueryDataSetsCriterion& from);
  QueryDataSetsRequest_QueryDataSetsCriterion(::google::protobuf::Arena* arena, QueryDataSetsRequest_QueryDataSetsCriterion&& from) noexcept
      : QueryDataSetsRequest_QueryDataSetsCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OwnerCriterion = QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion;
  using NameCriterion = QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion;
  using DescriptionCriterion = QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerCriterionFieldNumber = 10,
    kNameCriterionFieldNumber = 11,
    kDescriptionCriterionFieldNumber = 12,
  };
  // .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion ownerCriterion = 10;
  bool has_ownercriterion() const;
  private:
  bool _internal_has_ownercriterion() const;

  public:
  void clear_ownercriterion() ;
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& ownercriterion() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* release_ownercriterion();
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* mutable_ownercriterion();
  void set_allocated_ownercriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* value);
  void unsafe_arena_set_allocated_ownercriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* value);
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* unsafe_arena_release_ownercriterion();

  private:
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& _internal_ownercriterion() const;
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* _internal_mutable_ownercriterion();

  public:
  // .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion nameCriterion = 11;
  bool has_namecriterion() const;
  private:
  bool _internal_has_namecriterion() const;

  public:
  void clear_namecriterion() ;
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& namecriterion() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* release_namecriterion();
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* mutable_namecriterion();
  void set_allocated_namecriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* value);
  void unsafe_arena_set_allocated_namecriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* value);
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* unsafe_arena_release_namecriterion();

  private:
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& _internal_namecriterion() const;
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* _internal_mutable_namecriterion();

  public:
  // .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion descriptionCriterion = 12;
  bool has_descriptioncriterion() const;
  private:
  bool _internal_has_descriptioncriterion() const;

  public:
  void clear_descriptioncriterion() ;
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& descriptioncriterion() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* release_descriptioncriterion();
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* mutable_descriptioncriterion();
  void set_allocated_descriptioncriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* value);
  void unsafe_arena_set_allocated_descriptioncriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* value);
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* unsafe_arena_release_descriptioncriterion();

  private:
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& _internal_descriptioncriterion() const;
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* _internal_mutable_descriptioncriterion();

  public:
  void clear_criterion();
  CriterionCase criterion_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion)
 private:
  class _Internal;
  void set_has_ownercriterion();
  void set_has_namecriterion();
  void set_has_descriptioncriterion();
  inline bool has_criterion() const;
  inline void clear_has_criterion();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsRequest_QueryDataSetsCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsRequest_QueryDataSetsCriterion& from_msg);
    union CriterionUnion {
      constexpr CriterionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* ownercriterion_;
      ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* namecriterion_;
      ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* descriptioncriterion_;
    } criterion_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsRequest_QueryAnnotationsCriterion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion) */ {
 public:
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion() : QueryAnnotationsRequest_QueryAnnotationsCriterion(nullptr) {}
  ~QueryAnnotationsRequest_QueryAnnotationsCriterion() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsRequest_QueryAnnotationsCriterion(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsRequest_QueryAnnotationsCriterion(const QueryAnnotationsRequest_QueryAnnotationsCriterion& from) : QueryAnnotationsRequest_QueryAnnotationsCriterion(nullptr, from) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion(QueryAnnotationsRequest_QueryAnnotationsCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion(nullptr, std::move(from)) {}
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion& operator=(const QueryAnnotationsRequest_QueryAnnotationsCriterion& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsRequest_QueryAnnotationsCriterion& operator=(QueryAnnotationsRequest_QueryAnnotationsCriterion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsRequest_QueryAnnotationsCriterion& default_instance() {
    return *internal_default_instance();
  }
  enum CriterionCase {
    kOwnerCriterion = 10,
    kCommentCriterion = 11,
    CRITERION_NOT_SET = 0,
  };
  static inline const QueryAnnotationsRequest_QueryAnnotationsCriterion* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsRequest_QueryAnnotationsCriterion*>(
        &_QueryAnnotationsRequest_QueryAnnotationsCriterion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(QueryAnnotationsRequest_QueryAnnotationsCriterion& a, QueryAnnotationsRequest_QueryAnnotationsCriterion& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsRequest_QueryAnnotationsCriterion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsRequest_QueryAnnotationsCriterion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsRequest_QueryAnnotationsCriterion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsRequest_QueryAnnotationsCriterion& from) { QueryAnnotationsRequest_QueryAnnotationsCriterion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsRequest_QueryAnnotationsCriterion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion"; }

 protected:
  explicit QueryAnnotationsRequest_QueryAnnotationsCriterion(::google::protobuf::Arena* arena);
  QueryAnnotationsRequest_QueryAnnotationsCriterion(::google::protobuf::Arena* arena, const QueryAnnotationsRequest_QueryAnnotationsCriterion& from);
  QueryAnnotationsRequest_QueryAnnotationsCriterion(::google::protobuf::Arena* arena, QueryAnnotationsRequest_QueryAnnotationsCriterion&& from) noexcept
      : QueryAnnotationsRequest_QueryAnnotationsCriterion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OwnerCriterion = QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion;
  using CommentCriterion = QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerCriterionFieldNumber = 10,
    kCommentCriterionFieldNumber = 11,
  };
  // .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion ownerCriterion = 10;
  bool has_ownercriterion() const;
  private:
  bool _internal_has_ownercriterion() const;

  public:
  void clear_ownercriterion() ;
  const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& ownercriterion() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* release_ownercriterion();
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* mutable_ownercriterion();
  void set_allocated_ownercriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* value);
  void unsafe_arena_set_allocated_ownercriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* value);
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* unsafe_arena_release_ownercriterion();

  private:
  const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& _internal_ownercriterion() const;
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* _internal_mutable_ownercriterion();

  public:
  // .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion commentCriterion = 11;
  bool has_commentcriterion() const;
  private:
  bool _internal_has_commentcriterion() const;

  public:
  void clear_commentcriterion() ;
  const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& commentcriterion() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* release_commentcriterion();
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* mutable_commentcriterion();
  void set_allocated_commentcriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* value);
  void unsafe_arena_set_allocated_commentcriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* value);
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* unsafe_arena_release_commentcriterion();

  private:
  const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& _internal_commentcriterion() const;
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* _internal_mutable_commentcriterion();

  public:
  void clear_criterion();
  CriterionCase criterion_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion)
 private:
  class _Internal;
  void set_has_ownercriterion();
  void set_has_commentcriterion();
  inline bool has_criterion() const;
  inline void clear_has_criterion();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsRequest_QueryAnnotationsCriterion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsRequest_QueryAnnotationsCriterion& from_msg);
    union CriterionUnion {
      constexpr CriterionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* ownercriterion_;
      ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* commentcriterion_;
    } criterion_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class DataBlock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.DataBlock) */ {
 public:
  inline DataBlock() : DataBlock(nullptr) {}
  ~DataBlock() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataBlock(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataBlock(const DataBlock& from) : DataBlock(nullptr, from) {}
  inline DataBlock(DataBlock&& from) noexcept
      : DataBlock(nullptr, std::move(from)) {}
  inline DataBlock& operator=(const DataBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataBlock& operator=(DataBlock&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataBlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataBlock* internal_default_instance() {
    return reinterpret_cast<const DataBlock*>(
        &_DataBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(DataBlock& a, DataBlock& b) { a.Swap(&b); }
  inline void Swap(DataBlock* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataBlock* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataBlock* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DataBlock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataBlock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataBlock& from) { DataBlock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataBlock* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.DataBlock"; }

 protected:
  explicit DataBlock(::google::protobuf::Arena* arena);
  DataBlock(::google::protobuf::Arena* arena, const DataBlock& from);
  DataBlock(::google::protobuf::Arena* arena, DataBlock&& from) noexcept
      : DataBlock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPvNamesFieldNumber = 3,
    kBeginTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
  };
  // repeated string pvNames = 3;
  int pvnames_size() const;
  private:
  int _internal_pvnames_size() const;

  public:
  void clear_pvnames() ;
  const std::string& pvnames(int index) const;
  std::string* mutable_pvnames(int index);
  void set_pvnames(int index, const std::string& value);
  void set_pvnames(int index, std::string&& value);
  void set_pvnames(int index, const char* value);
  void set_pvnames(int index, const char* value, std::size_t size);
  void set_pvnames(int index, absl::string_view value);
  std::string* add_pvnames();
  void add_pvnames(const std::string& value);
  void add_pvnames(std::string&& value);
  void add_pvnames(const char* value);
  void add_pvnames(const char* value, std::size_t size);
  void add_pvnames(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pvnames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pvnames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pvnames();

  public:
  // .Timestamp beginTime = 1;
  bool has_begintime() const;
  void clear_begintime() ;
  const ::Timestamp& begintime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_begintime();
  ::Timestamp* mutable_begintime();
  void set_allocated_begintime(::Timestamp* value);
  void unsafe_arena_set_allocated_begintime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_begintime();

  private:
  const ::Timestamp& _internal_begintime() const;
  ::Timestamp* _internal_mutable_begintime();

  public:
  // .Timestamp endTime = 2;
  bool has_endtime() const;
  void clear_endtime() ;
  const ::Timestamp& endtime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_endtime();
  ::Timestamp* mutable_endtime();
  void set_allocated_endtime(::Timestamp* value);
  void unsafe_arena_set_allocated_endtime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_endtime();

  private:
  const ::Timestamp& _internal_endtime() const;
  ::Timestamp* _internal_mutable_endtime();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.DataBlock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DataBlock_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataBlock& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> pvnames_;
    ::Timestamp* begintime_;
    ::Timestamp* endtime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateDataSetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateDataSetResponse) */ {
 public:
  inline CreateDataSetResponse() : CreateDataSetResponse(nullptr) {}
  ~CreateDataSetResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDataSetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDataSetResponse(const CreateDataSetResponse& from) : CreateDataSetResponse(nullptr, from) {}
  inline CreateDataSetResponse(CreateDataSetResponse&& from) noexcept
      : CreateDataSetResponse(nullptr, std::move(from)) {}
  inline CreateDataSetResponse& operator=(const CreateDataSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDataSetResponse& operator=(CreateDataSetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDataSetResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kCreateDataSetResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const CreateDataSetResponse* internal_default_instance() {
    return reinterpret_cast<const CreateDataSetResponse*>(
        &_CreateDataSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateDataSetResponse& a, CreateDataSetResponse& b) { a.Swap(&b); }
  inline void Swap(CreateDataSetResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDataSetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDataSetResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateDataSetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDataSetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDataSetResponse& from) { CreateDataSetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateDataSetResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateDataSetResponse"; }

 protected:
  explicit CreateDataSetResponse(::google::protobuf::Arena* arena);
  CreateDataSetResponse(::google::protobuf::Arena* arena, const CreateDataSetResponse& from);
  CreateDataSetResponse(::google::protobuf::Arena* arena, CreateDataSetResponse&& from) noexcept
      : CreateDataSetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CreateDataSetResult = CreateDataSetResponse_CreateDataSetResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kCreateDataSetResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.annotation.CreateDataSetResponse.CreateDataSetResult createDataSetResult = 11;
  bool has_createdatasetresult() const;
  private:
  bool _internal_has_createdatasetresult() const;

  public:
  void clear_createdatasetresult() ;
  const ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult& createdatasetresult() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* release_createdatasetresult();
  ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* mutable_createdatasetresult();
  void set_allocated_createdatasetresult(::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* value);
  void unsafe_arena_set_allocated_createdatasetresult(::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* value);
  ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* unsafe_arena_release_createdatasetresult();

  private:
  const ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult& _internal_createdatasetresult() const;
  ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* _internal_mutable_createdatasetresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateDataSetResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_createdatasetresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateDataSetResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDataSetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* createdatasetresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateAnnotationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateAnnotationResponse) */ {
 public:
  inline CreateAnnotationResponse() : CreateAnnotationResponse(nullptr) {}
  ~CreateAnnotationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAnnotationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAnnotationResponse(const CreateAnnotationResponse& from) : CreateAnnotationResponse(nullptr, from) {}
  inline CreateAnnotationResponse(CreateAnnotationResponse&& from) noexcept
      : CreateAnnotationResponse(nullptr, std::move(from)) {}
  inline CreateAnnotationResponse& operator=(const CreateAnnotationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAnnotationResponse& operator=(CreateAnnotationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAnnotationResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kCreateAnnotationResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const CreateAnnotationResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAnnotationResponse*>(
        &_CreateAnnotationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CreateAnnotationResponse& a, CreateAnnotationResponse& b) { a.Swap(&b); }
  inline void Swap(CreateAnnotationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAnnotationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAnnotationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateAnnotationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAnnotationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAnnotationResponse& from) { CreateAnnotationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateAnnotationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateAnnotationResponse"; }

 protected:
  explicit CreateAnnotationResponse(::google::protobuf::Arena* arena);
  CreateAnnotationResponse(::google::protobuf::Arena* arena, const CreateAnnotationResponse& from);
  CreateAnnotationResponse(::google::protobuf::Arena* arena, CreateAnnotationResponse&& from) noexcept
      : CreateAnnotationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CreateAnnotationResult = CreateAnnotationResponse_CreateAnnotationResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kCreateAnnotationResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult createAnnotationResult = 11;
  bool has_createannotationresult() const;
  private:
  bool _internal_has_createannotationresult() const;

  public:
  void clear_createannotationresult() ;
  const ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult& createannotationresult() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* release_createannotationresult();
  ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* mutable_createannotationresult();
  void set_allocated_createannotationresult(::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* value);
  void unsafe_arena_set_allocated_createannotationresult(::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* value);
  ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* unsafe_arena_release_createannotationresult();

  private:
  const ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult& _internal_createannotationresult() const;
  ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* _internal_mutable_createannotationresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateAnnotationResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_createannotationresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateAnnotationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAnnotationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* createannotationresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateAnnotationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateAnnotationRequest) */ {
 public:
  inline CreateAnnotationRequest() : CreateAnnotationRequest(nullptr) {}
  ~CreateAnnotationRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAnnotationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAnnotationRequest(const CreateAnnotationRequest& from) : CreateAnnotationRequest(nullptr, from) {}
  inline CreateAnnotationRequest(CreateAnnotationRequest&& from) noexcept
      : CreateAnnotationRequest(nullptr, std::move(from)) {}
  inline CreateAnnotationRequest& operator=(const CreateAnnotationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAnnotationRequest& operator=(CreateAnnotationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAnnotationRequest& default_instance() {
    return *internal_default_instance();
  }
  enum AnnotationCase {
    kCommentAnnotation = 10,
    ANNOTATION_NOT_SET = 0,
  };
  static inline const CreateAnnotationRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAnnotationRequest*>(
        &_CreateAnnotationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateAnnotationRequest& a, CreateAnnotationRequest& b) { a.Swap(&b); }
  inline void Swap(CreateAnnotationRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAnnotationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAnnotationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateAnnotationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAnnotationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAnnotationRequest& from) { CreateAnnotationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateAnnotationRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateAnnotationRequest"; }

 protected:
  explicit CreateAnnotationRequest(::google::protobuf::Arena* arena);
  CreateAnnotationRequest(::google::protobuf::Arena* arena, const CreateAnnotationRequest& from);
  CreateAnnotationRequest(::google::protobuf::Arena* arena, CreateAnnotationRequest&& from) noexcept
      : CreateAnnotationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerIdFieldNumber = 1,
    kDataSetIdFieldNumber = 2,
    kCommentAnnotationFieldNumber = 10,
  };
  // string ownerId = 1;
  void clear_ownerid() ;
  const std::string& ownerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerid(Arg_&& arg, Args_... args);
  std::string* mutable_ownerid();
  PROTOBUF_NODISCARD std::string* release_ownerid();
  void set_allocated_ownerid(std::string* value);

  private:
  const std::string& _internal_ownerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ownerid(
      const std::string& value);
  std::string* _internal_mutable_ownerid();

  public:
  // string dataSetId = 2;
  void clear_datasetid() ;
  const std::string& datasetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_datasetid(Arg_&& arg, Args_... args);
  std::string* mutable_datasetid();
  PROTOBUF_NODISCARD std::string* release_datasetid();
  void set_allocated_datasetid(std::string* value);

  private:
  const std::string& _internal_datasetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_datasetid(
      const std::string& value);
  std::string* _internal_mutable_datasetid();

  public:
  // .dp.service.annotation.CommentAnnotation commentAnnotation = 10;
  bool has_commentannotation() const;
  private:
  bool _internal_has_commentannotation() const;

  public:
  void clear_commentannotation() ;
  const ::dp::service::annotation::CommentAnnotation& commentannotation() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::CommentAnnotation* release_commentannotation();
  ::dp::service::annotation::CommentAnnotation* mutable_commentannotation();
  void set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value);
  void unsafe_arena_set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value);
  ::dp::service::annotation::CommentAnnotation* unsafe_arena_release_commentannotation();

  private:
  const ::dp::service::annotation::CommentAnnotation& _internal_commentannotation() const;
  ::dp::service::annotation::CommentAnnotation* _internal_mutable_commentannotation();

  public:
  void clear_annotation();
  AnnotationCase annotation_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateAnnotationRequest)
 private:
  class _Internal;
  void set_has_commentannotation();
  inline bool has_annotation() const;
  inline void clear_has_annotation();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateAnnotationRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAnnotationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ownerid_;
    ::google::protobuf::internal::ArenaStringPtr datasetid_;
    union AnnotationUnion {
      constexpr AnnotationUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::annotation::CommentAnnotation* commentannotation_;
    } annotation_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsRequest) */ {
 public:
  inline QueryDataSetsRequest() : QueryDataSetsRequest(nullptr) {}
  ~QueryDataSetsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsRequest(const QueryDataSetsRequest& from) : QueryDataSetsRequest(nullptr, from) {}
  inline QueryDataSetsRequest(QueryDataSetsRequest&& from) noexcept
      : QueryDataSetsRequest(nullptr, std::move(from)) {}
  inline QueryDataSetsRequest& operator=(const QueryDataSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsRequest& operator=(QueryDataSetsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataSetsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsRequest*>(
        &_QueryDataSetsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryDataSetsRequest& a, QueryDataSetsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsRequest& from) { QueryDataSetsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsRequest"; }

 protected:
  explicit QueryDataSetsRequest(::google::protobuf::Arena* arena);
  QueryDataSetsRequest(::google::protobuf::Arena* arena, const QueryDataSetsRequest& from);
  QueryDataSetsRequest(::google::protobuf::Arena* arena, QueryDataSetsRequest&& from) noexcept
      : QueryDataSetsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QueryDataSetsCriterion = QueryDataSetsRequest_QueryDataSetsCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kCriteriaFieldNumber = 1,
  };
  // repeated .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion criteria = 1;
  int criteria_size() const;
  private:
  int _internal_criteria_size() const;

  public:
  void clear_criteria() ;
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion* mutable_criteria(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>* mutable_criteria();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>& _internal_criteria() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>* _internal_mutable_criteria();
  public:
  const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion& criteria(int index) const;
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion* add_criteria();
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>& criteria() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion > criteria_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsRequest) */ {
 public:
  inline QueryAnnotationsRequest() : QueryAnnotationsRequest(nullptr) {}
  ~QueryAnnotationsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsRequest(const QueryAnnotationsRequest& from) : QueryAnnotationsRequest(nullptr, from) {}
  inline QueryAnnotationsRequest(QueryAnnotationsRequest&& from) noexcept
      : QueryAnnotationsRequest(nullptr, std::move(from)) {}
  inline QueryAnnotationsRequest& operator=(const QueryAnnotationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsRequest& operator=(QueryAnnotationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnotationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsRequest*>(
        &_QueryAnnotationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryAnnotationsRequest& a, QueryAnnotationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsRequest& from) { QueryAnnotationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsRequest"; }

 protected:
  explicit QueryAnnotationsRequest(::google::protobuf::Arena* arena);
  QueryAnnotationsRequest(::google::protobuf::Arena* arena, const QueryAnnotationsRequest& from);
  QueryAnnotationsRequest(::google::protobuf::Arena* arena, QueryAnnotationsRequest&& from) noexcept
      : QueryAnnotationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QueryAnnotationsCriterion = QueryAnnotationsRequest_QueryAnnotationsCriterion;

  // accessors -------------------------------------------------------
  enum : int {
    kCriteriaFieldNumber = 1,
  };
  // repeated .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion criteria = 1;
  int criteria_size() const;
  private:
  int _internal_criteria_size() const;

  public:
  void clear_criteria() ;
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion* mutable_criteria(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>* mutable_criteria();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>& _internal_criteria() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>* _internal_mutable_criteria();
  public:
  const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion& criteria(int index) const;
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion* add_criteria();
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>& criteria() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion > criteria_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class DataSet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.DataSet) */ {
 public:
  inline DataSet() : DataSet(nullptr) {}
  ~DataSet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataSet(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataSet(const DataSet& from) : DataSet(nullptr, from) {}
  inline DataSet(DataSet&& from) noexcept
      : DataSet(nullptr, std::move(from)) {}
  inline DataSet& operator=(const DataSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataSet& operator=(DataSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataSet* internal_default_instance() {
    return reinterpret_cast<const DataSet*>(
        &_DataSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(DataSet& a, DataSet& b) { a.Swap(&b); }
  inline void Swap(DataSet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataSet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DataSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataSet& from) { DataSet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataSet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.DataSet"; }

 protected:
  explicit DataSet(::google::protobuf::Arena* arena);
  DataSet(::google::protobuf::Arena* arena, const DataSet& from);
  DataSet(::google::protobuf::Arena* arena, DataSet&& from) noexcept
      : DataSet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataBlocksFieldNumber = 5,
    kDataSetIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kOwnerIdFieldNumber = 3,
    kDescriptionFieldNumber = 4,
  };
  // repeated .dp.service.annotation.DataBlock dataBlocks = 5;
  int datablocks_size() const;
  private:
  int _internal_datablocks_size() const;

  public:
  void clear_datablocks() ;
  ::dp::service::annotation::DataBlock* mutable_datablocks(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>* mutable_datablocks();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>& _internal_datablocks() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>* _internal_mutable_datablocks();
  public:
  const ::dp::service::annotation::DataBlock& datablocks(int index) const;
  ::dp::service::annotation::DataBlock* add_datablocks();
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>& datablocks() const;
  // string dataSetId = 1;
  void clear_datasetid() ;
  const std::string& datasetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_datasetid(Arg_&& arg, Args_... args);
  std::string* mutable_datasetid();
  PROTOBUF_NODISCARD std::string* release_datasetid();
  void set_allocated_datasetid(std::string* value);

  private:
  const std::string& _internal_datasetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_datasetid(
      const std::string& value);
  std::string* _internal_mutable_datasetid();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string ownerId = 3;
  void clear_ownerid() ;
  const std::string& ownerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerid(Arg_&& arg, Args_... args);
  std::string* mutable_ownerid();
  PROTOBUF_NODISCARD std::string* release_ownerid();
  void set_allocated_ownerid(std::string* value);

  private:
  const std::string& _internal_ownerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ownerid(
      const std::string& value);
  std::string* _internal_mutable_ownerid();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.DataSet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DataSet_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataSet& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::annotation::DataBlock > datablocks_;
    ::google::protobuf::internal::ArenaStringPtr datasetid_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr ownerid_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsResponse_DataSetsResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsResponse.DataSetsResult) */ {
 public:
  inline QueryDataSetsResponse_DataSetsResult() : QueryDataSetsResponse_DataSetsResult(nullptr) {}
  ~QueryDataSetsResponse_DataSetsResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsResponse_DataSetsResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsResponse_DataSetsResult(const QueryDataSetsResponse_DataSetsResult& from) : QueryDataSetsResponse_DataSetsResult(nullptr, from) {}
  inline QueryDataSetsResponse_DataSetsResult(QueryDataSetsResponse_DataSetsResult&& from) noexcept
      : QueryDataSetsResponse_DataSetsResult(nullptr, std::move(from)) {}
  inline QueryDataSetsResponse_DataSetsResult& operator=(const QueryDataSetsResponse_DataSetsResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsResponse_DataSetsResult& operator=(QueryDataSetsResponse_DataSetsResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsResponse_DataSetsResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDataSetsResponse_DataSetsResult* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsResponse_DataSetsResult*>(
        &_QueryDataSetsResponse_DataSetsResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryDataSetsResponse_DataSetsResult& a, QueryDataSetsResponse_DataSetsResult& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsResponse_DataSetsResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsResponse_DataSetsResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsResponse_DataSetsResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsResponse_DataSetsResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsResponse_DataSetsResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsResponse_DataSetsResult& from) { QueryDataSetsResponse_DataSetsResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsResponse_DataSetsResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsResponse.DataSetsResult"; }

 protected:
  explicit QueryDataSetsResponse_DataSetsResult(::google::protobuf::Arena* arena);
  QueryDataSetsResponse_DataSetsResult(::google::protobuf::Arena* arena, const QueryDataSetsResponse_DataSetsResult& from);
  QueryDataSetsResponse_DataSetsResult(::google::protobuf::Arena* arena, QueryDataSetsResponse_DataSetsResult&& from) noexcept
      : QueryDataSetsResponse_DataSetsResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataSetsFieldNumber = 1,
  };
  // repeated .dp.service.annotation.DataSet dataSets = 1;
  int datasets_size() const;
  private:
  int _internal_datasets_size() const;

  public:
  void clear_datasets() ;
  ::dp::service::annotation::DataSet* mutable_datasets(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>* mutable_datasets();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>& _internal_datasets() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>* _internal_mutable_datasets();
  public:
  const ::dp::service::annotation::DataSet& datasets(int index) const;
  ::dp::service::annotation::DataSet* add_datasets();
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>& datasets() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsResponse.DataSetsResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsResponse_DataSetsResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsResponse_DataSetsResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::annotation::DataSet > datasets_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsResponse_AnnotationsResult_Annotation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation) */ {
 public:
  inline QueryAnnotationsResponse_AnnotationsResult_Annotation() : QueryAnnotationsResponse_AnnotationsResult_Annotation(nullptr) {}
  ~QueryAnnotationsResponse_AnnotationsResult_Annotation() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsResponse_AnnotationsResult_Annotation(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsResponse_AnnotationsResult_Annotation(const QueryAnnotationsResponse_AnnotationsResult_Annotation& from) : QueryAnnotationsResponse_AnnotationsResult_Annotation(nullptr, from) {}
  inline QueryAnnotationsResponse_AnnotationsResult_Annotation(QueryAnnotationsResponse_AnnotationsResult_Annotation&& from) noexcept
      : QueryAnnotationsResponse_AnnotationsResult_Annotation(nullptr, std::move(from)) {}
  inline QueryAnnotationsResponse_AnnotationsResult_Annotation& operator=(const QueryAnnotationsResponse_AnnotationsResult_Annotation& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsResponse_AnnotationsResult_Annotation& operator=(QueryAnnotationsResponse_AnnotationsResult_Annotation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsResponse_AnnotationsResult_Annotation& default_instance() {
    return *internal_default_instance();
  }
  enum AnnotationCase {
    kCommentAnnotation = 10,
    ANNOTATION_NOT_SET = 0,
  };
  static inline const QueryAnnotationsResponse_AnnotationsResult_Annotation* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsResponse_AnnotationsResult_Annotation*>(
        &_QueryAnnotationsResponse_AnnotationsResult_Annotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryAnnotationsResponse_AnnotationsResult_Annotation& a, QueryAnnotationsResponse_AnnotationsResult_Annotation& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsResponse_AnnotationsResult_Annotation* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsResponse_AnnotationsResult_Annotation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsResponse_AnnotationsResult_Annotation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsResponse_AnnotationsResult_Annotation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsResponse_AnnotationsResult_Annotation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsResponse_AnnotationsResult_Annotation& from) { QueryAnnotationsResponse_AnnotationsResult_Annotation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsResponse_AnnotationsResult_Annotation* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation"; }

 protected:
  explicit QueryAnnotationsResponse_AnnotationsResult_Annotation(::google::protobuf::Arena* arena);
  QueryAnnotationsResponse_AnnotationsResult_Annotation(::google::protobuf::Arena* arena, const QueryAnnotationsResponse_AnnotationsResult_Annotation& from);
  QueryAnnotationsResponse_AnnotationsResult_Annotation(::google::protobuf::Arena* arena, QueryAnnotationsResponse_AnnotationsResult_Annotation&& from) noexcept
      : QueryAnnotationsResponse_AnnotationsResult_Annotation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnotationIdFieldNumber = 1,
    kOwnerIdFieldNumber = 2,
    kDataSetIdFieldNumber = 3,
    kDataSetFieldNumber = 4,
    kCommentAnnotationFieldNumber = 10,
  };
  // string annotationId = 1;
  void clear_annotationid() ;
  const std::string& annotationid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_annotationid(Arg_&& arg, Args_... args);
  std::string* mutable_annotationid();
  PROTOBUF_NODISCARD std::string* release_annotationid();
  void set_allocated_annotationid(std::string* value);

  private:
  const std::string& _internal_annotationid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_annotationid(
      const std::string& value);
  std::string* _internal_mutable_annotationid();

  public:
  // string ownerId = 2;
  void clear_ownerid() ;
  const std::string& ownerid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerid(Arg_&& arg, Args_... args);
  std::string* mutable_ownerid();
  PROTOBUF_NODISCARD std::string* release_ownerid();
  void set_allocated_ownerid(std::string* value);

  private:
  const std::string& _internal_ownerid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ownerid(
      const std::string& value);
  std::string* _internal_mutable_ownerid();

  public:
  // string dataSetId = 3;
  void clear_datasetid() ;
  const std::string& datasetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_datasetid(Arg_&& arg, Args_... args);
  std::string* mutable_datasetid();
  PROTOBUF_NODISCARD std::string* release_datasetid();
  void set_allocated_datasetid(std::string* value);

  private:
  const std::string& _internal_datasetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_datasetid(
      const std::string& value);
  std::string* _internal_mutable_datasetid();

  public:
  // .dp.service.annotation.DataSet dataSet = 4;
  bool has_dataset() const;
  void clear_dataset() ;
  const ::dp::service::annotation::DataSet& dataset() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::DataSet* release_dataset();
  ::dp::service::annotation::DataSet* mutable_dataset();
  void set_allocated_dataset(::dp::service::annotation::DataSet* value);
  void unsafe_arena_set_allocated_dataset(::dp::service::annotation::DataSet* value);
  ::dp::service::annotation::DataSet* unsafe_arena_release_dataset();

  private:
  const ::dp::service::annotation::DataSet& _internal_dataset() const;
  ::dp::service::annotation::DataSet* _internal_mutable_dataset();

  public:
  // .dp.service.annotation.CommentAnnotation commentAnnotation = 10;
  bool has_commentannotation() const;
  private:
  bool _internal_has_commentannotation() const;

  public:
  void clear_commentannotation() ;
  const ::dp::service::annotation::CommentAnnotation& commentannotation() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::CommentAnnotation* release_commentannotation();
  ::dp::service::annotation::CommentAnnotation* mutable_commentannotation();
  void set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value);
  void unsafe_arena_set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value);
  ::dp::service::annotation::CommentAnnotation* unsafe_arena_release_commentannotation();

  private:
  const ::dp::service::annotation::CommentAnnotation& _internal_commentannotation() const;
  ::dp::service::annotation::CommentAnnotation* _internal_mutable_commentannotation();

  public:
  void clear_annotation();
  AnnotationCase annotation_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation)
 private:
  class _Internal;
  void set_has_commentannotation();
  inline bool has_annotation() const;
  inline void clear_has_annotation();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 2,
      112, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsResponse_AnnotationsResult_Annotation_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsResponse_AnnotationsResult_Annotation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr annotationid_;
    ::google::protobuf::internal::ArenaStringPtr ownerid_;
    ::google::protobuf::internal::ArenaStringPtr datasetid_;
    ::dp::service::annotation::DataSet* dataset_;
    union AnnotationUnion {
      constexpr AnnotationUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::dp::service::annotation::CommentAnnotation* commentannotation_;
    } annotation_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class CreateDataSetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.CreateDataSetRequest) */ {
 public:
  inline CreateDataSetRequest() : CreateDataSetRequest(nullptr) {}
  ~CreateDataSetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateDataSetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateDataSetRequest(const CreateDataSetRequest& from) : CreateDataSetRequest(nullptr, from) {}
  inline CreateDataSetRequest(CreateDataSetRequest&& from) noexcept
      : CreateDataSetRequest(nullptr, std::move(from)) {}
  inline CreateDataSetRequest& operator=(const CreateDataSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDataSetRequest& operator=(CreateDataSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateDataSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateDataSetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDataSetRequest*>(
        &_CreateDataSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateDataSetRequest& a, CreateDataSetRequest& b) { a.Swap(&b); }
  inline void Swap(CreateDataSetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDataSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateDataSetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateDataSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateDataSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateDataSetRequest& from) { CreateDataSetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateDataSetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.CreateDataSetRequest"; }

 protected:
  explicit CreateDataSetRequest(::google::protobuf::Arena* arena);
  CreateDataSetRequest(::google::protobuf::Arena* arena, const CreateDataSetRequest& from);
  CreateDataSetRequest(::google::protobuf::Arena* arena, CreateDataSetRequest&& from) noexcept
      : CreateDataSetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataSetFieldNumber = 1,
  };
  // .dp.service.annotation.DataSet dataSet = 1;
  bool has_dataset() const;
  void clear_dataset() ;
  const ::dp::service::annotation::DataSet& dataset() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::DataSet* release_dataset();
  ::dp::service::annotation::DataSet* mutable_dataset();
  void set_allocated_dataset(::dp::service::annotation::DataSet* value);
  void unsafe_arena_set_allocated_dataset(::dp::service::annotation::DataSet* value);
  ::dp::service::annotation::DataSet* unsafe_arena_release_dataset();

  private:
  const ::dp::service::annotation::DataSet& _internal_dataset() const;
  ::dp::service::annotation::DataSet* _internal_mutable_dataset();

  public:
  // @@protoc_insertion_point(class_scope:dp.service.annotation.CreateDataSetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateDataSetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateDataSetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::dp::service::annotation::DataSet* dataset_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryDataSetsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryDataSetsResponse) */ {
 public:
  inline QueryDataSetsResponse() : QueryDataSetsResponse(nullptr) {}
  ~QueryDataSetsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDataSetsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDataSetsResponse(const QueryDataSetsResponse& from) : QueryDataSetsResponse(nullptr, from) {}
  inline QueryDataSetsResponse(QueryDataSetsResponse&& from) noexcept
      : QueryDataSetsResponse(nullptr, std::move(from)) {}
  inline QueryDataSetsResponse& operator=(const QueryDataSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDataSetsResponse& operator=(QueryDataSetsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDataSetsResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kDataSetsResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryDataSetsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDataSetsResponse*>(
        &_QueryDataSetsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryDataSetsResponse& a, QueryDataSetsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDataSetsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDataSetsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDataSetsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryDataSetsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDataSetsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDataSetsResponse& from) { QueryDataSetsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryDataSetsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryDataSetsResponse"; }

 protected:
  explicit QueryDataSetsResponse(::google::protobuf::Arena* arena);
  QueryDataSetsResponse(::google::protobuf::Arena* arena, const QueryDataSetsResponse& from);
  QueryDataSetsResponse(::google::protobuf::Arena* arena, QueryDataSetsResponse&& from) noexcept
      : QueryDataSetsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DataSetsResult = QueryDataSetsResponse_DataSetsResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kDataSetsResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.annotation.QueryDataSetsResponse.DataSetsResult dataSetsResult = 11;
  bool has_datasetsresult() const;
  private:
  bool _internal_has_datasetsresult() const;

  public:
  void clear_datasetsresult() ;
  const ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult& datasetsresult() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* release_datasetsresult();
  ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* mutable_datasetsresult();
  void set_allocated_datasetsresult(::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* value);
  void unsafe_arena_set_allocated_datasetsresult(::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* value);
  ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* unsafe_arena_release_datasetsresult();

  private:
  const ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult& _internal_datasetsresult() const;
  ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* _internal_mutable_datasetsresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryDataSetsResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_datasetsresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryDataSetsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDataSetsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* datasetsresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsResponse_AnnotationsResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult) */ {
 public:
  inline QueryAnnotationsResponse_AnnotationsResult() : QueryAnnotationsResponse_AnnotationsResult(nullptr) {}
  ~QueryAnnotationsResponse_AnnotationsResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsResponse_AnnotationsResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsResponse_AnnotationsResult(const QueryAnnotationsResponse_AnnotationsResult& from) : QueryAnnotationsResponse_AnnotationsResult(nullptr, from) {}
  inline QueryAnnotationsResponse_AnnotationsResult(QueryAnnotationsResponse_AnnotationsResult&& from) noexcept
      : QueryAnnotationsResponse_AnnotationsResult(nullptr, std::move(from)) {}
  inline QueryAnnotationsResponse_AnnotationsResult& operator=(const QueryAnnotationsResponse_AnnotationsResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsResponse_AnnotationsResult& operator=(QueryAnnotationsResponse_AnnotationsResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsResponse_AnnotationsResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnotationsResponse_AnnotationsResult* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsResponse_AnnotationsResult*>(
        &_QueryAnnotationsResponse_AnnotationsResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(QueryAnnotationsResponse_AnnotationsResult& a, QueryAnnotationsResponse_AnnotationsResult& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsResponse_AnnotationsResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsResponse_AnnotationsResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsResponse_AnnotationsResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsResponse_AnnotationsResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsResponse_AnnotationsResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsResponse_AnnotationsResult& from) { QueryAnnotationsResponse_AnnotationsResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsResponse_AnnotationsResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult"; }

 protected:
  explicit QueryAnnotationsResponse_AnnotationsResult(::google::protobuf::Arena* arena);
  QueryAnnotationsResponse_AnnotationsResult(::google::protobuf::Arena* arena, const QueryAnnotationsResponse_AnnotationsResult& from);
  QueryAnnotationsResponse_AnnotationsResult(::google::protobuf::Arena* arena, QueryAnnotationsResponse_AnnotationsResult&& from) noexcept
      : QueryAnnotationsResponse_AnnotationsResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Annotation = QueryAnnotationsResponse_AnnotationsResult_Annotation;

  // accessors -------------------------------------------------------
  enum : int {
    kAnnotationsFieldNumber = 1,
  };
  // repeated .dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation annotations = 1;
  int annotations_size() const;
  private:
  int _internal_annotations_size() const;

  public:
  void clear_annotations() ;
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation* mutable_annotations(int index);
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>* mutable_annotations();

  private:
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>& _internal_annotations() const;
  ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>* _internal_mutable_annotations();
  public:
  const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation& annotations(int index) const;
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation* add_annotations();
  const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>& annotations() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsResponse_AnnotationsResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsResponse_AnnotationsResult& from_msg);
    ::google::protobuf::RepeatedPtrField< ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation > annotations_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnotationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dp.service.annotation.QueryAnnotationsResponse) */ {
 public:
  inline QueryAnnotationsResponse() : QueryAnnotationsResponse(nullptr) {}
  ~QueryAnnotationsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnotationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnotationsResponse(const QueryAnnotationsResponse& from) : QueryAnnotationsResponse(nullptr, from) {}
  inline QueryAnnotationsResponse(QueryAnnotationsResponse&& from) noexcept
      : QueryAnnotationsResponse(nullptr, std::move(from)) {}
  inline QueryAnnotationsResponse& operator=(const QueryAnnotationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnotationsResponse& operator=(QueryAnnotationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnotationsResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kExceptionalResult = 10,
    kAnnotationsResult = 11,
    RESULT_NOT_SET = 0,
  };
  static inline const QueryAnnotationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAnnotationsResponse*>(
        &_QueryAnnotationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(QueryAnnotationsResponse& a, QueryAnnotationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAnnotationsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnotationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnotationsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnotationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnotationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnotationsResponse& from) { QueryAnnotationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryAnnotationsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "dp.service.annotation.QueryAnnotationsResponse"; }

 protected:
  explicit QueryAnnotationsResponse(::google::protobuf::Arena* arena);
  QueryAnnotationsResponse(::google::protobuf::Arena* arena, const QueryAnnotationsResponse& from);
  QueryAnnotationsResponse(::google::protobuf::Arena* arena, QueryAnnotationsResponse&& from) noexcept
      : QueryAnnotationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AnnotationsResult = QueryAnnotationsResponse_AnnotationsResult;

  // accessors -------------------------------------------------------
  enum : int {
    kResponseTimeFieldNumber = 1,
    kExceptionalResultFieldNumber = 10,
    kAnnotationsResultFieldNumber = 11,
  };
  // .Timestamp responseTime = 1;
  bool has_responsetime() const;
  void clear_responsetime() ;
  const ::Timestamp& responsetime() const;
  PROTOBUF_NODISCARD ::Timestamp* release_responsetime();
  ::Timestamp* mutable_responsetime();
  void set_allocated_responsetime(::Timestamp* value);
  void unsafe_arena_set_allocated_responsetime(::Timestamp* value);
  ::Timestamp* unsafe_arena_release_responsetime();

  private:
  const ::Timestamp& _internal_responsetime() const;
  ::Timestamp* _internal_mutable_responsetime();

  public:
  // .ExceptionalResult exceptionalResult = 10;
  bool has_exceptionalresult() const;
  private:
  bool _internal_has_exceptionalresult() const;

  public:
  void clear_exceptionalresult() ;
  const ::ExceptionalResult& exceptionalresult() const;
  PROTOBUF_NODISCARD ::ExceptionalResult* release_exceptionalresult();
  ::ExceptionalResult* mutable_exceptionalresult();
  void set_allocated_exceptionalresult(::ExceptionalResult* value);
  void unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value);
  ::ExceptionalResult* unsafe_arena_release_exceptionalresult();

  private:
  const ::ExceptionalResult& _internal_exceptionalresult() const;
  ::ExceptionalResult* _internal_mutable_exceptionalresult();

  public:
  // .dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult annotationsResult = 11;
  bool has_annotationsresult() const;
  private:
  bool _internal_has_annotationsresult() const;

  public:
  void clear_annotationsresult() ;
  const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult& annotationsresult() const;
  PROTOBUF_NODISCARD ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* release_annotationsresult();
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* mutable_annotationsresult();
  void set_allocated_annotationsresult(::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* value);
  void unsafe_arena_set_allocated_annotationsresult(::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* value);
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* unsafe_arena_release_annotationsresult();

  private:
  const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult& _internal_annotationsresult() const;
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* _internal_mutable_annotationsresult();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:dp.service.annotation.QueryAnnotationsResponse)
 private:
  class _Internal;
  void set_has_exceptionalresult();
  void set_has_annotationsresult();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryAnnotationsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnotationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Timestamp* responsetime_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ExceptionalResult* exceptionalresult_;
      ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* annotationsresult_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_annotation_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateDataSetRequest

// .dp.service.annotation.DataSet dataSet = 1;
inline bool CreateDataSetRequest::has_dataset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dataset_ != nullptr);
  return value;
}
inline void CreateDataSetRequest::clear_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ != nullptr) _impl_.dataset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dp::service::annotation::DataSet& CreateDataSetRequest::_internal_dataset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::dp::service::annotation::DataSet* p = _impl_.dataset_;
  return p != nullptr ? *p : reinterpret_cast<const ::dp::service::annotation::DataSet&>(::dp::service::annotation::_DataSet_default_instance_);
}
inline const ::dp::service::annotation::DataSet& CreateDataSetRequest::dataset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateDataSetRequest.dataSet)
  return _internal_dataset();
}
inline void CreateDataSetRequest::unsafe_arena_set_allocated_dataset(::dp::service::annotation::DataSet* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dataset_);
  }
  _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateDataSetRequest.dataSet)
}
inline ::dp::service::annotation::DataSet* CreateDataSetRequest::release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dp::service::annotation::DataSet* released = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dp::service::annotation::DataSet* CreateDataSetRequest::unsafe_arena_release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateDataSetRequest.dataSet)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dp::service::annotation::DataSet* temp = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  return temp;
}
inline ::dp::service::annotation::DataSet* CreateDataSetRequest::_internal_mutable_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::DataSet>(GetArena());
    _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(p);
  }
  return _impl_.dataset_;
}
inline ::dp::service::annotation::DataSet* CreateDataSetRequest::mutable_dataset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::dp::service::annotation::DataSet* _msg = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateDataSetRequest.dataSet)
  return _msg;
}
inline void CreateDataSetRequest::set_allocated_dataset(::dp::service::annotation::DataSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dataset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateDataSetRequest.dataSet)
}

// -------------------------------------------------------------------

// CreateDataSetResponse_CreateDataSetResult

// string dataSetId = 1;
inline void CreateDataSetResponse_CreateDataSetResult::clear_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.ClearToEmpty();
}
inline const std::string& CreateDataSetResponse_CreateDataSetResult::datasetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult.dataSetId)
  return _internal_datasetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateDataSetResponse_CreateDataSetResult::set_datasetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult.dataSetId)
}
inline std::string* CreateDataSetResponse_CreateDataSetResult::mutable_datasetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_datasetid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult.dataSetId)
  return _s;
}
inline const std::string& CreateDataSetResponse_CreateDataSetResult::_internal_datasetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datasetid_.Get();
}
inline void CreateDataSetResponse_CreateDataSetResult::_internal_set_datasetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(value, GetArena());
}
inline std::string* CreateDataSetResponse_CreateDataSetResult::_internal_mutable_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.datasetid_.Mutable( GetArena());
}
inline std::string* CreateDataSetResponse_CreateDataSetResult::release_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult.dataSetId)
  return _impl_.datasetid_.Release();
}
inline void CreateDataSetResponse_CreateDataSetResult::set_allocated_datasetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.datasetid_.IsDefault()) {
          _impl_.datasetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateDataSetResponse.CreateDataSetResult.dataSetId)
}

// -------------------------------------------------------------------

// CreateDataSetResponse

// .Timestamp responseTime = 1;
inline bool CreateDataSetResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& CreateDataSetResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& CreateDataSetResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateDataSetResponse.responseTime)
  return _internal_responsetime();
}
inline void CreateDataSetResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateDataSetResponse.responseTime)
}
inline ::Timestamp* CreateDataSetResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* CreateDataSetResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateDataSetResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* CreateDataSetResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* CreateDataSetResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateDataSetResponse.responseTime)
  return _msg;
}
inline void CreateDataSetResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateDataSetResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool CreateDataSetResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool CreateDataSetResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void CreateDataSetResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* CreateDataSetResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateDataSetResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& CreateDataSetResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& CreateDataSetResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateDataSetResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* CreateDataSetResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.CreateDataSetResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateDataSetResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateDataSetResponse.exceptionalResult)
}
inline ::ExceptionalResult* CreateDataSetResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* CreateDataSetResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateDataSetResponse.exceptionalResult)
  return _msg;
}

// .dp.service.annotation.CreateDataSetResponse.CreateDataSetResult createDataSetResult = 11;
inline bool CreateDataSetResponse::has_createdatasetresult() const {
  return result_case() == kCreateDataSetResult;
}
inline bool CreateDataSetResponse::_internal_has_createdatasetresult() const {
  return result_case() == kCreateDataSetResult;
}
inline void CreateDataSetResponse::set_has_createdatasetresult() {
  _impl_._oneof_case_[0] = kCreateDataSetResult;
}
inline void CreateDataSetResponse::clear_createdatasetresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kCreateDataSetResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.createdatasetresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.createdatasetresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* CreateDataSetResponse::release_createdatasetresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateDataSetResponse.createDataSetResult)
  if (result_case() == kCreateDataSetResult) {
    clear_has_result();
    auto* temp = _impl_.result_.createdatasetresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.createdatasetresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult& CreateDataSetResponse::_internal_createdatasetresult() const {
  return result_case() == kCreateDataSetResult ? *_impl_.result_.createdatasetresult_ : reinterpret_cast<::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult&>(::dp::service::annotation::_CreateDataSetResponse_CreateDataSetResult_default_instance_);
}
inline const ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult& CreateDataSetResponse::createdatasetresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateDataSetResponse.createDataSetResult)
  return _internal_createdatasetresult();
}
inline ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* CreateDataSetResponse::unsafe_arena_release_createdatasetresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.CreateDataSetResponse.createDataSetResult)
  if (result_case() == kCreateDataSetResult) {
    clear_has_result();
    auto* temp = _impl_.result_.createdatasetresult_;
    _impl_.result_.createdatasetresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateDataSetResponse::unsafe_arena_set_allocated_createdatasetresult(::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_createdatasetresult();
    _impl_.result_.createdatasetresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateDataSetResponse.createDataSetResult)
}
inline ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* CreateDataSetResponse::_internal_mutable_createdatasetresult() {
  if (result_case() != kCreateDataSetResult) {
    clear_result();
    set_has_createdatasetresult();
    _impl_.result_.createdatasetresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult>(GetArena());
  }
  return _impl_.result_.createdatasetresult_;
}
inline ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* CreateDataSetResponse::mutable_createdatasetresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::CreateDataSetResponse_CreateDataSetResult* _msg = _internal_mutable_createdatasetresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateDataSetResponse.createDataSetResult)
  return _msg;
}

inline bool CreateDataSetResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void CreateDataSetResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline CreateDataSetResponse::ResultCase CreateDataSetResponse::result_case() const {
  return CreateDataSetResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion

// string ownerId = 1;
inline void QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::clear_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.ClearToEmpty();
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::ownerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion.ownerId)
  return _internal_ownerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::set_ownerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion.ownerId)
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::mutable_ownerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion.ownerId)
  return _s;
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::_internal_ownerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerid_.Get();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::_internal_set_ownerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(value, GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::_internal_mutable_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ownerid_.Mutable( GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::release_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion.ownerId)
  return _impl_.ownerid_.Release();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion::set_allocated_ownerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ownerid_.IsDefault()) {
          _impl_.ownerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion.ownerId)
}

// -------------------------------------------------------------------

// QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion

// string namePattern = 1;
inline void QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::clear_namepattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.namepattern_.ClearToEmpty();
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::namepattern() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion.namePattern)
  return _internal_namepattern();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::set_namepattern(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.namepattern_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion.namePattern)
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::mutable_namepattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_namepattern();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion.namePattern)
  return _s;
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::_internal_namepattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.namepattern_.Get();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::_internal_set_namepattern(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.namepattern_.Set(value, GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::_internal_mutable_namepattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.namepattern_.Mutable( GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::release_namepattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion.namePattern)
  return _impl_.namepattern_.Release();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion::set_allocated_namepattern(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.namepattern_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.namepattern_.IsDefault()) {
          _impl_.namepattern_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion.namePattern)
}

// -------------------------------------------------------------------

// QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion

// string descriptionText = 1;
inline void QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::clear_descriptiontext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.descriptiontext_.ClearToEmpty();
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::descriptiontext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion.descriptionText)
  return _internal_descriptiontext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::set_descriptiontext(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.descriptiontext_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion.descriptionText)
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::mutable_descriptiontext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_descriptiontext();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion.descriptionText)
  return _s;
}
inline const std::string& QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::_internal_descriptiontext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.descriptiontext_.Get();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::_internal_set_descriptiontext(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.descriptiontext_.Set(value, GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::_internal_mutable_descriptiontext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.descriptiontext_.Mutable( GetArena());
}
inline std::string* QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::release_descriptiontext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion.descriptionText)
  return _impl_.descriptiontext_.Release();
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion::set_allocated_descriptiontext(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.descriptiontext_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.descriptiontext_.IsDefault()) {
          _impl_.descriptiontext_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion.descriptionText)
}

// -------------------------------------------------------------------

// QueryDataSetsRequest_QueryDataSetsCriterion

// .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.OwnerCriterion ownerCriterion = 10;
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::has_ownercriterion() const {
  return criterion_case() == kOwnerCriterion;
}
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::_internal_has_ownercriterion() const {
  return criterion_case() == kOwnerCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::set_has_ownercriterion() {
  _impl_._oneof_case_[0] = kOwnerCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::clear_ownercriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kOwnerCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.ownercriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.ownercriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::release_ownercriterion() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.ownerCriterion)
  if (criterion_case() == kOwnerCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.ownercriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.ownercriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::_internal_ownercriterion() const {
  return criterion_case() == kOwnerCriterion ? *_impl_.criterion_.ownercriterion_ : reinterpret_cast<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion&>(::dp::service::annotation::_QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion_default_instance_);
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::ownercriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.ownerCriterion)
  return _internal_ownercriterion();
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_release_ownercriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.ownerCriterion)
  if (criterion_case() == kOwnerCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.ownercriterion_;
    _impl_.criterion_.ownercriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_set_allocated_ownercriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_ownercriterion();
    _impl_.criterion_.ownercriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.ownerCriterion)
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::_internal_mutable_ownercriterion() {
  if (criterion_case() != kOwnerCriterion) {
    clear_criterion();
    set_has_ownercriterion();
    _impl_.criterion_.ownercriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion>(GetArena());
  }
  return _impl_.criterion_.ownercriterion_;
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::mutable_ownercriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_OwnerCriterion* _msg = _internal_mutable_ownercriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.ownerCriterion)
  return _msg;
}

// .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.NameCriterion nameCriterion = 11;
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::has_namecriterion() const {
  return criterion_case() == kNameCriterion;
}
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::_internal_has_namecriterion() const {
  return criterion_case() == kNameCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::set_has_namecriterion() {
  _impl_._oneof_case_[0] = kNameCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::clear_namecriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kNameCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.namecriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.namecriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::release_namecriterion() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.nameCriterion)
  if (criterion_case() == kNameCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.namecriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.namecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::_internal_namecriterion() const {
  return criterion_case() == kNameCriterion ? *_impl_.criterion_.namecriterion_ : reinterpret_cast<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion&>(::dp::service::annotation::_QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion_default_instance_);
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::namecriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.nameCriterion)
  return _internal_namecriterion();
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_release_namecriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.nameCriterion)
  if (criterion_case() == kNameCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.namecriterion_;
    _impl_.criterion_.namecriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_set_allocated_namecriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_namecriterion();
    _impl_.criterion_.namecriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.nameCriterion)
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::_internal_mutable_namecriterion() {
  if (criterion_case() != kNameCriterion) {
    clear_criterion();
    set_has_namecriterion();
    _impl_.criterion_.namecriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion>(GetArena());
  }
  return _impl_.criterion_.namecriterion_;
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::mutable_namecriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_NameCriterion* _msg = _internal_mutable_namecriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.nameCriterion)
  return _msg;
}

// .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.DescriptionCriterion descriptionCriterion = 12;
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::has_descriptioncriterion() const {
  return criterion_case() == kDescriptionCriterion;
}
inline bool QueryDataSetsRequest_QueryDataSetsCriterion::_internal_has_descriptioncriterion() const {
  return criterion_case() == kDescriptionCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::set_has_descriptioncriterion() {
  _impl_._oneof_case_[0] = kDescriptionCriterion;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::clear_descriptioncriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kDescriptionCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.descriptioncriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.descriptioncriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::release_descriptioncriterion() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.descriptionCriterion)
  if (criterion_case() == kDescriptionCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.descriptioncriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.descriptioncriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::_internal_descriptioncriterion() const {
  return criterion_case() == kDescriptionCriterion ? *_impl_.criterion_.descriptioncriterion_ : reinterpret_cast<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion&>(::dp::service::annotation::_QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion_default_instance_);
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion& QueryDataSetsRequest_QueryDataSetsCriterion::descriptioncriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.descriptionCriterion)
  return _internal_descriptioncriterion();
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_release_descriptioncriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.descriptionCriterion)
  if (criterion_case() == kDescriptionCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.descriptioncriterion_;
    _impl_.criterion_.descriptioncriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::unsafe_arena_set_allocated_descriptioncriterion(::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_descriptioncriterion();
    _impl_.criterion_.descriptioncriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.descriptionCriterion)
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::_internal_mutable_descriptioncriterion() {
  if (criterion_case() != kDescriptionCriterion) {
    clear_criterion();
    set_has_descriptioncriterion();
    _impl_.criterion_.descriptioncriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion>(GetArena());
  }
  return _impl_.criterion_.descriptioncriterion_;
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* QueryDataSetsRequest_QueryDataSetsCriterion::mutable_descriptioncriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion_DescriptionCriterion* _msg = _internal_mutable_descriptioncriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion.descriptionCriterion)
  return _msg;
}

inline bool QueryDataSetsRequest_QueryDataSetsCriterion::has_criterion() const {
  return criterion_case() != CRITERION_NOT_SET;
}
inline void QueryDataSetsRequest_QueryDataSetsCriterion::clear_has_criterion() {
  _impl_._oneof_case_[0] = CRITERION_NOT_SET;
}
inline QueryDataSetsRequest_QueryDataSetsCriterion::CriterionCase QueryDataSetsRequest_QueryDataSetsCriterion::criterion_case() const {
  return QueryDataSetsRequest_QueryDataSetsCriterion::CriterionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryDataSetsRequest

// repeated .dp.service.annotation.QueryDataSetsRequest.QueryDataSetsCriterion criteria = 1;
inline int QueryDataSetsRequest::_internal_criteria_size() const {
  return _internal_criteria().size();
}
inline int QueryDataSetsRequest::criteria_size() const {
  return _internal_criteria_size();
}
inline void QueryDataSetsRequest::clear_criteria() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.criteria_.Clear();
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion* QueryDataSetsRequest::mutable_criteria(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsRequest.criteria)
  return _internal_mutable_criteria()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>* QueryDataSetsRequest::mutable_criteria()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.QueryDataSetsRequest.criteria)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_criteria();
}
inline const ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion& QueryDataSetsRequest::criteria(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsRequest.criteria)
  return _internal_criteria().Get(index);
}
inline ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion* QueryDataSetsRequest::add_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion* _add = _internal_mutable_criteria()->Add();
  // @@protoc_insertion_point(field_add:dp.service.annotation.QueryDataSetsRequest.criteria)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>& QueryDataSetsRequest::criteria() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.QueryDataSetsRequest.criteria)
  return _internal_criteria();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>&
QueryDataSetsRequest::_internal_criteria() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.criteria_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryDataSetsRequest_QueryDataSetsCriterion>*
QueryDataSetsRequest::_internal_mutable_criteria() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.criteria_;
}

// -------------------------------------------------------------------

// QueryDataSetsResponse_DataSetsResult

// repeated .dp.service.annotation.DataSet dataSets = 1;
inline int QueryDataSetsResponse_DataSetsResult::_internal_datasets_size() const {
  return _internal_datasets().size();
}
inline int QueryDataSetsResponse_DataSetsResult::datasets_size() const {
  return _internal_datasets_size();
}
inline void QueryDataSetsResponse_DataSetsResult::clear_datasets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasets_.Clear();
}
inline ::dp::service::annotation::DataSet* QueryDataSetsResponse_DataSetsResult::mutable_datasets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsResponse.DataSetsResult.dataSets)
  return _internal_mutable_datasets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>* QueryDataSetsResponse_DataSetsResult::mutable_datasets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.QueryDataSetsResponse.DataSetsResult.dataSets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_datasets();
}
inline const ::dp::service::annotation::DataSet& QueryDataSetsResponse_DataSetsResult::datasets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsResponse.DataSetsResult.dataSets)
  return _internal_datasets().Get(index);
}
inline ::dp::service::annotation::DataSet* QueryDataSetsResponse_DataSetsResult::add_datasets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::annotation::DataSet* _add = _internal_mutable_datasets()->Add();
  // @@protoc_insertion_point(field_add:dp.service.annotation.QueryDataSetsResponse.DataSetsResult.dataSets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>& QueryDataSetsResponse_DataSetsResult::datasets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.QueryDataSetsResponse.DataSetsResult.dataSets)
  return _internal_datasets();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>&
QueryDataSetsResponse_DataSetsResult::_internal_datasets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datasets_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataSet>*
QueryDataSetsResponse_DataSetsResult::_internal_mutable_datasets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.datasets_;
}

// -------------------------------------------------------------------

// QueryDataSetsResponse

// .Timestamp responseTime = 1;
inline bool QueryDataSetsResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryDataSetsResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryDataSetsResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryDataSetsResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsResponse.responseTime)
}
inline ::Timestamp* QueryDataSetsResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryDataSetsResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryDataSetsResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryDataSetsResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsResponse.responseTime)
  return _msg;
}
inline void QueryDataSetsResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryDataSetsResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryDataSetsResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryDataSetsResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryDataSetsResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryDataSetsResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryDataSetsResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryDataSetsResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryDataSetsResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryDataSetsResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataSetsResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryDataSetsResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryDataSetsResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsResponse.exceptionalResult)
  return _msg;
}

// .dp.service.annotation.QueryDataSetsResponse.DataSetsResult dataSetsResult = 11;
inline bool QueryDataSetsResponse::has_datasetsresult() const {
  return result_case() == kDataSetsResult;
}
inline bool QueryDataSetsResponse::_internal_has_datasetsresult() const {
  return result_case() == kDataSetsResult;
}
inline void QueryDataSetsResponse::set_has_datasetsresult() {
  _impl_._oneof_case_[0] = kDataSetsResult;
}
inline void QueryDataSetsResponse::clear_datasetsresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kDataSetsResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.datasetsresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.datasetsresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* QueryDataSetsResponse::release_datasetsresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryDataSetsResponse.dataSetsResult)
  if (result_case() == kDataSetsResult) {
    clear_has_result();
    auto* temp = _impl_.result_.datasetsresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.datasetsresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult& QueryDataSetsResponse::_internal_datasetsresult() const {
  return result_case() == kDataSetsResult ? *_impl_.result_.datasetsresult_ : reinterpret_cast<::dp::service::annotation::QueryDataSetsResponse_DataSetsResult&>(::dp::service::annotation::_QueryDataSetsResponse_DataSetsResult_default_instance_);
}
inline const ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult& QueryDataSetsResponse::datasetsresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryDataSetsResponse.dataSetsResult)
  return _internal_datasetsresult();
}
inline ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* QueryDataSetsResponse::unsafe_arena_release_datasetsresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryDataSetsResponse.dataSetsResult)
  if (result_case() == kDataSetsResult) {
    clear_has_result();
    auto* temp = _impl_.result_.datasetsresult_;
    _impl_.result_.datasetsresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryDataSetsResponse::unsafe_arena_set_allocated_datasetsresult(::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_datasetsresult();
    _impl_.result_.datasetsresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryDataSetsResponse.dataSetsResult)
}
inline ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* QueryDataSetsResponse::_internal_mutable_datasetsresult() {
  if (result_case() != kDataSetsResult) {
    clear_result();
    set_has_datasetsresult();
    _impl_.result_.datasetsresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryDataSetsResponse_DataSetsResult>(GetArena());
  }
  return _impl_.result_.datasetsresult_;
}
inline ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* QueryDataSetsResponse::mutable_datasetsresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryDataSetsResponse_DataSetsResult* _msg = _internal_mutable_datasetsresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryDataSetsResponse.dataSetsResult)
  return _msg;
}

inline bool QueryDataSetsResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryDataSetsResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryDataSetsResponse::ResultCase QueryDataSetsResponse::result_case() const {
  return QueryDataSetsResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CreateAnnotationRequest

// string ownerId = 1;
inline void CreateAnnotationRequest::clear_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.ClearToEmpty();
}
inline const std::string& CreateAnnotationRequest::ownerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationRequest.ownerId)
  return _internal_ownerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAnnotationRequest::set_ownerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.CreateAnnotationRequest.ownerId)
}
inline std::string* CreateAnnotationRequest::mutable_ownerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationRequest.ownerId)
  return _s;
}
inline const std::string& CreateAnnotationRequest::_internal_ownerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerid_.Get();
}
inline void CreateAnnotationRequest::_internal_set_ownerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(value, GetArena());
}
inline std::string* CreateAnnotationRequest::_internal_mutable_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ownerid_.Mutable( GetArena());
}
inline std::string* CreateAnnotationRequest::release_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationRequest.ownerId)
  return _impl_.ownerid_.Release();
}
inline void CreateAnnotationRequest::set_allocated_ownerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ownerid_.IsDefault()) {
          _impl_.ownerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateAnnotationRequest.ownerId)
}

// string dataSetId = 2;
inline void CreateAnnotationRequest::clear_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.ClearToEmpty();
}
inline const std::string& CreateAnnotationRequest::datasetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationRequest.dataSetId)
  return _internal_datasetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAnnotationRequest::set_datasetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.CreateAnnotationRequest.dataSetId)
}
inline std::string* CreateAnnotationRequest::mutable_datasetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_datasetid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationRequest.dataSetId)
  return _s;
}
inline const std::string& CreateAnnotationRequest::_internal_datasetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datasetid_.Get();
}
inline void CreateAnnotationRequest::_internal_set_datasetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(value, GetArena());
}
inline std::string* CreateAnnotationRequest::_internal_mutable_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.datasetid_.Mutable( GetArena());
}
inline std::string* CreateAnnotationRequest::release_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationRequest.dataSetId)
  return _impl_.datasetid_.Release();
}
inline void CreateAnnotationRequest::set_allocated_datasetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.datasetid_.IsDefault()) {
          _impl_.datasetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateAnnotationRequest.dataSetId)
}

// .dp.service.annotation.CommentAnnotation commentAnnotation = 10;
inline bool CreateAnnotationRequest::has_commentannotation() const {
  return annotation_case() == kCommentAnnotation;
}
inline bool CreateAnnotationRequest::_internal_has_commentannotation() const {
  return annotation_case() == kCommentAnnotation;
}
inline void CreateAnnotationRequest::set_has_commentannotation() {
  _impl_._oneof_case_[0] = kCommentAnnotation;
}
inline void CreateAnnotationRequest::clear_commentannotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (annotation_case() == kCommentAnnotation) {
    if (GetArena() == nullptr) {
      delete _impl_.annotation_.commentannotation_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.annotation_.commentannotation_);
    }
    clear_has_annotation();
  }
}
inline ::dp::service::annotation::CommentAnnotation* CreateAnnotationRequest::release_commentannotation() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationRequest.commentAnnotation)
  if (annotation_case() == kCommentAnnotation) {
    clear_has_annotation();
    auto* temp = _impl_.annotation_.commentannotation_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.annotation_.commentannotation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::CommentAnnotation& CreateAnnotationRequest::_internal_commentannotation() const {
  return annotation_case() == kCommentAnnotation ? *_impl_.annotation_.commentannotation_ : reinterpret_cast<::dp::service::annotation::CommentAnnotation&>(::dp::service::annotation::_CommentAnnotation_default_instance_);
}
inline const ::dp::service::annotation::CommentAnnotation& CreateAnnotationRequest::commentannotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationRequest.commentAnnotation)
  return _internal_commentannotation();
}
inline ::dp::service::annotation::CommentAnnotation* CreateAnnotationRequest::unsafe_arena_release_commentannotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.CreateAnnotationRequest.commentAnnotation)
  if (annotation_case() == kCommentAnnotation) {
    clear_has_annotation();
    auto* temp = _impl_.annotation_.commentannotation_;
    _impl_.annotation_.commentannotation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateAnnotationRequest::unsafe_arena_set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_annotation();
  if (value) {
    set_has_commentannotation();
    _impl_.annotation_.commentannotation_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateAnnotationRequest.commentAnnotation)
}
inline ::dp::service::annotation::CommentAnnotation* CreateAnnotationRequest::_internal_mutable_commentannotation() {
  if (annotation_case() != kCommentAnnotation) {
    clear_annotation();
    set_has_commentannotation();
    _impl_.annotation_.commentannotation_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::CommentAnnotation>(GetArena());
  }
  return _impl_.annotation_.commentannotation_;
}
inline ::dp::service::annotation::CommentAnnotation* CreateAnnotationRequest::mutable_commentannotation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::CommentAnnotation* _msg = _internal_mutable_commentannotation();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationRequest.commentAnnotation)
  return _msg;
}

inline bool CreateAnnotationRequest::has_annotation() const {
  return annotation_case() != ANNOTATION_NOT_SET;
}
inline void CreateAnnotationRequest::clear_has_annotation() {
  _impl_._oneof_case_[0] = ANNOTATION_NOT_SET;
}
inline CreateAnnotationRequest::AnnotationCase CreateAnnotationRequest::annotation_case() const {
  return CreateAnnotationRequest::AnnotationCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// CreateAnnotationResponse_CreateAnnotationResult

// string annotationId = 1;
inline void CreateAnnotationResponse_CreateAnnotationResult::clear_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.ClearToEmpty();
}
inline const std::string& CreateAnnotationResponse_CreateAnnotationResult::annotationid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult.annotationId)
  return _internal_annotationid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAnnotationResponse_CreateAnnotationResult::set_annotationid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult.annotationId)
}
inline std::string* CreateAnnotationResponse_CreateAnnotationResult::mutable_annotationid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_annotationid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult.annotationId)
  return _s;
}
inline const std::string& CreateAnnotationResponse_CreateAnnotationResult::_internal_annotationid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.annotationid_.Get();
}
inline void CreateAnnotationResponse_CreateAnnotationResult::_internal_set_annotationid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.Set(value, GetArena());
}
inline std::string* CreateAnnotationResponse_CreateAnnotationResult::_internal_mutable_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.annotationid_.Mutable( GetArena());
}
inline std::string* CreateAnnotationResponse_CreateAnnotationResult::release_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult.annotationId)
  return _impl_.annotationid_.Release();
}
inline void CreateAnnotationResponse_CreateAnnotationResult::set_allocated_annotationid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.annotationid_.IsDefault()) {
          _impl_.annotationid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult.annotationId)
}

// -------------------------------------------------------------------

// CreateAnnotationResponse

// .Timestamp responseTime = 1;
inline bool CreateAnnotationResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& CreateAnnotationResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& CreateAnnotationResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationResponse.responseTime)
  return _internal_responsetime();
}
inline void CreateAnnotationResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateAnnotationResponse.responseTime)
}
inline ::Timestamp* CreateAnnotationResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* CreateAnnotationResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* CreateAnnotationResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* CreateAnnotationResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationResponse.responseTime)
  return _msg;
}
inline void CreateAnnotationResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CreateAnnotationResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool CreateAnnotationResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool CreateAnnotationResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void CreateAnnotationResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* CreateAnnotationResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& CreateAnnotationResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& CreateAnnotationResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* CreateAnnotationResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.CreateAnnotationResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateAnnotationResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateAnnotationResponse.exceptionalResult)
}
inline ::ExceptionalResult* CreateAnnotationResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* CreateAnnotationResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationResponse.exceptionalResult)
  return _msg;
}

// .dp.service.annotation.CreateAnnotationResponse.CreateAnnotationResult createAnnotationResult = 11;
inline bool CreateAnnotationResponse::has_createannotationresult() const {
  return result_case() == kCreateAnnotationResult;
}
inline bool CreateAnnotationResponse::_internal_has_createannotationresult() const {
  return result_case() == kCreateAnnotationResult;
}
inline void CreateAnnotationResponse::set_has_createannotationresult() {
  _impl_._oneof_case_[0] = kCreateAnnotationResult;
}
inline void CreateAnnotationResponse::clear_createannotationresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kCreateAnnotationResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.createannotationresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.createannotationresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* CreateAnnotationResponse::release_createannotationresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.CreateAnnotationResponse.createAnnotationResult)
  if (result_case() == kCreateAnnotationResult) {
    clear_has_result();
    auto* temp = _impl_.result_.createannotationresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.createannotationresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult& CreateAnnotationResponse::_internal_createannotationresult() const {
  return result_case() == kCreateAnnotationResult ? *_impl_.result_.createannotationresult_ : reinterpret_cast<::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult&>(::dp::service::annotation::_CreateAnnotationResponse_CreateAnnotationResult_default_instance_);
}
inline const ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult& CreateAnnotationResponse::createannotationresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CreateAnnotationResponse.createAnnotationResult)
  return _internal_createannotationresult();
}
inline ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* CreateAnnotationResponse::unsafe_arena_release_createannotationresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.CreateAnnotationResponse.createAnnotationResult)
  if (result_case() == kCreateAnnotationResult) {
    clear_has_result();
    auto* temp = _impl_.result_.createannotationresult_;
    _impl_.result_.createannotationresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CreateAnnotationResponse::unsafe_arena_set_allocated_createannotationresult(::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_createannotationresult();
    _impl_.result_.createannotationresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.CreateAnnotationResponse.createAnnotationResult)
}
inline ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* CreateAnnotationResponse::_internal_mutable_createannotationresult() {
  if (result_case() != kCreateAnnotationResult) {
    clear_result();
    set_has_createannotationresult();
    _impl_.result_.createannotationresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult>(GetArena());
  }
  return _impl_.result_.createannotationresult_;
}
inline ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* CreateAnnotationResponse::mutable_createannotationresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::CreateAnnotationResponse_CreateAnnotationResult* _msg = _internal_mutable_createannotationresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CreateAnnotationResponse.createAnnotationResult)
  return _msg;
}

inline bool CreateAnnotationResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void CreateAnnotationResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline CreateAnnotationResponse::ResultCase CreateAnnotationResponse::result_case() const {
  return CreateAnnotationResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion

// string ownerId = 1;
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::clear_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.ClearToEmpty();
}
inline const std::string& QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::ownerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion.ownerId)
  return _internal_ownerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::set_ownerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion.ownerId)
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::mutable_ownerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion.ownerId)
  return _s;
}
inline const std::string& QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::_internal_ownerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerid_.Get();
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::_internal_set_ownerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(value, GetArena());
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::_internal_mutable_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ownerid_.Mutable( GetArena());
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::release_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion.ownerId)
  return _impl_.ownerid_.Release();
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion::set_allocated_ownerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ownerid_.IsDefault()) {
          _impl_.ownerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion.ownerId)
}

// -------------------------------------------------------------------

// QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion

// string commentText = 1;
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::clear_commenttext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commenttext_.ClearToEmpty();
}
inline const std::string& QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::commenttext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion.commentText)
  return _internal_commenttext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::set_commenttext(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commenttext_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion.commentText)
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::mutable_commenttext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_commenttext();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion.commentText)
  return _s;
}
inline const std::string& QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::_internal_commenttext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commenttext_.Get();
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::_internal_set_commenttext(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commenttext_.Set(value, GetArena());
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::_internal_mutable_commenttext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.commenttext_.Mutable( GetArena());
}
inline std::string* QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::release_commenttext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion.commentText)
  return _impl_.commenttext_.Release();
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion::set_allocated_commenttext(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commenttext_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.commenttext_.IsDefault()) {
          _impl_.commenttext_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion.commentText)
}

// -------------------------------------------------------------------

// QueryAnnotationsRequest_QueryAnnotationsCriterion

// .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.OwnerCriterion ownerCriterion = 10;
inline bool QueryAnnotationsRequest_QueryAnnotationsCriterion::has_ownercriterion() const {
  return criterion_case() == kOwnerCriterion;
}
inline bool QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_has_ownercriterion() const {
  return criterion_case() == kOwnerCriterion;
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::set_has_ownercriterion() {
  _impl_._oneof_case_[0] = kOwnerCriterion;
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::clear_ownercriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kOwnerCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.ownercriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.ownercriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::release_ownercriterion() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.ownerCriterion)
  if (criterion_case() == kOwnerCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.ownercriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.ownercriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_ownercriterion() const {
  return criterion_case() == kOwnerCriterion ? *_impl_.criterion_.ownercriterion_ : reinterpret_cast<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion&>(::dp::service::annotation::_QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion_default_instance_);
}
inline const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion& QueryAnnotationsRequest_QueryAnnotationsCriterion::ownercriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.ownerCriterion)
  return _internal_ownercriterion();
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::unsafe_arena_release_ownercriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.ownerCriterion)
  if (criterion_case() == kOwnerCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.ownercriterion_;
    _impl_.criterion_.ownercriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::unsafe_arena_set_allocated_ownercriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_ownercriterion();
    _impl_.criterion_.ownercriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.ownerCriterion)
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_mutable_ownercriterion() {
  if (criterion_case() != kOwnerCriterion) {
    clear_criterion();
    set_has_ownercriterion();
    _impl_.criterion_.ownercriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion>(GetArena());
  }
  return _impl_.criterion_.ownercriterion_;
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::mutable_ownercriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_OwnerCriterion* _msg = _internal_mutable_ownercriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.ownerCriterion)
  return _msg;
}

// .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.CommentCriterion commentCriterion = 11;
inline bool QueryAnnotationsRequest_QueryAnnotationsCriterion::has_commentcriterion() const {
  return criterion_case() == kCommentCriterion;
}
inline bool QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_has_commentcriterion() const {
  return criterion_case() == kCommentCriterion;
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::set_has_commentcriterion() {
  _impl_._oneof_case_[0] = kCommentCriterion;
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::clear_commentcriterion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (criterion_case() == kCommentCriterion) {
    if (GetArena() == nullptr) {
      delete _impl_.criterion_.commentcriterion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.criterion_.commentcriterion_);
    }
    clear_has_criterion();
  }
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::release_commentcriterion() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.commentCriterion)
  if (criterion_case() == kCommentCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.commentcriterion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.criterion_.commentcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_commentcriterion() const {
  return criterion_case() == kCommentCriterion ? *_impl_.criterion_.commentcriterion_ : reinterpret_cast<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion&>(::dp::service::annotation::_QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion_default_instance_);
}
inline const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion& QueryAnnotationsRequest_QueryAnnotationsCriterion::commentcriterion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.commentCriterion)
  return _internal_commentcriterion();
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::unsafe_arena_release_commentcriterion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.commentCriterion)
  if (criterion_case() == kCommentCriterion) {
    clear_has_criterion();
    auto* temp = _impl_.criterion_.commentcriterion_;
    _impl_.criterion_.commentcriterion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::unsafe_arena_set_allocated_commentcriterion(::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_criterion();
  if (value) {
    set_has_commentcriterion();
    _impl_.criterion_.commentcriterion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.commentCriterion)
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::_internal_mutable_commentcriterion() {
  if (criterion_case() != kCommentCriterion) {
    clear_criterion();
    set_has_commentcriterion();
    _impl_.criterion_.commentcriterion_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion>(GetArena());
  }
  return _impl_.criterion_.commentcriterion_;
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* QueryAnnotationsRequest_QueryAnnotationsCriterion::mutable_commentcriterion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion_CommentCriterion* _msg = _internal_mutable_commentcriterion();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion.commentCriterion)
  return _msg;
}

inline bool QueryAnnotationsRequest_QueryAnnotationsCriterion::has_criterion() const {
  return criterion_case() != CRITERION_NOT_SET;
}
inline void QueryAnnotationsRequest_QueryAnnotationsCriterion::clear_has_criterion() {
  _impl_._oneof_case_[0] = CRITERION_NOT_SET;
}
inline QueryAnnotationsRequest_QueryAnnotationsCriterion::CriterionCase QueryAnnotationsRequest_QueryAnnotationsCriterion::criterion_case() const {
  return QueryAnnotationsRequest_QueryAnnotationsCriterion::CriterionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryAnnotationsRequest

// repeated .dp.service.annotation.QueryAnnotationsRequest.QueryAnnotationsCriterion criteria = 1;
inline int QueryAnnotationsRequest::_internal_criteria_size() const {
  return _internal_criteria().size();
}
inline int QueryAnnotationsRequest::criteria_size() const {
  return _internal_criteria_size();
}
inline void QueryAnnotationsRequest::clear_criteria() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.criteria_.Clear();
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion* QueryAnnotationsRequest::mutable_criteria(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsRequest.criteria)
  return _internal_mutable_criteria()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>* QueryAnnotationsRequest::mutable_criteria()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.QueryAnnotationsRequest.criteria)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_criteria();
}
inline const ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion& QueryAnnotationsRequest::criteria(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsRequest.criteria)
  return _internal_criteria().Get(index);
}
inline ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion* QueryAnnotationsRequest::add_criteria() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion* _add = _internal_mutable_criteria()->Add();
  // @@protoc_insertion_point(field_add:dp.service.annotation.QueryAnnotationsRequest.criteria)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>& QueryAnnotationsRequest::criteria() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.QueryAnnotationsRequest.criteria)
  return _internal_criteria();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>&
QueryAnnotationsRequest::_internal_criteria() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.criteria_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsRequest_QueryAnnotationsCriterion>*
QueryAnnotationsRequest::_internal_mutable_criteria() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.criteria_;
}

// -------------------------------------------------------------------

// QueryAnnotationsResponse_AnnotationsResult_Annotation

// string annotationId = 1;
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.ClearToEmpty();
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::annotationid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.annotationId)
  return _internal_annotationid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_annotationid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.annotationId)
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::mutable_annotationid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_annotationid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.annotationId)
  return _s;
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_annotationid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.annotationid_.Get();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_set_annotationid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.Set(value, GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_mutable_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.annotationid_.Mutable( GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::release_annotationid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.annotationId)
  return _impl_.annotationid_.Release();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_allocated_annotationid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.annotationid_.IsDefault()) {
          _impl_.annotationid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.annotationId)
}

// string ownerId = 2;
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.ClearToEmpty();
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::ownerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.ownerId)
  return _internal_ownerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_ownerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.ownerId)
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::mutable_ownerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.ownerId)
  return _s;
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_ownerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerid_.Get();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_set_ownerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(value, GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_mutable_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ownerid_.Mutable( GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::release_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.ownerId)
  return _impl_.ownerid_.Release();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_allocated_ownerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ownerid_.IsDefault()) {
          _impl_.ownerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.ownerId)
}

// string dataSetId = 3;
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.ClearToEmpty();
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::datasetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSetId)
  return _internal_datasetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_datasetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSetId)
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::mutable_datasetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_datasetid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSetId)
  return _s;
}
inline const std::string& QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_datasetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datasetid_.Get();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_set_datasetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(value, GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_mutable_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.datasetid_.Mutable( GetArena());
}
inline std::string* QueryAnnotationsResponse_AnnotationsResult_Annotation::release_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSetId)
  return _impl_.datasetid_.Release();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_allocated_datasetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.datasetid_.IsDefault()) {
          _impl_.datasetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSetId)
}

// .dp.service.annotation.DataSet dataSet = 4;
inline bool QueryAnnotationsResponse_AnnotationsResult_Annotation::has_dataset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dataset_ != nullptr);
  return value;
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ != nullptr) _impl_.dataset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::dp::service::annotation::DataSet& QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_dataset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::dp::service::annotation::DataSet* p = _impl_.dataset_;
  return p != nullptr ? *p : reinterpret_cast<const ::dp::service::annotation::DataSet&>(::dp::service::annotation::_DataSet_default_instance_);
}
inline const ::dp::service::annotation::DataSet& QueryAnnotationsResponse_AnnotationsResult_Annotation::dataset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSet)
  return _internal_dataset();
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::unsafe_arena_set_allocated_dataset(::dp::service::annotation::DataSet* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dataset_);
  }
  _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSet)
}
inline ::dp::service::annotation::DataSet* QueryAnnotationsResponse_AnnotationsResult_Annotation::release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dp::service::annotation::DataSet* released = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::dp::service::annotation::DataSet* QueryAnnotationsResponse_AnnotationsResult_Annotation::unsafe_arena_release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSet)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dp::service::annotation::DataSet* temp = _impl_.dataset_;
  _impl_.dataset_ = nullptr;
  return temp;
}
inline ::dp::service::annotation::DataSet* QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_mutable_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dataset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::DataSet>(GetArena());
    _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(p);
  }
  return _impl_.dataset_;
}
inline ::dp::service::annotation::DataSet* QueryAnnotationsResponse_AnnotationsResult_Annotation::mutable_dataset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::dp::service::annotation::DataSet* _msg = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSet)
  return _msg;
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_allocated_dataset(::dp::service::annotation::DataSet* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dataset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dataset_ = reinterpret_cast<::dp::service::annotation::DataSet*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.dataSet)
}

// .dp.service.annotation.CommentAnnotation commentAnnotation = 10;
inline bool QueryAnnotationsResponse_AnnotationsResult_Annotation::has_commentannotation() const {
  return annotation_case() == kCommentAnnotation;
}
inline bool QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_has_commentannotation() const {
  return annotation_case() == kCommentAnnotation;
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::set_has_commentannotation() {
  _impl_._oneof_case_[0] = kCommentAnnotation;
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_commentannotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (annotation_case() == kCommentAnnotation) {
    if (GetArena() == nullptr) {
      delete _impl_.annotation_.commentannotation_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.annotation_.commentannotation_);
    }
    clear_has_annotation();
  }
}
inline ::dp::service::annotation::CommentAnnotation* QueryAnnotationsResponse_AnnotationsResult_Annotation::release_commentannotation() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.commentAnnotation)
  if (annotation_case() == kCommentAnnotation) {
    clear_has_annotation();
    auto* temp = _impl_.annotation_.commentannotation_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.annotation_.commentannotation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::CommentAnnotation& QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_commentannotation() const {
  return annotation_case() == kCommentAnnotation ? *_impl_.annotation_.commentannotation_ : reinterpret_cast<::dp::service::annotation::CommentAnnotation&>(::dp::service::annotation::_CommentAnnotation_default_instance_);
}
inline const ::dp::service::annotation::CommentAnnotation& QueryAnnotationsResponse_AnnotationsResult_Annotation::commentannotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.commentAnnotation)
  return _internal_commentannotation();
}
inline ::dp::service::annotation::CommentAnnotation* QueryAnnotationsResponse_AnnotationsResult_Annotation::unsafe_arena_release_commentannotation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.commentAnnotation)
  if (annotation_case() == kCommentAnnotation) {
    clear_has_annotation();
    auto* temp = _impl_.annotation_.commentannotation_;
    _impl_.annotation_.commentannotation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::unsafe_arena_set_allocated_commentannotation(::dp::service::annotation::CommentAnnotation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_annotation();
  if (value) {
    set_has_commentannotation();
    _impl_.annotation_.commentannotation_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.commentAnnotation)
}
inline ::dp::service::annotation::CommentAnnotation* QueryAnnotationsResponse_AnnotationsResult_Annotation::_internal_mutable_commentannotation() {
  if (annotation_case() != kCommentAnnotation) {
    clear_annotation();
    set_has_commentannotation();
    _impl_.annotation_.commentannotation_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::CommentAnnotation>(GetArena());
  }
  return _impl_.annotation_.commentannotation_;
}
inline ::dp::service::annotation::CommentAnnotation* QueryAnnotationsResponse_AnnotationsResult_Annotation::mutable_commentannotation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::CommentAnnotation* _msg = _internal_mutable_commentannotation();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation.commentAnnotation)
  return _msg;
}

inline bool QueryAnnotationsResponse_AnnotationsResult_Annotation::has_annotation() const {
  return annotation_case() != ANNOTATION_NOT_SET;
}
inline void QueryAnnotationsResponse_AnnotationsResult_Annotation::clear_has_annotation() {
  _impl_._oneof_case_[0] = ANNOTATION_NOT_SET;
}
inline QueryAnnotationsResponse_AnnotationsResult_Annotation::AnnotationCase QueryAnnotationsResponse_AnnotationsResult_Annotation::annotation_case() const {
  return QueryAnnotationsResponse_AnnotationsResult_Annotation::AnnotationCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// QueryAnnotationsResponse_AnnotationsResult

// repeated .dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.Annotation annotations = 1;
inline int QueryAnnotationsResponse_AnnotationsResult::_internal_annotations_size() const {
  return _internal_annotations().size();
}
inline int QueryAnnotationsResponse_AnnotationsResult::annotations_size() const {
  return _internal_annotations_size();
}
inline void QueryAnnotationsResponse_AnnotationsResult::clear_annotations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotations_.Clear();
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation* QueryAnnotationsResponse_AnnotationsResult::mutable_annotations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.annotations)
  return _internal_mutable_annotations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>* QueryAnnotationsResponse_AnnotationsResult::mutable_annotations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.annotations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_annotations();
}
inline const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation& QueryAnnotationsResponse_AnnotationsResult::annotations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.annotations)
  return _internal_annotations().Get(index);
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation* QueryAnnotationsResponse_AnnotationsResult::add_annotations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation* _add = _internal_mutable_annotations()->Add();
  // @@protoc_insertion_point(field_add:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.annotations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>& QueryAnnotationsResponse_AnnotationsResult::annotations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult.annotations)
  return _internal_annotations();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>&
QueryAnnotationsResponse_AnnotationsResult::_internal_annotations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.annotations_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult_Annotation>*
QueryAnnotationsResponse_AnnotationsResult::_internal_mutable_annotations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.annotations_;
}

// -------------------------------------------------------------------

// QueryAnnotationsResponse

// .Timestamp responseTime = 1;
inline bool QueryAnnotationsResponse::has_responsetime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.responsetime_ != nullptr);
  return value;
}
inline const ::Timestamp& QueryAnnotationsResponse::_internal_responsetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.responsetime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& QueryAnnotationsResponse::responsetime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.responseTime)
  return _internal_responsetime();
}
inline void QueryAnnotationsResponse::unsafe_arena_set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }
  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsResponse.responseTime)
}
inline ::Timestamp* QueryAnnotationsResponse::release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* QueryAnnotationsResponse::unsafe_arena_release_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.responseTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.responsetime_;
  _impl_.responsetime_ = nullptr;
  return temp;
}
inline ::Timestamp* QueryAnnotationsResponse::_internal_mutable_responsetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.responsetime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.responsetime_;
}
inline ::Timestamp* QueryAnnotationsResponse::mutable_responsetime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_responsetime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.responseTime)
  return _msg;
}
inline void QueryAnnotationsResponse::set_allocated_responsetime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.responsetime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.responsetime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.QueryAnnotationsResponse.responseTime)
}

// .ExceptionalResult exceptionalResult = 10;
inline bool QueryAnnotationsResponse::has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline bool QueryAnnotationsResponse::_internal_has_exceptionalresult() const {
  return result_case() == kExceptionalResult;
}
inline void QueryAnnotationsResponse::set_has_exceptionalresult() {
  _impl_._oneof_case_[0] = kExceptionalResult;
}
inline ::ExceptionalResult* QueryAnnotationsResponse::release_exceptionalresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ExceptionalResult& QueryAnnotationsResponse::_internal_exceptionalresult() const {
  return result_case() == kExceptionalResult ? *_impl_.result_.exceptionalresult_ : reinterpret_cast<::ExceptionalResult&>(::_ExceptionalResult_default_instance_);
}
inline const ::ExceptionalResult& QueryAnnotationsResponse::exceptionalresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.exceptionalResult)
  return _internal_exceptionalresult();
}
inline ::ExceptionalResult* QueryAnnotationsResponse::unsafe_arena_release_exceptionalresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryAnnotationsResponse.exceptionalResult)
  if (result_case() == kExceptionalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.exceptionalresult_;
    _impl_.result_.exceptionalresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryAnnotationsResponse::unsafe_arena_set_allocated_exceptionalresult(::ExceptionalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsResponse.exceptionalResult)
}
inline ::ExceptionalResult* QueryAnnotationsResponse::_internal_mutable_exceptionalresult() {
  if (result_case() != kExceptionalResult) {
    clear_result();
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ =
        ::google::protobuf::Message::DefaultConstruct<::ExceptionalResult>(GetArena());
  }
  return _impl_.result_.exceptionalresult_;
}
inline ::ExceptionalResult* QueryAnnotationsResponse::mutable_exceptionalresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ExceptionalResult* _msg = _internal_mutable_exceptionalresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.exceptionalResult)
  return _msg;
}

// .dp.service.annotation.QueryAnnotationsResponse.AnnotationsResult annotationsResult = 11;
inline bool QueryAnnotationsResponse::has_annotationsresult() const {
  return result_case() == kAnnotationsResult;
}
inline bool QueryAnnotationsResponse::_internal_has_annotationsresult() const {
  return result_case() == kAnnotationsResult;
}
inline void QueryAnnotationsResponse::set_has_annotationsresult() {
  _impl_._oneof_case_[0] = kAnnotationsResult;
}
inline void QueryAnnotationsResponse::clear_annotationsresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kAnnotationsResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.annotationsresult_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.annotationsresult_);
    }
    clear_has_result();
  }
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* QueryAnnotationsResponse::release_annotationsresult() {
  // @@protoc_insertion_point(field_release:dp.service.annotation.QueryAnnotationsResponse.annotationsResult)
  if (result_case() == kAnnotationsResult) {
    clear_has_result();
    auto* temp = _impl_.result_.annotationsresult_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.annotationsresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult& QueryAnnotationsResponse::_internal_annotationsresult() const {
  return result_case() == kAnnotationsResult ? *_impl_.result_.annotationsresult_ : reinterpret_cast<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult&>(::dp::service::annotation::_QueryAnnotationsResponse_AnnotationsResult_default_instance_);
}
inline const ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult& QueryAnnotationsResponse::annotationsresult() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.QueryAnnotationsResponse.annotationsResult)
  return _internal_annotationsresult();
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* QueryAnnotationsResponse::unsafe_arena_release_annotationsresult() {
  // @@protoc_insertion_point(field_unsafe_arena_release:dp.service.annotation.QueryAnnotationsResponse.annotationsResult)
  if (result_case() == kAnnotationsResult) {
    clear_has_result();
    auto* temp = _impl_.result_.annotationsresult_;
    _impl_.result_.annotationsresult_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QueryAnnotationsResponse::unsafe_arena_set_allocated_annotationsresult(::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_annotationsresult();
    _impl_.result_.annotationsresult_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.QueryAnnotationsResponse.annotationsResult)
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* QueryAnnotationsResponse::_internal_mutable_annotationsresult() {
  if (result_case() != kAnnotationsResult) {
    clear_result();
    set_has_annotationsresult();
    _impl_.result_.annotationsresult_ =
        ::google::protobuf::Message::DefaultConstruct<::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult>(GetArena());
  }
  return _impl_.result_.annotationsresult_;
}
inline ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* QueryAnnotationsResponse::mutable_annotationsresult() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::dp::service::annotation::QueryAnnotationsResponse_AnnotationsResult* _msg = _internal_mutable_annotationsresult();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.QueryAnnotationsResponse.annotationsResult)
  return _msg;
}

inline bool QueryAnnotationsResponse::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void QueryAnnotationsResponse::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline QueryAnnotationsResponse::ResultCase QueryAnnotationsResponse::result_case() const {
  return QueryAnnotationsResponse::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataSet

// string dataSetId = 1;
inline void DataSet::clear_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.ClearToEmpty();
}
inline const std::string& DataSet::datasetid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataSet.dataSetId)
  return _internal_datasetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSet::set_datasetid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataSet.dataSetId)
}
inline std::string* DataSet::mutable_datasetid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_datasetid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataSet.dataSetId)
  return _s;
}
inline const std::string& DataSet::_internal_datasetid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datasetid_.Get();
}
inline void DataSet::_internal_set_datasetid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.Set(value, GetArena());
}
inline std::string* DataSet::_internal_mutable_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.datasetid_.Mutable( GetArena());
}
inline std::string* DataSet::release_datasetid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataSet.dataSetId)
  return _impl_.datasetid_.Release();
}
inline void DataSet::set_allocated_datasetid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datasetid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.datasetid_.IsDefault()) {
          _impl_.datasetid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataSet.dataSetId)
}

// string name = 2;
inline void DataSet::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DataSet::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataSet.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSet::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataSet.name)
}
inline std::string* DataSet::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataSet.name)
  return _s;
}
inline const std::string& DataSet::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void DataSet::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* DataSet::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* DataSet::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataSet.name)
  return _impl_.name_.Release();
}
inline void DataSet::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataSet.name)
}

// string ownerId = 3;
inline void DataSet::clear_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.ClearToEmpty();
}
inline const std::string& DataSet::ownerid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataSet.ownerId)
  return _internal_ownerid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSet::set_ownerid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataSet.ownerId)
}
inline std::string* DataSet::mutable_ownerid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerid();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataSet.ownerId)
  return _s;
}
inline const std::string& DataSet::_internal_ownerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerid_.Get();
}
inline void DataSet::_internal_set_ownerid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.Set(value, GetArena());
}
inline std::string* DataSet::_internal_mutable_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ownerid_.Mutable( GetArena());
}
inline std::string* DataSet::release_ownerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataSet.ownerId)
  return _impl_.ownerid_.Release();
}
inline void DataSet::set_allocated_ownerid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ownerid_.IsDefault()) {
          _impl_.ownerid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataSet.ownerId)
}

// string description = 4;
inline void DataSet::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& DataSet::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataSet.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DataSet::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataSet.description)
}
inline std::string* DataSet::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataSet.description)
  return _s;
}
inline const std::string& DataSet::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void DataSet::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* DataSet::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* DataSet::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataSet.description)
  return _impl_.description_.Release();
}
inline void DataSet::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataSet.description)
}

// repeated .dp.service.annotation.DataBlock dataBlocks = 5;
inline int DataSet::_internal_datablocks_size() const {
  return _internal_datablocks().size();
}
inline int DataSet::datablocks_size() const {
  return _internal_datablocks_size();
}
inline void DataSet::clear_datablocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datablocks_.Clear();
}
inline ::dp::service::annotation::DataBlock* DataSet::mutable_datablocks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataSet.dataBlocks)
  return _internal_mutable_datablocks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>* DataSet::mutable_datablocks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.DataSet.dataBlocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_datablocks();
}
inline const ::dp::service::annotation::DataBlock& DataSet::datablocks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataSet.dataBlocks)
  return _internal_datablocks().Get(index);
}
inline ::dp::service::annotation::DataBlock* DataSet::add_datablocks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dp::service::annotation::DataBlock* _add = _internal_mutable_datablocks()->Add();
  // @@protoc_insertion_point(field_add:dp.service.annotation.DataSet.dataBlocks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>& DataSet::datablocks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.DataSet.dataBlocks)
  return _internal_datablocks();
}
inline const ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>&
DataSet::_internal_datablocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datablocks_;
}
inline ::google::protobuf::RepeatedPtrField<::dp::service::annotation::DataBlock>*
DataSet::_internal_mutable_datablocks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.datablocks_;
}

// -------------------------------------------------------------------

// DataBlock

// .Timestamp beginTime = 1;
inline bool DataBlock::has_begintime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.begintime_ != nullptr);
  return value;
}
inline const ::Timestamp& DataBlock::_internal_begintime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.begintime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& DataBlock::begintime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataBlock.beginTime)
  return _internal_begintime();
}
inline void DataBlock::unsafe_arena_set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }
  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.DataBlock.beginTime)
}
inline ::Timestamp* DataBlock::release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* released = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* DataBlock::unsafe_arena_release_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataBlock.beginTime)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Timestamp* temp = _impl_.begintime_;
  _impl_.begintime_ = nullptr;
  return temp;
}
inline ::Timestamp* DataBlock::_internal_mutable_begintime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.begintime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.begintime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.begintime_;
}
inline ::Timestamp* DataBlock::mutable_begintime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Timestamp* _msg = _internal_mutable_begintime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataBlock.beginTime)
  return _msg;
}
inline void DataBlock::set_allocated_begintime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.begintime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.begintime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataBlock.beginTime)
}

// .Timestamp endTime = 2;
inline bool DataBlock::has_endtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endtime_ != nullptr);
  return value;
}
inline const ::Timestamp& DataBlock::_internal_endtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Timestamp* p = _impl_.endtime_;
  return p != nullptr ? *p : reinterpret_cast<const ::Timestamp&>(::_Timestamp_default_instance_);
}
inline const ::Timestamp& DataBlock::endtime() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataBlock.endTime)
  return _internal_endtime();
}
inline void DataBlock::unsafe_arena_set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }
  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dp.service.annotation.DataBlock.endTime)
}
inline ::Timestamp* DataBlock::release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* released = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Timestamp* DataBlock::unsafe_arena_release_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.DataBlock.endTime)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Timestamp* temp = _impl_.endtime_;
  _impl_.endtime_ = nullptr;
  return temp;
}
inline ::Timestamp* DataBlock::_internal_mutable_endtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endtime_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Timestamp>(GetArena());
    _impl_.endtime_ = reinterpret_cast<::Timestamp*>(p);
  }
  return _impl_.endtime_;
}
inline ::Timestamp* DataBlock::mutable_endtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Timestamp* _msg = _internal_mutable_endtime();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataBlock.endTime)
  return _msg;
}
inline void DataBlock::set_allocated_endtime(::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endtime_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endtime_ = reinterpret_cast<::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.DataBlock.endTime)
}

// repeated string pvNames = 3;
inline int DataBlock::_internal_pvnames_size() const {
  return _internal_pvnames().size();
}
inline int DataBlock::pvnames_size() const {
  return _internal_pvnames_size();
}
inline void DataBlock::clear_pvnames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pvnames_.Clear();
}
inline std::string* DataBlock::add_pvnames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pvnames()->Add();
  // @@protoc_insertion_point(field_add_mutable:dp.service.annotation.DataBlock.pvNames)
  return _s;
}
inline const std::string& DataBlock::pvnames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.DataBlock.pvNames)
  return _internal_pvnames().Get(index);
}
inline std::string* DataBlock::mutable_pvnames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.DataBlock.pvNames)
  return _internal_mutable_pvnames()->Mutable(index);
}
inline void DataBlock::set_pvnames(int index, const std::string& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::set_pvnames(int index, std::string&& value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::set_pvnames(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_pvnames()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::set_pvnames(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::set_pvnames(int index, absl::string_view value) {
  _internal_mutable_pvnames()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::add_pvnames(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::add_pvnames(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::add_pvnames(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::add_pvnames(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dp.service.annotation.DataBlock.pvNames)
}
inline void DataBlock::add_pvnames(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pvnames()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:dp.service.annotation.DataBlock.pvNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DataBlock::pvnames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dp.service.annotation.DataBlock.pvNames)
  return _internal_pvnames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DataBlock::mutable_pvnames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dp.service.annotation.DataBlock.pvNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pvnames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DataBlock::_internal_pvnames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pvnames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DataBlock::_internal_mutable_pvnames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pvnames_;
}

// -------------------------------------------------------------------

// CommentAnnotation

// string comment = 1;
inline void CommentAnnotation::clear_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.ClearToEmpty();
}
inline const std::string& CommentAnnotation::comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dp.service.annotation.CommentAnnotation.comment)
  return _internal_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CommentAnnotation::set_comment(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dp.service.annotation.CommentAnnotation.comment)
}
inline std::string* CommentAnnotation::mutable_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_comment();
  // @@protoc_insertion_point(field_mutable:dp.service.annotation.CommentAnnotation.comment)
  return _s;
}
inline const std::string& CommentAnnotation::_internal_comment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comment_.Get();
}
inline void CommentAnnotation::_internal_set_comment(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.Set(value, GetArena());
}
inline std::string* CommentAnnotation::_internal_mutable_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.comment_.Mutable( GetArena());
}
inline std::string* CommentAnnotation::release_comment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dp.service.annotation.CommentAnnotation.comment)
  return _impl_.comment_.Release();
}
inline void CommentAnnotation::set_allocated_comment(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.comment_.IsDefault()) {
          _impl_.comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dp.service.annotation.CommentAnnotation.comment)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace annotation
}  // namespace service
}  // namespace dp


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_annotation_2eproto_2epb_2eh
